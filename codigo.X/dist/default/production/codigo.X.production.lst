

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 04 12:17:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1827 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0095                     	;# 
   101     0096                     	;# 
   102     0097                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009B                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     0111                     	;# 
   114     0112                     	;# 
   115     0113                     	;# 
   116     0114                     	;# 
   117     0115                     	;# 
   118     0116                     	;# 
   119     0117                     	;# 
   120     0118                     	;# 
   121     0119                     	;# 
   122     011A                     	;# 
   123     011B                     	;# 
   124     011D                     	;# 
   125     011E                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0191                     	;# 
   129     0191                     	;# 
   130     0192                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019B                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019E                     	;# 
   147     019F                     	;# 
   148     020C                     	;# 
   149     020D                     	;# 
   150     0211                     	;# 
   151     0211                     	;# 
   152     0212                     	;# 
   153     0212                     	;# 
   154     0213                     	;# 
   155     0213                     	;# 
   156     0214                     	;# 
   157     0214                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0215                     	;# 
   161     0216                     	;# 
   162     0216                     	;# 
   163     0217                     	;# 
   164     0217                     	;# 
   165     0219                     	;# 
   166     021A                     	;# 
   167     021B                     	;# 
   168     021C                     	;# 
   169     021D                     	;# 
   170     021E                     	;# 
   171     021F                     	;# 
   172     0291                     	;# 
   173     0291                     	;# 
   174     0292                     	;# 
   175     0293                     	;# 
   176     0294                     	;# 
   177     0295                     	;# 
   178     0295                     	;# 
   179     0296                     	;# 
   180     0298                     	;# 
   181     0298                     	;# 
   182     0299                     	;# 
   183     029A                     	;# 
   184     029B                     	;# 
   185     029C                     	;# 
   186     029C                     	;# 
   187     029D                     	;# 
   188     029E                     	;# 
   189     029E                     	;# 
   190     0311                     	;# 
   191     0311                     	;# 
   192     0312                     	;# 
   193     0313                     	;# 
   194     0318                     	;# 
   195     0318                     	;# 
   196     0319                     	;# 
   197     031A                     	;# 
   198     0394                     	;# 
   199     0395                     	;# 
   200     0396                     	;# 
   201     039A                     	;# 
   202     039C                     	;# 
   203     039D                     	;# 
   204     039E                     	;# 
   205     039F                     	;# 
   206     0415                     	;# 
   207     0416                     	;# 
   208     0417                     	;# 
   209     041C                     	;# 
   210     041D                     	;# 
   211     041E                     	;# 
   212     0FE4                     	;# 
   213     0FE5                     	;# 
   214     0FE6                     	;# 
   215     0FE7                     	;# 
   216     0FE8                     	;# 
   217     0FE9                     	;# 
   218     0FEA                     	;# 
   219     0FEB                     	;# 
   220     0FED                     	;# 
   221     0FEE                     	;# 
   222     0FEF                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0094                     	;# 
   258     0095                     	;# 
   259     0096                     	;# 
   260     0097                     	;# 
   261     0098                     	;# 
   262     0099                     	;# 
   263     009A                     	;# 
   264     009B                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     010C                     	;# 
   270     010D                     	;# 
   271     0111                     	;# 
   272     0112                     	;# 
   273     0113                     	;# 
   274     0114                     	;# 
   275     0115                     	;# 
   276     0116                     	;# 
   277     0117                     	;# 
   278     0118                     	;# 
   279     0119                     	;# 
   280     011A                     	;# 
   281     011B                     	;# 
   282     011D                     	;# 
   283     011E                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020C                     	;# 
   307     020D                     	;# 
   308     0211                     	;# 
   309     0211                     	;# 
   310     0212                     	;# 
   311     0212                     	;# 
   312     0213                     	;# 
   313     0213                     	;# 
   314     0214                     	;# 
   315     0214                     	;# 
   316     0215                     	;# 
   317     0215                     	;# 
   318     0215                     	;# 
   319     0216                     	;# 
   320     0216                     	;# 
   321     0217                     	;# 
   322     0217                     	;# 
   323     0219                     	;# 
   324     021A                     	;# 
   325     021B                     	;# 
   326     021C                     	;# 
   327     021D                     	;# 
   328     021E                     	;# 
   329     021F                     	;# 
   330     0291                     	;# 
   331     0291                     	;# 
   332     0292                     	;# 
   333     0293                     	;# 
   334     0294                     	;# 
   335     0295                     	;# 
   336     0295                     	;# 
   337     0296                     	;# 
   338     0298                     	;# 
   339     0298                     	;# 
   340     0299                     	;# 
   341     029A                     	;# 
   342     029B                     	;# 
   343     029C                     	;# 
   344     029C                     	;# 
   345     029D                     	;# 
   346     029E                     	;# 
   347     029E                     	;# 
   348     0311                     	;# 
   349     0311                     	;# 
   350     0312                     	;# 
   351     0313                     	;# 
   352     0318                     	;# 
   353     0318                     	;# 
   354     0319                     	;# 
   355     031A                     	;# 
   356     0394                     	;# 
   357     0395                     	;# 
   358     0396                     	;# 
   359     039A                     	;# 
   360     039C                     	;# 
   361     039D                     	;# 
   362     039E                     	;# 
   363     039F                     	;# 
   364     0415                     	;# 
   365     0416                     	;# 
   366     0417                     	;# 
   367     041C                     	;# 
   368     041D                     	;# 
   369     041E                     	;# 
   370     0FE4                     	;# 
   371     0FE5                     	;# 
   372     0FE6                     	;# 
   373     0FE7                     	;# 
   374     0FE8                     	;# 
   375     0FE9                     	;# 
   376     0FEA                     	;# 
   377     0FEB                     	;# 
   378     0FED                     	;# 
   379     0FEE                     	;# 
   380     0FEF                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     0011                     	;# 
   396     0012                     	;# 
   397     0013                     	;# 
   398     0014                     	;# 
   399     0015                     	;# 
   400     0016                     	;# 
   401     0016                     	;# 
   402     0017                     	;# 
   403     0018                     	;# 
   404     0019                     	;# 
   405     001A                     	;# 
   406     001B                     	;# 
   407     001C                     	;# 
   408     001E                     	;# 
   409     001F                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     0091                     	;# 
   413     0092                     	;# 
   414     0093                     	;# 
   415     0094                     	;# 
   416     0095                     	;# 
   417     0096                     	;# 
   418     0097                     	;# 
   419     0098                     	;# 
   420     0099                     	;# 
   421     009A                     	;# 
   422     009B                     	;# 
   423     009B                     	;# 
   424     009C                     	;# 
   425     009D                     	;# 
   426     009E                     	;# 
   427     010C                     	;# 
   428     010D                     	;# 
   429     0111                     	;# 
   430     0112                     	;# 
   431     0113                     	;# 
   432     0114                     	;# 
   433     0115                     	;# 
   434     0116                     	;# 
   435     0117                     	;# 
   436     0118                     	;# 
   437     0119                     	;# 
   438     011A                     	;# 
   439     011B                     	;# 
   440     011D                     	;# 
   441     011E                     	;# 
   442     018C                     	;# 
   443     018D                     	;# 
   444     0191                     	;# 
   445     0191                     	;# 
   446     0192                     	;# 
   447     0193                     	;# 
   448     0193                     	;# 
   449     0193                     	;# 
   450     0194                     	;# 
   451     0195                     	;# 
   452     0196                     	;# 
   453     0199                     	;# 
   454     019A                     	;# 
   455     019B                     	;# 
   456     019B                     	;# 
   457     019B                     	;# 
   458     019B                     	;# 
   459     019C                     	;# 
   460     019C                     	;# 
   461     019D                     	;# 
   462     019E                     	;# 
   463     019F                     	;# 
   464     020C                     	;# 
   465     020D                     	;# 
   466     0211                     	;# 
   467     0211                     	;# 
   468     0212                     	;# 
   469     0212                     	;# 
   470     0213                     	;# 
   471     0213                     	;# 
   472     0214                     	;# 
   473     0214                     	;# 
   474     0215                     	;# 
   475     0215                     	;# 
   476     0215                     	;# 
   477     0216                     	;# 
   478     0216                     	;# 
   479     0217                     	;# 
   480     0217                     	;# 
   481     0219                     	;# 
   482     021A                     	;# 
   483     021B                     	;# 
   484     021C                     	;# 
   485     021D                     	;# 
   486     021E                     	;# 
   487     021F                     	;# 
   488     0291                     	;# 
   489     0291                     	;# 
   490     0292                     	;# 
   491     0293                     	;# 
   492     0294                     	;# 
   493     0295                     	;# 
   494     0295                     	;# 
   495     0296                     	;# 
   496     0298                     	;# 
   497     0298                     	;# 
   498     0299                     	;# 
   499     029A                     	;# 
   500     029B                     	;# 
   501     029C                     	;# 
   502     029C                     	;# 
   503     029D                     	;# 
   504     029E                     	;# 
   505     029E                     	;# 
   506     0311                     	;# 
   507     0311                     	;# 
   508     0312                     	;# 
   509     0313                     	;# 
   510     0318                     	;# 
   511     0318                     	;# 
   512     0319                     	;# 
   513     031A                     	;# 
   514     0394                     	;# 
   515     0395                     	;# 
   516     0396                     	;# 
   517     039A                     	;# 
   518     039C                     	;# 
   519     039D                     	;# 
   520     039E                     	;# 
   521     039F                     	;# 
   522     0415                     	;# 
   523     0416                     	;# 
   524     0417                     	;# 
   525     041C                     	;# 
   526     041D                     	;# 
   527     041E                     	;# 
   528     0FE4                     	;# 
   529     0FE5                     	;# 
   530     0FE6                     	;# 
   531     0FE7                     	;# 
   532     0FE8                     	;# 
   533     0FE9                     	;# 
   534     0FEA                     	;# 
   535     0FEB                     	;# 
   536     0FED                     	;# 
   537     0FEE                     	;# 
   538     0FEF                     	;# 
   539     0000                     	;# 
   540     0001                     	;# 
   541     0002                     	;# 
   542     0003                     	;# 
   543     0004                     	;# 
   544     0005                     	;# 
   545     0006                     	;# 
   546     0007                     	;# 
   547     0008                     	;# 
   548     0009                     	;# 
   549     000A                     	;# 
   550     000B                     	;# 
   551     000C                     	;# 
   552     000D                     	;# 
   553     0011                     	;# 
   554     0012                     	;# 
   555     0013                     	;# 
   556     0014                     	;# 
   557     0015                     	;# 
   558     0016                     	;# 
   559     0016                     	;# 
   560     0017                     	;# 
   561     0018                     	;# 
   562     0019                     	;# 
   563     001A                     	;# 
   564     001B                     	;# 
   565     001C                     	;# 
   566     001E                     	;# 
   567     001F                     	;# 
   568     008C                     	;# 
   569     008D                     	;# 
   570     0091                     	;# 
   571     0092                     	;# 
   572     0093                     	;# 
   573     0094                     	;# 
   574     0095                     	;# 
   575     0096                     	;# 
   576     0097                     	;# 
   577     0098                     	;# 
   578     0099                     	;# 
   579     009A                     	;# 
   580     009B                     	;# 
   581     009B                     	;# 
   582     009C                     	;# 
   583     009D                     	;# 
   584     009E                     	;# 
   585     010C                     	;# 
   586     010D                     	;# 
   587     0111                     	;# 
   588     0112                     	;# 
   589     0113                     	;# 
   590     0114                     	;# 
   591     0115                     	;# 
   592     0116                     	;# 
   593     0117                     	;# 
   594     0118                     	;# 
   595     0119                     	;# 
   596     011A                     	;# 
   597     011B                     	;# 
   598     011D                     	;# 
   599     011E                     	;# 
   600     018C                     	;# 
   601     018D                     	;# 
   602     0191                     	;# 
   603     0191                     	;# 
   604     0192                     	;# 
   605     0193                     	;# 
   606     0193                     	;# 
   607     0193                     	;# 
   608     0194                     	;# 
   609     0195                     	;# 
   610     0196                     	;# 
   611     0199                     	;# 
   612     019A                     	;# 
   613     019B                     	;# 
   614     019B                     	;# 
   615     019B                     	;# 
   616     019B                     	;# 
   617     019C                     	;# 
   618     019C                     	;# 
   619     019D                     	;# 
   620     019E                     	;# 
   621     019F                     	;# 
   622     020C                     	;# 
   623     020D                     	;# 
   624     0211                     	;# 
   625     0211                     	;# 
   626     0212                     	;# 
   627     0212                     	;# 
   628     0213                     	;# 
   629     0213                     	;# 
   630     0214                     	;# 
   631     0214                     	;# 
   632     0215                     	;# 
   633     0215                     	;# 
   634     0215                     	;# 
   635     0216                     	;# 
   636     0216                     	;# 
   637     0217                     	;# 
   638     0217                     	;# 
   639     0219                     	;# 
   640     021A                     	;# 
   641     021B                     	;# 
   642     021C                     	;# 
   643     021D                     	;# 
   644     021E                     	;# 
   645     021F                     	;# 
   646     0291                     	;# 
   647     0291                     	;# 
   648     0292                     	;# 
   649     0293                     	;# 
   650     0294                     	;# 
   651     0295                     	;# 
   652     0295                     	;# 
   653     0296                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029C                     	;# 
   660     029C                     	;# 
   661     029D                     	;# 
   662     029E                     	;# 
   663     029E                     	;# 
   664     0311                     	;# 
   665     0311                     	;# 
   666     0312                     	;# 
   667     0313                     	;# 
   668     0318                     	;# 
   669     0318                     	;# 
   670     0319                     	;# 
   671     031A                     	;# 
   672     0394                     	;# 
   673     0395                     	;# 
   674     0396                     	;# 
   675     039A                     	;# 
   676     039C                     	;# 
   677     039D                     	;# 
   678     039E                     	;# 
   679     039F                     	;# 
   680     0415                     	;# 
   681     0416                     	;# 
   682     0417                     	;# 
   683     041C                     	;# 
   684     041D                     	;# 
   685     041E                     	;# 
   686     0FE4                     	;# 
   687     0FE5                     	;# 
   688     0FE6                     	;# 
   689     0FE7                     	;# 
   690     0FE8                     	;# 
   691     0FE9                     	;# 
   692     0FEA                     	;# 
   693     0FEB                     	;# 
   694     0FED                     	;# 
   695     0FEE                     	;# 
   696     0FEF                     	;# 
   697                           
   698                           	psect	idataBANK1
   699     0405                     __pidataBANK1:
   700                           
   701                           ;initializer for seg7@F2503
   702     0405  347E               	retlw	126
   703     0406  3400               	retlw	0
   704     0407  3430               	retlw	48
   705     0408  3400               	retlw	0
   706     0409  346D               	retlw	109
   707     040A  3400               	retlw	0
   708     040B  3479               	retlw	121
   709     040C  3400               	retlw	0
   710     040D  3433               	retlw	51
   711     040E  3400               	retlw	0
   712     040F  345B               	retlw	91
   713     0410  3400               	retlw	0
   714     0411  345F               	retlw	95
   715     0412  3400               	retlw	0
   716     0413  3470               	retlw	112
   717     0414  3400               	retlw	0
   718     0415  347F               	retlw	127
   719     0416  3400               	retlw	0
   720     0417  347B               	retlw	123
   721     0418  3400               	retlw	0
   722     008D                     _TRISBbits	set	141
   723     008C                     _TRISAbits	set	140
   724     0099                     _OSCCONbits	set	153
   725     009B                     _ADRESL	set	155
   726     009C                     _ADRESH	set	156
   727     009E                     _ADCON1bits	set	158
   728     009D                     _ADCON0bits	set	157
   729     0117                     _FVRCONbits	set	279
   730     011E                     _APFCON1bits	set	286
   731     010D                     _LATBbits	set	269
   732     010C                     _LATAbits	set	268
   733     018D                     _ANSELBbits	set	397
   734     018C                     _ANSELAbits	set	396
   735     019A                     _TXREG	set	410
   736     019D                     _RCSTAbits	set	413
   737     019B                     _SPBRG	set	411
   738     019F                     _BAUDCONbits	set	415
   739     019E                     _TXSTAbits	set	414
   740                           
   741                           	psect	cinit
   742     07E9                     start_initialization:	
   743                           ; #config settings
   744                           
   745     07E9                     __initialization:
   746                           
   747                           ; Initialize objects allocated to BANK1
   748     07E9  3005               	movlw	low __pidataBANK1
   749     07EA  0084               	movwf	4
   750     07EB  3084               	movlw	(high __pidataBANK1)| (0+128)
   751     07EC  0085               	movwf	5
   752     07ED  30A0               	movlw	low __pdataBANK1
   753     07EE  0086               	movwf	6
   754     07EF  3000               	movlw	high __pdataBANK1
   755     07F0  0087               	movwf	7
   756     07F1  3014               	movlw	20
   757     07F2  3183  23D6  3187   	fcall	init_ram
   758                           
   759                           ; Clear objects allocated to BANK0
   760     07F5  304A               	movlw	low __pbssBANK0
   761     07F6  0084               	movwf	4
   762     07F7  3000               	movlw	high __pbssBANK0
   763     07F8  0085               	movwf	5
   764     07F9  3013               	movlw	19
   765     07FA  3183  23D0  3187   	fcall	clear_ram0
   766     07FD                     end_of_initialization:	
   767                           ;End of C runtime variable initialization code
   768                           
   769     07FD                     __end_of__initialization:
   770     07FD  0020               	movlb	0
   771     07FE  3185  2D3A         	ljmp	_main	;jump to C main() function
   772                           
   773                           	psect	bssBANK0
   774     004A                     __pbssBANK0:
   775     004A                     ASCII_Con@r:
   776     004A                     	ds	7
   777     0051                     seg7@r:
   778     0051                     	ds	6
   779     0057                     BinTOBcd@r:
   780     0057                     	ds	6
   781                           
   782                           	psect	dataBANK1
   783     00A0                     __pdataBANK1:
   784     00A0                     seg7@F2503:
   785     00A0                     	ds	20
   786                           
   787                           	psect	inittext
   788     03D6                     init_ram:
   789     03D6  00FE               	movwf	btemp
   790     03D7                     initloop:
   791     03D7  0012               	moviw fsr0++
   792     03D8  001E               	movwi fsr1++
   793     03D9  0BFE               	decfsz	btemp,f
   794     03DA  2BD7               	goto	initloop
   795     03DB  3400               	retlw	0
   796                           
   797                           	psect	clrtext
   798     03D0                     clear_ram0:	
   799                           ;	Called with FSR0 containing the base address, and
   800                           ;	WREG with the size to clear
   801                           
   802     03D0  0064               	clrwdt	;clear the watchdog before getting into this loop
   803     03D1                     clrloop0:
   804     03D1  0180               	clrf	0	;clear RAM location pointed to by FSR
   805     03D2  3101               	addfsr 0,1
   806     03D3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   807     03D4  2BD1               	goto	clrloop0	;have we reached the end yet?
   808     03D5  3400               	retlw	0	;all done for this memory range, return
   809                           
   810                           	psect	cstackCOMMON
   811     0070                     __pcstackCOMMON:
   812     0070                     ?_init_IO:
   813     0070                     ??_init_IO:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_seg7:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ??_seg7:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_UART_print:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_ASCII_Con:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?_showNumbers:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_main:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_showNumber:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_init_UART:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ??_init_UART:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_UART_write:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ??_UART_write:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_readADC:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?___lmul:	
   853                           ; 4 bytes @ 0x0
   854                           
   855     0070                     UART_write@c:	
   856                           ; 4 bytes @ 0x0
   857                           
   858     0070                     showNumber@digit:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ASCII_Con@a:	
   862                           ; 2 bytes @ 0x0
   863                           
   864     0070                     ___lmul@multiplier:	
   865                           ; 2 bytes @ 0x0
   866                           
   867                           
   868                           ; 4 bytes @ 0x0
   869     0070                     	ds	1
   870     0071                     ??_UART_print:
   871                           
   872                           ; 1 bytes @ 0x1
   873     0071                     	ds	1
   874     0072                     ??_showNumber:
   875     0072                     UART_print@cadena:	
   876                           ; 1 bytes @ 0x2
   877                           
   878     0072                     ASCII_Con@b:	
   879                           ; 1 bytes @ 0x2
   880                           
   881                           
   882                           ; 2 bytes @ 0x2
   883     0072                     	ds	1
   884     0073                     ??_showNumbers:
   885                           
   886                           ; 1 bytes @ 0x3
   887     0073                     	ds	1
   888     0074                     ??_readADC:
   889     0074                     showNumbers@i:	
   890                           ; 1 bytes @ 0x4
   891                           
   892     0074                     ASCII_Con@c:	
   893                           ; 2 bytes @ 0x4
   894                           
   895     0074                     ___lmul@multiplicand:	
   896                           ; 2 bytes @ 0x4
   897                           
   898                           
   899                           ; 4 bytes @ 0x4
   900     0074                     	ds	2
   901     0076                     ??_ASCII_Con:
   902     0076                     showNumbers@digits:	
   903                           ; 1 bytes @ 0x6
   904                           
   905                           
   906                           ; 1 bytes @ 0x6
   907     0076                     	ds	2
   908     0078                     ??___lmul:
   909     0078                     ___lmul@product:	
   910                           ; 1 bytes @ 0x8
   911                           
   912                           
   913                           ; 4 bytes @ 0x8
   914     0078                     	ds	1
   915     0079                     readADC@r:
   916                           
   917                           ; 4 bytes @ 0x9
   918     0079                     	ds	3
   919     007C                     ??___aldiv:
   920                           
   921                           ; 1 bytes @ 0xC
   922     007C                     	ds	1
   923     007D                     ??___almod:
   924                           
   925                           ; 1 bytes @ 0xD
   926     007D                     	ds	1
   927     007E                     ??_BinTOBcd:
   928     007E                     ??_main:	
   929                           ; 1 bytes @ 0xE
   930                           
   931                           
   932                           	psect	cstackBANK0
   933     0020                     __pcstackBANK0:	
   934                           ; 1 bytes @ 0xE
   935                           
   936     0020                     ?___aldiv:
   937     0020                     ___aldiv@divisor:	
   938                           ; 4 bytes @ 0x0
   939                           
   940     0020                     seg7@numbers:	
   941                           ; 4 bytes @ 0x0
   942                           
   943                           
   944                           ; 20 bytes @ 0x0
   945     0020                     	ds	4
   946     0024                     ___aldiv@dividend:
   947                           
   948                           ; 4 bytes @ 0x4
   949     0024                     	ds	4
   950     0028                     ___aldiv@counter:
   951                           
   952                           ; 1 bytes @ 0x8
   953     0028                     	ds	1
   954     0029                     ___aldiv@sign:
   955                           
   956                           ; 1 bytes @ 0x9
   957     0029                     	ds	1
   958     002A                     ___aldiv@quotient:
   959                           
   960                           ; 4 bytes @ 0xA
   961     002A                     	ds	4
   962     002E                     ?___almod:
   963     002E                     ___almod@divisor:	
   964                           ; 4 bytes @ 0xE
   965                           
   966                           
   967                           ; 4 bytes @ 0xE
   968     002E                     	ds	4
   969     0032                     ___almod@dividend:
   970                           
   971                           ; 4 bytes @ 0x12
   972     0032                     	ds	2
   973     0034                     seg7@iBCD:
   974                           
   975                           ; 1 bytes @ 0x14
   976     0034                     	ds	2
   977     0036                     ___almod@counter:
   978                           
   979                           ; 1 bytes @ 0x16
   980     0036                     	ds	1
   981     0037                     ___almod@sign:
   982                           
   983                           ; 1 bytes @ 0x17
   984     0037                     	ds	1
   985     0038                     ?_BinTOBcd:
   986     0038                     BinTOBcd@iADC:	
   987                           ; 1 bytes @ 0x18
   988                           
   989                           
   990                           ; 4 bytes @ 0x18
   991     0038                     	ds	4
   992     003C                     _BinTOBcd$1205:
   993                           
   994                           ; 4 bytes @ 0x1C
   995     003C                     	ds	4
   996     0040                     _BinTOBcd$1204:
   997                           
   998                           ; 4 bytes @ 0x20
   999     0040                     	ds	4
  1000     0044                     main@iADC:
  1001                           
  1002                           ; 4 bytes @ 0x24
  1003     0044                     	ds	4
  1004     0048                     main@A:
  1005                           
  1006                           ; 1 bytes @ 0x28
  1007     0048                     	ds	1
  1008     0049                     main@B:
  1009                           
  1010                           ; 1 bytes @ 0x29
  1011     0049                     	ds	1
  1012                           
  1013                           	psect	maintext
  1014     053A                     __pmaintext:	
  1015 ;;
  1016 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1017 ;;
  1018 ;; *************** function _main *****************
  1019 ;; Defined at:
  1020 ;;		line 15 in file "newmain.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  iADC            4   36[BANK0 ] long 
  1025 ;;  B               1   41[BANK0 ] PTR int 
  1026 ;;		 -> BinTOBcd@r(6), 
  1027 ;;  A               1   40[BANK0 ] PTR int 
  1028 ;;		 -> seg7@r(6), 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : B1F/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1038 ;;      Params:         0       0       0       0       0       0
  1039 ;;      Locals:         0       6       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0
  1041 ;;      Totals:         0       6       0       0       0       0
  1042 ;;Total ram usage:        6 bytes
  1043 ;; Hardware stack levels required when called: 2
  1044 ;; This function calls:
  1045 ;;		_ASCII_Con
  1046 ;;		_BinTOBcd
  1047 ;;		_UART_print
  1048 ;;		_init_IO
  1049 ;;		_readADC
  1050 ;;		_seg7
  1051 ;;		_showNumbers
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057     053A                     _main:	
  1058                           ;psect for function _main
  1059                           
  1060     053A                     l1273:	
  1061                           ;incstack = 0
  1062                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1063                           
  1064                           
  1065                           ;newmain.c: 16:     init_IO();
  1066     053A  3184  24FD  3185   	fcall	_init_IO
  1067     053D                     l19:	
  1068                           ;newmain.c: 18:     while(1)
  1069                           
  1070                           
  1071                           ;newmain.c: 19:     {;newmain.c: 20:         long iADC = readADC();
  1072     053D  3184  242F  3185   	fcall	_readADC
  1073     0540  0873               	movf	?_readADC+3,w
  1074     0541  0020               	movlb	0	; select bank0
  1075     0542  00C7               	movwf	main@iADC+3
  1076     0543  0872               	movf	?_readADC+2,w
  1077     0544  00C6               	movwf	main@iADC+2
  1078     0545  0871               	movf	?_readADC+1,w
  1079     0546  00C5               	movwf	main@iADC+1
  1080     0547  0870               	movf	?_readADC,w
  1081     0548  00C4               	movwf	main@iADC
  1082                           
  1083                           ;newmain.c: 21:         int *B = BinTOBcd(iADC);
  1084     0549  0847               	movf	main@iADC+3,w
  1085     054A  00BB               	movwf	BinTOBcd@iADC+3
  1086     054B  0846               	movf	main@iADC+2,w
  1087     054C  00BA               	movwf	BinTOBcd@iADC+2
  1088     054D  0845               	movf	main@iADC+1,w
  1089     054E  00B9               	movwf	BinTOBcd@iADC+1
  1090     054F  0844               	movf	main@iADC,w
  1091     0550  00B8               	movwf	BinTOBcd@iADC
  1092     0551  3186  26E6  3185   	fcall	_BinTOBcd
  1093     0554  0020               	movlb	0	; select bank0
  1094     0555  00C9               	movwf	main@B
  1095     0556                     l1275:
  1096                           
  1097                           ;newmain.c: 23:         int* A = seg7(B);
  1098     0556  0849               	movf	main@B,w
  1099     0557  3184  248D  3185   	fcall	_seg7
  1100     055A  0020               	movlb	0	; select bank0
  1101     055B  00C8               	movwf	main@A
  1102     055C                     l1277:
  1103                           
  1104                           ;newmain.c: 24:         UART_print(ASCII_Con(B[2], B[1], B[0]));
  1105     055C  0849               	movf	main@B,w
  1106     055D  3E04               	addlw	4
  1107     055E  0086               	movwf	6
  1108     055F  0187               	clrf	7
  1109     0560  3F40               	moviw [0]fsr1
  1110     0561  00F0               	movwf	ASCII_Con@a
  1111     0562  3F41               	moviw [1]fsr1
  1112     0563  00F1               	movwf	ASCII_Con@a+1
  1113     0564  0849               	movf	main@B,w
  1114     0565  3E02               	addlw	2
  1115     0566  0086               	movwf	6
  1116     0567  0187               	clrf	7
  1117     0568  3F40               	moviw [0]fsr1
  1118     0569  00F2               	movwf	ASCII_Con@b
  1119     056A  3F41               	moviw [1]fsr1
  1120     056B  00F3               	movwf	ASCII_Con@b+1
  1121     056C  0849               	movf	main@B,w
  1122     056D  0086               	movwf	6
  1123     056E  0187               	clrf	7
  1124     056F  3F40               	moviw [0]fsr1
  1125     0570  00F4               	movwf	ASCII_Con@c
  1126     0571  3F41               	moviw [1]fsr1
  1127     0572  00F5               	movwf	ASCII_Con@c+1
  1128     0573  3183  23F2  3185   	fcall	_ASCII_Con
  1129     0576  3184  2419  3185   	fcall	_UART_print
  1130     0579                     l1279:
  1131                           
  1132                           ;newmain.c: 25:         showNumbers(A);
  1133     0579  0020               	movlb	0	; select bank0
  1134     057A  0848               	movf	main@A,w
  1135     057B  3185  2581  3185   	fcall	_showNumbers
  1136     057E  2D3D               	goto	l19
  1137     057F  3180  2802         	ljmp	start
  1138     0581                     __end_of_main:
  1139                           
  1140                           	psect	text1
  1141     0581                     __ptext1:	
  1142 ;; *************** function _showNumbers *****************
  1143 ;; Defined at:
  1144 ;;		line 67 in file "funtions_magic.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  digits          1    wreg     PTR int 
  1147 ;;		 -> seg7@r(6), 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  digits          1    6[COMMON] PTR int 
  1150 ;;		 -> seg7@r(6), 
  1151 ;;  i               2    4[COMMON] int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1161 ;;      Params:         0       0       0       0       0       0
  1162 ;;      Locals:         3       0       0       0       0       0
  1163 ;;      Temps:          1       0       0       0       0       0
  1164 ;;      Totals:         4       0       0       0       0       0
  1165 ;;Total ram usage:        4 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 1
  1168 ;; This function calls:
  1169 ;;		_showNumber
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175     0581                     _showNumbers:	
  1176                           ;psect for function _showNumbers
  1177                           
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _showNumbers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1181                           ;showNumbers@digits stored from wreg
  1182     0581  00F6               	movwf	showNumbers@digits
  1183     0582                     l1241:
  1184                           
  1185                           ;funtions_magic.c: 67: void showNumbers(int *digits);funtions_magic.c: 68: {;funtions_ma
      +                          gic.c: 69:     for(int i = 0; i < 40; i++)
  1186     0582  01F4               	clrf	showNumbers@i
  1187     0583  01F5               	clrf	showNumbers@i+1
  1188     0584                     l1247:
  1189                           
  1190                           ;funtions_magic.c: 70:     {;funtions_magic.c: 71:         showNumber(digits[0]);
  1191     0584  0876               	movf	showNumbers@digits,w
  1192     0585  0086               	movwf	6
  1193     0586  0187               	clrf	7
  1194     0587  3F40               	moviw [0]fsr1
  1195     0588  00F0               	movwf	showNumber@digit
  1196     0589  3F41               	moviw [1]fsr1
  1197     058A  00F1               	movwf	showNumber@digit+1
  1198     058B  3184  24C2  3185   	fcall	_showNumber
  1199     058E                     l1249:
  1200                           
  1201                           ;funtions_magic.c: 72:         LATAbits.LATA3 = 0;
  1202     058E  0022               	movlb	2	; select bank2
  1203     058F  118C               	bcf	12,3	;volatile
  1204     0590                     l1251:
  1205                           
  1206                           ;funtions_magic.c: 73:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1207     0590  3021               	movlw	33
  1208     0591  00F3               	movwf	??_showNumbers
  1209     0592  3076               	movlw	118
  1210     0593                     u817:
  1211     0593  0B89               	decfsz	9,f
  1212     0594  2D93               	goto	u817
  1213     0595  0BF3               	decfsz	??_showNumbers,f
  1214     0596  2D93               	goto	u817
  1215     0597  3200               	nop2
  1216     0598                     l1253:
  1217                           
  1218                           ;funtions_magic.c: 74:         LATAbits.LATA3 = 1;
  1219     0598  0022               	movlb	2	; select bank2
  1220     0599  158C               	bsf	12,3	;volatile
  1221     059A                     l1255:
  1222                           
  1223                           ;funtions_magic.c: 76:         showNumber(digits[1]);
  1224     059A  0876               	movf	showNumbers@digits,w
  1225     059B  3E02               	addlw	2
  1226     059C  0086               	movwf	6
  1227     059D  0187               	clrf	7
  1228     059E  3F40               	moviw [0]fsr1
  1229     059F  00F0               	movwf	showNumber@digit
  1230     05A0  3F41               	moviw [1]fsr1
  1231     05A1  00F1               	movwf	showNumber@digit+1
  1232     05A2  3184  24C2  3185   	fcall	_showNumber
  1233     05A5                     l1257:
  1234                           
  1235                           ;funtions_magic.c: 77:         LATAbits.LATA2 = 0;
  1236     05A5  0022               	movlb	2	; select bank2
  1237     05A6  110C               	bcf	12,2	;volatile
  1238                           
  1239                           ;funtions_magic.c: 78:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1240     05A7  3021               	movlw	33
  1241     05A8  00F3               	movwf	??_showNumbers
  1242     05A9  3076               	movlw	118
  1243     05AA                     u827:
  1244     05AA  0B89               	decfsz	9,f
  1245     05AB  2DAA               	goto	u827
  1246     05AC  0BF3               	decfsz	??_showNumbers,f
  1247     05AD  2DAA               	goto	u827
  1248     05AE  3200               	nop2
  1249     05AF                     l1259:
  1250                           
  1251                           ;funtions_magic.c: 79:         LATAbits.LATA2 = 1;
  1252     05AF  0022               	movlb	2	; select bank2
  1253     05B0  150C               	bsf	12,2	;volatile
  1254     05B1                     l1261:
  1255                           
  1256                           ;funtions_magic.c: 81:         showNumber(digits[2]);
  1257     05B1  0876               	movf	showNumbers@digits,w
  1258     05B2  3E04               	addlw	4
  1259     05B3  0086               	movwf	6
  1260     05B4  0187               	clrf	7
  1261     05B5  3F40               	moviw [0]fsr1
  1262     05B6  00F0               	movwf	showNumber@digit
  1263     05B7  3F41               	moviw [1]fsr1
  1264     05B8  00F1               	movwf	showNumber@digit+1
  1265     05B9  3184  24C2  3185   	fcall	_showNumber
  1266     05BC                     l1263:
  1267                           
  1268                           ;funtions_magic.c: 82:         LATAbits.LATA1 = 0;
  1269     05BC  0022               	movlb	2	; select bank2
  1270     05BD  108C               	bcf	12,1	;volatile
  1271     05BE                     l1265:
  1272                           
  1273                           ;funtions_magic.c: 83:         _delay((unsigned long)((25)*(4000000/4000.0)));
  1274     05BE  3021               	movlw	33
  1275     05BF  00F3               	movwf	??_showNumbers
  1276     05C0  3076               	movlw	118
  1277     05C1                     u837:
  1278     05C1  0B89               	decfsz	9,f
  1279     05C2  2DC1               	goto	u837
  1280     05C3  0BF3               	decfsz	??_showNumbers,f
  1281     05C4  2DC1               	goto	u837
  1282     05C5  3200               	nop2
  1283     05C6                     l1267:
  1284                           
  1285                           ;funtions_magic.c: 84:         LATAbits.LATA1 = 1;
  1286     05C6  0022               	movlb	2	; select bank2
  1287     05C7  148C               	bsf	12,1	;volatile
  1288     05C8                     l1269:
  1289                           
  1290                           ;funtions_magic.c: 85:     }
  1291     05C8  3001               	movlw	1
  1292     05C9  07F4               	addwf	showNumbers@i,f
  1293     05CA  3000               	movlw	0
  1294     05CB  3DF5               	addwfc	showNumbers@i+1,f
  1295     05CC                     l1271:
  1296     05CC  0875               	movf	showNumbers@i+1,w
  1297     05CD  3A80               	xorlw	128
  1298     05CE  00F3               	movwf	??_showNumbers
  1299     05CF  3080               	movlw	128
  1300     05D0  0273               	subwf	??_showNumbers,w
  1301     05D1  1D03               	skipz
  1302     05D2  2DD5               	goto	u805
  1303     05D3  3028               	movlw	40
  1304     05D4  0274               	subwf	showNumbers@i,w
  1305     05D5                     u805:
  1306     05D5  1C03               	skipc
  1307     05D6  2DD8               	goto	u801
  1308     05D7  2DD9               	goto	u800
  1309     05D8                     u801:
  1310     05D8  2D84               	goto	l1247
  1311     05D9                     u800:
  1312     05D9                     l68:
  1313     05D9  0008               	return
  1314     05DA                     __end_of_showNumbers:
  1315                           
  1316                           	psect	text2
  1317     04C2                     __ptext2:	
  1318 ;; *************** function _showNumber *****************
  1319 ;; Defined at:
  1320 ;;		line 53 in file "funtions_magic.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  digit           2    0[COMMON] int 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1334 ;;      Params:         2       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0       0
  1337 ;;      Totals:         3       0       0       0       0       0
  1338 ;;Total ram usage:        3 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_showNumbers
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347     04C2                     _showNumber:	
  1348                           ;psect for function _showNumber
  1349                           
  1350     04C2                     l1003:	
  1351                           ;incstack = 0
  1352                           ; Regs used in _showNumber: [wreg+status,2+status,0]
  1353                           
  1354                           
  1355                           ;funtions_magic.c: 53: void showNumber(int digit);funtions_magic.c: 54: {;funtions_magic
      +                          .c: 55:     LATAbits.LATA4 = !!(digit & (1<<6));
  1356     04C2  1B70               	btfsc	showNumber@digit,6
  1357     04C3  2CC5               	goto	u411
  1358     04C4  2CC8               	goto	u410
  1359     04C5                     u411:
  1360     04C5  0022               	movlb	2	; select bank2
  1361     04C6  160C               	bsf	12,4	;volatile
  1362     04C7  2CCA               	goto	u424
  1363     04C8                     u410:
  1364     04C8  0022               	movlb	2	; select bank2
  1365     04C9  120C               	bcf	12,4	;volatile
  1366     04CA                     u424:
  1367                           
  1368                           ;funtions_magic.c: 56:     LATAbits.LATA6 = !!(digit & (1<<5));
  1369     04CA  1AF0               	btfsc	showNumber@digit,5
  1370     04CB  2CCD               	goto	u431
  1371     04CC  2CD0               	goto	u430
  1372     04CD                     u431:
  1373     04CD  0022               	movlb	2	; select bank2
  1374     04CE  170C               	bsf	12,6	;volatile
  1375     04CF  2CD2               	goto	u444
  1376     04D0                     u430:
  1377     04D0  0022               	movlb	2	; select bank2
  1378     04D1  130C               	bcf	12,6	;volatile
  1379     04D2                     u444:
  1380                           
  1381                           ;funtions_magic.c: 57:     LATAbits.LATA7 = !!(digit & (1<<4));
  1382     04D2  1A70               	btfsc	showNumber@digit,4
  1383     04D3  2CD5               	goto	u451
  1384     04D4  2CD8               	goto	u450
  1385     04D5                     u451:
  1386     04D5  0022               	movlb	2	; select bank2
  1387     04D6  178C               	bsf	12,7	;volatile
  1388     04D7  2CDA               	goto	u464
  1389     04D8                     u450:
  1390     04D8  0022               	movlb	2	; select bank2
  1391     04D9  138C               	bcf	12,7	;volatile
  1392     04DA                     u464:
  1393                           
  1394                           ;funtions_magic.c: 58:     LATBbits.LATB0 = !!(digit & (1<<3));
  1395     04DA  19F0               	btfsc	showNumber@digit,3
  1396     04DB  2CDD               	goto	u471
  1397     04DC  2CE0               	goto	u470
  1398     04DD                     u471:
  1399     04DD  0022               	movlb	2	; select bank2
  1400     04DE  140D               	bsf	13,0	;volatile
  1401     04DF  2CE2               	goto	u484
  1402     04E0                     u470:
  1403     04E0  0022               	movlb	2	; select bank2
  1404     04E1  100D               	bcf	13,0	;volatile
  1405     04E2                     u484:
  1406                           
  1407                           ;funtions_magic.c: 59:     LATBbits.LATB3 = !!(digit & (1<<2));
  1408     04E2  1970               	btfsc	showNumber@digit,2
  1409     04E3  2CE5               	goto	u491
  1410     04E4  2CE8               	goto	u490
  1411     04E5                     u491:
  1412     04E5  0022               	movlb	2	; select bank2
  1413     04E6  158D               	bsf	13,3	;volatile
  1414     04E7  2CEA               	goto	u504
  1415     04E8                     u490:
  1416     04E8  0022               	movlb	2	; select bank2
  1417     04E9  118D               	bcf	13,3	;volatile
  1418     04EA                     u504:
  1419                           
  1420                           ;funtions_magic.c: 60:     LATBbits.LATB4 = !!(digit & (1<<1));
  1421     04EA  18F0               	btfsc	showNumber@digit,1
  1422     04EB  2CED               	goto	u511
  1423     04EC  2CF0               	goto	u510
  1424     04ED                     u511:
  1425     04ED  0022               	movlb	2	; select bank2
  1426     04EE  160D               	bsf	13,4	;volatile
  1427     04EF  2CF2               	goto	u524
  1428     04F0                     u510:
  1429     04F0  0022               	movlb	2	; select bank2
  1430     04F1  120D               	bcf	13,4	;volatile
  1431     04F2                     u524:
  1432     04F2                     l1005:
  1433                           
  1434                           ;funtions_magic.c: 61:     LATBbits.LATB5 = digit & 1;
  1435     04F2  0870               	movf	showNumber@digit,w
  1436     04F3  3901               	andlw	1
  1437     04F4  00F2               	movwf	??_showNumber
  1438     04F5  0EF2               	swapf	??_showNumber,f
  1439     04F6  0DF2               	rlf	??_showNumber,f
  1440     04F7  080D               	movf	13,w	;volatile
  1441     04F8  0672               	xorwf	??_showNumber,w
  1442     04F9  39DF               	andlw	-33
  1443     04FA  0672               	xorwf	??_showNumber,w
  1444     04FB  008D               	movwf	13	;volatile
  1445     04FC                     l63:
  1446     04FC  0008               	return
  1447     04FD                     __end_of_showNumber:
  1448                           
  1449                           	psect	text3
  1450     048D                     __ptext3:	
  1451 ;; *************** function _seg7 *****************
  1452 ;; Defined at:
  1453 ;;		line 25 in file "funtions_magic.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  iBCD            1    wreg     PTR const int 
  1456 ;;		 -> BinTOBcd@r(6), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  iBCD            1   20[BANK0 ] PTR const int 
  1459 ;;		 -> BinTOBcd@r(6), 
  1460 ;;  numbers        20    0[BANK0 ] int [10]
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      PTR int 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1470 ;;      Params:         0       0       0       0       0       0
  1471 ;;      Locals:         0      21       0       0       0       0
  1472 ;;      Temps:          1       0       0       0       0       0
  1473 ;;      Totals:         1      21       0       0       0       0
  1474 ;;Total ram usage:       22 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483     048D                     _seg7:	
  1484                           ;psect for function _seg7
  1485                           
  1486                           
  1487                           ;incstack = 0
  1488                           ; Regs used in _seg7: [wreg-fsr1h+status,2+status,0]
  1489                           ;seg7@iBCD stored from wreg
  1490     048D  0020               	movlb	0	; select bank0
  1491     048E  00B4               	movwf	seg7@iBCD
  1492     048F                     l1203:
  1493                           
  1494                           ;funtions_magic.c: 25: int* seg7(const int * iBCD);funtions_magic.c: 26: {;funtions_magi
      +                          c.c: 28:     int numbers[10] = {
  1495     048F  30A0               	movlw	low seg7@F2503
  1496     0490  0086               	movwf	6
  1497     0491  3000               	movlw	high seg7@F2503
  1498     0492  0087               	movwf	7
  1499     0493  3020               	movlw	low seg7@numbers
  1500     0494  0084               	movwf	4
  1501     0495  3000               	movlw	high seg7@numbers
  1502     0496  0085               	movwf	5
  1503     0497  3014               	movlw	20
  1504     0498  00F0               	movwf	??_seg7
  1505     0499                     u780:
  1506     0499  0016               	moviw fsr1++
  1507     049A  001A               	movwi fsr0++
  1508     049B  0BF0               	decfsz	??_seg7,f
  1509     049C  2C99               	goto	u780
  1510     049D                     l1205:
  1511                           
  1512                           ;funtions_magic.c: 42:     static int r[3];;funtions_magic.c: 43:     r[0] = numbers[iBC
      +                          D[0]];
  1513     049D  0834               	movf	seg7@iBCD,w
  1514     049E  0086               	movwf	6
  1515     049F  0187               	clrf	7
  1516     04A0  3501               	lslf	1,w
  1517     04A1  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  1518     04A2  0086               	movwf	6
  1519     04A3  0187               	clrf	7
  1520     04A4  3F40               	moviw [0]fsr1
  1521     04A5  00D1               	movwf	seg7@r
  1522     04A6  3F41               	moviw [1]fsr1
  1523     04A7  00D2               	movwf	seg7@r+1
  1524     04A8                     l1207:
  1525                           
  1526                           ;funtions_magic.c: 44:     r[1] = numbers[iBCD[1]];
  1527     04A8  0834               	movf	seg7@iBCD,w
  1528     04A9  3E02               	addlw	2
  1529     04AA  0086               	movwf	6
  1530     04AB  0187               	clrf	7
  1531     04AC  3501               	lslf	1,w
  1532     04AD  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  1533     04AE  0086               	movwf	6
  1534     04AF  0187               	clrf	7
  1535     04B0  3F40               	moviw [0]fsr1
  1536     04B1  00D3               	movwf	seg7@r+2
  1537     04B2  3F41               	moviw [1]fsr1
  1538     04B3  00D4               	movwf	seg7@r+3
  1539     04B4                     l1209:
  1540                           
  1541                           ;funtions_magic.c: 45:     r[2] = numbers[iBCD[2]];
  1542     04B4  0834               	movf	seg7@iBCD,w
  1543     04B5  3E04               	addlw	4
  1544     04B6  0086               	movwf	6
  1545     04B7  0187               	clrf	7
  1546     04B8  3501               	lslf	1,w
  1547     04B9  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  1548     04BA  0086               	movwf	6
  1549     04BB  0187               	clrf	7
  1550     04BC  3F40               	moviw [0]fsr1
  1551     04BD  00D5               	movwf	seg7@r+4
  1552     04BE  3F41               	moviw [1]fsr1
  1553     04BF  00D6               	movwf	seg7@r+5
  1554     04C0                     l1211:
  1555                           
  1556                           ;funtions_magic.c: 47:     return r;
  1557     04C0  3051               	movlw	(low (seg7@r| 0))& (0+255)
  1558     04C1                     l60:
  1559     04C1  0008               	return
  1560     04C2                     __end_of_seg7:
  1561                           
  1562                           	psect	text4
  1563     042F                     __ptext4:	
  1564 ;; *************** function _readADC *****************
  1565 ;; Defined at:
  1566 ;;		line 90 in file "funtions_magic.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  r               4    9[COMMON] long 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  4    0[COMMON] long 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1580 ;;      Params:         4       0       0       0       0       0
  1581 ;;      Locals:         4       0       0       0       0       0
  1582 ;;      Temps:          5       0       0       0       0       0
  1583 ;;      Totals:        13       0       0       0       0       0
  1584 ;;Total ram usage:       13 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593     042F                     _readADC:	
  1594                           ;psect for function _readADC
  1595                           
  1596     042F                     l1183:	
  1597                           ;incstack = 0
  1598                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1599                           
  1600                           
  1601                           ;funtions_magic.c: 92:     ADCON0bits.ADON = 1;
  1602     042F  0021               	movlb	1	; select bank1
  1603     0430  141D               	bsf	29,0	;volatile
  1604     0431                     l1185:
  1605                           
  1606                           ;funtions_magic.c: 94:     ADCON1bits.ADCS = 0b001;
  1607     0431  081E               	movf	30,w	;volatile
  1608     0432  398F               	andlw	-113
  1609     0433  3810               	iorlw	16
  1610     0434  009E               	movwf	30	;volatile
  1611                           
  1612                           ;funtions_magic.c: 96:     ADCON0bits.CHS = 0b00000;
  1613     0435  3083               	movlw	-125
  1614     0436  059D               	andwf	29,f	;volatile
  1615     0437                     l1187:
  1616                           
  1617                           ;funtions_magic.c: 98:     ADCON1bits.ADFM = 1;
  1618     0437  179E               	bsf	30,7	;volatile
  1619     0438                     l1189:
  1620                           
  1621                           ;funtions_magic.c: 100:     ADCON0bits.GO_nDONE = 1;
  1622     0438  149D               	bsf	29,1	;volatile
  1623     0439                     l71:	
  1624                           ;funtions_magic.c: 102:     while(ADCON0bits.GO_nDONE);
  1625                           
  1626     0439  189D               	btfsc	29,1	;volatile
  1627     043A  2C3C               	goto	u771
  1628     043B  2C3D               	goto	u770
  1629     043C                     u771:
  1630     043C  2C39               	goto	l71
  1631     043D                     u770:
  1632     043D                     l1191:
  1633                           
  1634                           ;funtions_magic.c: 104:     long r = (ADRESH<<8) + ADRESL;
  1635     043D  081B               	movf	27,w	;volatile
  1636     043E  00F4               	movwf	??_readADC
  1637     043F  01F5               	clrf	??_readADC+1
  1638     0440  081C               	movf	28,w	;volatile
  1639     0441  00F6               	movwf	??_readADC+2
  1640     0442  01F7               	clrf	??_readADC+3
  1641     0443  0876               	movf	??_readADC+2,w
  1642     0444  00F7               	movwf	??_readADC+3
  1643     0445  01F6               	clrf	??_readADC+2
  1644     0446  0874               	movf	??_readADC,w
  1645     0447  0776               	addwf	??_readADC+2,w
  1646     0448  00F9               	movwf	readADC@r
  1647     0449  0875               	movf	??_readADC+1,w
  1648     044A  3D77               	addwfc	??_readADC+3,w
  1649     044B  00FA               	movwf	readADC@r+1
  1650     044C  01FB               	clrf	readADC@r+2
  1651     044D  1BFA               	btfsc	readADC@r+1,7
  1652     044E  03FB               	decf	readADC@r+2,f
  1653     044F  087B               	movf	readADC@r+2,w
  1654     0450  00FC               	movwf	readADC@r+3
  1655     0451                     l1193:
  1656                           
  1657                           ;funtions_magic.c: 105:     return r;
  1658     0451  087C               	movf	readADC@r+3,w
  1659     0452  00F3               	movwf	?_readADC+3
  1660     0453  087B               	movf	readADC@r+2,w
  1661     0454  00F2               	movwf	?_readADC+2
  1662     0455  087A               	movf	readADC@r+1,w
  1663     0456  00F1               	movwf	?_readADC+1
  1664     0457  0879               	movf	readADC@r,w
  1665     0458  00F0               	movwf	?_readADC
  1666     0459                     l74:
  1667     0459  0008               	return
  1668     045A                     __end_of_readADC:
  1669                           
  1670                           	psect	text5
  1671     04FD                     __ptext5:	
  1672 ;; *************** function _init_IO *****************
  1673 ;; Defined at:
  1674 ;;		line 4 in file "init_IO.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1688 ;;      Params:         0       0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0
  1691 ;;      Totals:         0       0       0       0       0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 1
  1695 ;; This function calls:
  1696 ;;		_init_UART
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702     04FD                     _init_IO:	
  1703                           ;psect for function _init_IO
  1704                           
  1705     04FD                     l1101:	
  1706                           ;incstack = 0
  1707                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1708                           
  1709                           
  1710                           ;init_IO.c: 7:     OSCCONbits.SCS = 0;
  1711     04FD  30FC               	movlw	-4
  1712     04FE  0021               	movlb	1	; select bank1
  1713     04FF  0599               	andwf	25,f	;volatile
  1714                           
  1715                           ;init_IO.c: 8:     OSCCONbits.IRCF = 0b1101;
  1716     0500  0819               	movf	25,w	;volatile
  1717     0501  3987               	andlw	-121
  1718     0502  3868               	iorlw	104
  1719     0503  0099               	movwf	25	;volatile
  1720     0504                     l1103:
  1721                           
  1722                           ;init_IO.c: 14:     ANSELAbits.ANSA0 = 1;
  1723     0504  0023               	movlb	3	; select bank3
  1724     0505  140C               	bsf	12,0	;volatile
  1725     0506                     l1105:
  1726                           
  1727                           ;init_IO.c: 15:     ANSELAbits.ANSA1 = 0;
  1728     0506  108C               	bcf	12,1	;volatile
  1729     0507                     l1107:
  1730                           
  1731                           ;init_IO.c: 16:     ANSELAbits.ANSA2 = 0;
  1732     0507  110C               	bcf	12,2	;volatile
  1733     0508                     l1109:
  1734                           
  1735                           ;init_IO.c: 17:     ANSELAbits.ANSA3 = 0;
  1736     0508  118C               	bcf	12,3	;volatile
  1737     0509                     l1111:
  1738                           
  1739                           ;init_IO.c: 18:     ANSELAbits.ANSA4 = 0;
  1740     0509  120C               	bcf	12,4	;volatile
  1741     050A                     l1113:
  1742                           
  1743                           ;init_IO.c: 21:     TRISAbits.TRISA0 = 1;
  1744     050A  0021               	movlb	1	; select bank1
  1745     050B  140C               	bsf	12,0	;volatile
  1746     050C                     l1115:
  1747                           
  1748                           ;init_IO.c: 22:     TRISAbits.TRISA1 = 0;
  1749     050C  108C               	bcf	12,1	;volatile
  1750     050D                     l1117:
  1751                           
  1752                           ;init_IO.c: 23:     TRISAbits.TRISA2 = 0;
  1753     050D  110C               	bcf	12,2	;volatile
  1754     050E                     l1119:
  1755                           
  1756                           ;init_IO.c: 24:     TRISAbits.TRISA3 = 0;
  1757     050E  118C               	bcf	12,3	;volatile
  1758     050F                     l1121:
  1759                           
  1760                           ;init_IO.c: 25:     TRISAbits.TRISA4 = 0;
  1761     050F  120C               	bcf	12,4	;volatile
  1762     0510                     l1123:
  1763                           
  1764                           ;init_IO.c: 26:     TRISAbits.TRISA6 = 0;
  1765     0510  130C               	bcf	12,6	;volatile
  1766     0511                     l1125:
  1767                           
  1768                           ;init_IO.c: 27:     TRISAbits.TRISA7 = 0;
  1769     0511  138C               	bcf	12,7	;volatile
  1770     0512                     l1127:
  1771                           
  1772                           ;init_IO.c: 31:     ANSELBbits.ANSB1 = 0;
  1773     0512  0023               	movlb	3	; select bank3
  1774     0513  108D               	bcf	13,1	;volatile
  1775     0514                     l1129:
  1776                           
  1777                           ;init_IO.c: 32:     ANSELBbits.ANSB2 = 0;
  1778     0514  110D               	bcf	13,2	;volatile
  1779     0515                     l1131:
  1780                           
  1781                           ;init_IO.c: 33:     ANSELBbits.ANSB3 = 0;
  1782     0515  118D               	bcf	13,3	;volatile
  1783     0516                     l1133:
  1784                           
  1785                           ;init_IO.c: 34:     ANSELBbits.ANSB4 = 0;
  1786     0516  120D               	bcf	13,4	;volatile
  1787     0517                     l1135:
  1788                           
  1789                           ;init_IO.c: 35:     ANSELBbits.ANSB5 = 0;
  1790     0517  128D               	bcf	13,5	;volatile
  1791     0518                     l1137:
  1792                           
  1793                           ;init_IO.c: 36:     ANSELBbits.ANSB6 = 0;
  1794     0518  130D               	bcf	13,6	;volatile
  1795     0519                     l1139:
  1796                           
  1797                           ;init_IO.c: 37:     ANSELBbits.ANSB7 = 0;
  1798     0519  138D               	bcf	13,7	;volatile
  1799     051A                     l1141:
  1800                           
  1801                           ;init_IO.c: 40:     TRISBbits.TRISB0 = 0;
  1802     051A  0021               	movlb	1	; select bank1
  1803     051B  100D               	bcf	13,0	;volatile
  1804     051C                     l1143:
  1805                           
  1806                           ;init_IO.c: 41:     TRISBbits.TRISB1 = 1;
  1807     051C  148D               	bsf	13,1	;volatile
  1808     051D                     l1145:
  1809                           
  1810                           ;init_IO.c: 42:     TRISBbits.TRISB2 = 0;
  1811     051D  110D               	bcf	13,2	;volatile
  1812     051E                     l1147:
  1813                           
  1814                           ;init_IO.c: 43:     TRISBbits.TRISB3 = 0;
  1815     051E  118D               	bcf	13,3	;volatile
  1816     051F                     l1149:
  1817                           
  1818                           ;init_IO.c: 44:     TRISBbits.TRISB4 = 0;
  1819     051F  120D               	bcf	13,4	;volatile
  1820     0520                     l1151:
  1821                           
  1822                           ;init_IO.c: 45:     TRISBbits.TRISB5 = 0;
  1823     0520  128D               	bcf	13,5	;volatile
  1824     0521                     l1153:
  1825                           
  1826                           ;init_IO.c: 46:     TRISBbits.TRISB6 = 0;
  1827     0521  130D               	bcf	13,6	;volatile
  1828     0522                     l1155:
  1829                           
  1830                           ;init_IO.c: 47:     TRISBbits.TRISB7 = 0;
  1831     0522  138D               	bcf	13,7	;volatile
  1832     0523                     l1157:
  1833                           
  1834                           ;init_IO.c: 50:     FVRCONbits.FVREN = 1;
  1835     0523  0022               	movlb	2	; select bank2
  1836     0524  1797               	bsf	23,7	;volatile
  1837                           
  1838                           ;init_IO.c: 51:     FVRCONbits.ADFVR = 0b11;
  1839     0525  3003               	movlw	3
  1840     0526  0497               	iorwf	23,f	;volatile
  1841     0527                     l1159:
  1842                           
  1843                           ;init_IO.c: 52:     ADCON1bits.ADNREF = 0;
  1844     0527  0021               	movlb	1	; select bank1
  1845     0528  111E               	bcf	30,2	;volatile
  1846                           
  1847                           ;init_IO.c: 53:     ADCON1bits.ADPREF = 0b11;
  1848     0529  3003               	movlw	3
  1849     052A  049E               	iorwf	30,f	;volatile
  1850     052B                     l1161:
  1851                           
  1852                           ;init_IO.c: 57:     LATAbits.LATA1 = 1;
  1853     052B  0022               	movlb	2	; select bank2
  1854     052C  148C               	bsf	12,1	;volatile
  1855     052D                     l1163:
  1856                           
  1857                           ;init_IO.c: 58:     LATAbits.LATA2 = 1;
  1858     052D  150C               	bsf	12,2	;volatile
  1859     052E                     l1165:
  1860                           
  1861                           ;init_IO.c: 59:     LATAbits.LATA3 = 1;
  1862     052E  158C               	bsf	12,3	;volatile
  1863     052F                     l1167:
  1864                           
  1865                           ;init_IO.c: 60:     LATAbits.LATA4 = 0;
  1866     052F  120C               	bcf	12,4	;volatile
  1867     0530                     l1169:
  1868                           
  1869                           ;init_IO.c: 61:     LATAbits.LATA6 = 0;
  1870     0530  130C               	bcf	12,6	;volatile
  1871     0531                     l1171:
  1872                           
  1873                           ;init_IO.c: 62:     LATAbits.LATA7 = 0;
  1874     0531  138C               	bcf	12,7	;volatile
  1875     0532                     l1173:
  1876                           
  1877                           ;init_IO.c: 63:     LATBbits.LATB0 = 0;
  1878     0532  100D               	bcf	13,0	;volatile
  1879     0533                     l1175:
  1880                           
  1881                           ;init_IO.c: 64:     LATBbits.LATB3 = 0;
  1882     0533  118D               	bcf	13,3	;volatile
  1883     0534                     l1177:
  1884                           
  1885                           ;init_IO.c: 65:     LATBbits.LATB4 = 0;
  1886     0534  120D               	bcf	13,4	;volatile
  1887     0535                     l1179:
  1888                           
  1889                           ;init_IO.c: 66:     LATBbits.LATB5 = 0;
  1890     0535  128D               	bcf	13,5	;volatile
  1891     0536                     l1181:
  1892                           
  1893                           ;init_IO.c: 68:     init_UART();
  1894     0536  3183  23E5  3184   	fcall	_init_UART
  1895     0539                     l117:
  1896     0539  0008               	return
  1897     053A                     __end_of_init_IO:
  1898                           
  1899                           	psect	text6
  1900     03E5                     __ptext6:	
  1901 ;; *************** function _init_UART *****************
  1902 ;; Defined at:
  1903 ;;		line 110 in file "funtions_magic.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1917 ;;      Params:         0       0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_init_IO
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930     03E5                     _init_UART:	
  1931                           ;psect for function _init_UART
  1932                           
  1933     03E5                     l1007:	
  1934                           ;incstack = 0
  1935                           ; Regs used in _init_UART: [wreg]
  1936                           
  1937                           
  1938                           ;funtions_magic.c: 112:     APFCON1bits.TXCKSEL = 0;
  1939     03E5  0022               	movlb	2	; select bank2
  1940     03E6  101E               	bcf	30,0	;volatile
  1941                           
  1942                           ;funtions_magic.c: 113:     TXSTAbits.TRMT = 1;
  1943     03E7  0023               	movlb	3	; select bank3
  1944     03E8  149E               	bsf	30,1	;volatile
  1945                           
  1946                           ;funtions_magic.c: 114:     TXSTAbits.TXEN = 1;
  1947     03E9  169E               	bsf	30,5	;volatile
  1948                           
  1949                           ;funtions_magic.c: 115:     BAUDCONbits.RCIDL = 1;
  1950     03EA  171F               	bsf	31,6	;volatile
  1951                           
  1952                           ;funtions_magic.c: 118:     TXSTAbits.SYNC = 0;
  1953     03EB  121E               	bcf	30,4	;volatile
  1954                           
  1955                           ;funtions_magic.c: 119:     TXSTAbits.TX9 = 0;
  1956     03EC  131E               	bcf	30,6	;volatile
  1957                           
  1958                           ;funtions_magic.c: 120:     TXSTAbits.BRGH = 1;
  1959     03ED  151E               	bsf	30,2	;volatile
  1960     03EE                     l1009:
  1961                           
  1962                           ;funtions_magic.c: 121:     SPBRG = 25;
  1963     03EE  3019               	movlw	25
  1964     03EF  009B               	movwf	27	;volatile
  1965     03F0                     l1011:
  1966                           
  1967                           ;funtions_magic.c: 122:     RCSTAbits.SPEN = 1;
  1968     03F0  179D               	bsf	29,7	;volatile
  1969     03F1                     l77:
  1970     03F1  0008               	return
  1971     03F2                     __end_of_init_UART:
  1972                           
  1973                           	psect	text7
  1974     0419                     __ptext7:	
  1975 ;; *************** function _UART_print *****************
  1976 ;; Defined at:
  1977 ;;		line 132 in file "funtions_magic.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  cadena          1    wreg     PTR unsigned char 
  1980 ;;		 -> ASCII_Con@r(7), 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  cadena          1    2[COMMON] PTR unsigned char 
  1983 ;;		 -> ASCII_Con@r(7), 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1993 ;;      Params:         0       0       0       0       0       0
  1994 ;;      Locals:         1       0       0       0       0       0
  1995 ;;      Temps:          1       0       0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 1
  2000 ;; This function calls:
  2001 ;;		_UART_write
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007     0419                     _UART_print:	
  2008                           ;psect for function _UART_print
  2009                           
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2013                           ;UART_print@cadena stored from wreg
  2014     0419  00F2               	movwf	UART_print@cadena
  2015     041A                     l1233:
  2016                           
  2017                           ;funtions_magic.c: 132: void UART_print(unsigned char* cadena);funtions_magic.c: 133: {;
      +                          funtions_magic.c: 134:     while(*cadena != 0)
  2018     041A  2C26               	goto	l1239
  2019     041B                     l1235:
  2020                           
  2021                           ;funtions_magic.c: 135:     {;funtions_magic.c: 136:         UART_write(*cadena);
  2022     041B  0872               	movf	UART_print@cadena,w
  2023     041C  0086               	movwf	6
  2024     041D  0187               	clrf	7
  2025     041E  0801               	movf	1,w
  2026     041F  3183  23DC  3184   	fcall	_UART_write
  2027     0422                     l1237:
  2028                           
  2029                           ;funtions_magic.c: 137:         cadena++;
  2030     0422  3001               	movlw	1
  2031     0423  00F1               	movwf	??_UART_print
  2032     0424  0871               	movf	??_UART_print,w
  2033     0425  07F2               	addwf	UART_print@cadena,f
  2034     0426                     l1239:
  2035                           
  2036                           ;funtions_magic.c: 134:     while(*cadena != 0)
  2037     0426  0872               	movf	UART_print@cadena,w
  2038     0427  0086               	movwf	6
  2039     0428  0187               	clrf	7
  2040     0429  0801               	movf	1,w
  2041     042A  1D03               	btfss	3,2
  2042     042B  2C2D               	goto	u791
  2043     042C  2C2E               	goto	u790
  2044     042D                     u791:
  2045     042D  2C1B               	goto	l1235
  2046     042E                     u790:
  2047     042E                     l89:
  2048     042E  0008               	return
  2049     042F                     __end_of_UART_print:
  2050                           
  2051                           	psect	text8
  2052     03DC                     __ptext8:	
  2053 ;; *************** function _UART_write *****************
  2054 ;; Defined at:
  2055 ;;		line 126 in file "funtions_magic.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  c               1    wreg     unsigned char 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  c               1    0[COMMON] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2069 ;;      Params:         0       0       0       0       0       0
  2070 ;;      Locals:         1       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0
  2072 ;;      Totals:         1       0       0       0       0       0
  2073 ;;Total ram usage:        1 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_UART_print
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082     03DC                     _UART_write:	
  2083                           ;psect for function _UART_write
  2084                           
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _UART_write: [wreg]
  2088                           ;UART_write@c stored from wreg
  2089     03DC  00F0               	movwf	UART_write@c
  2090     03DD                     l1013:
  2091                           
  2092                           ;funtions_magic.c: 126: void UART_write(char c);funtions_magic.c: 127: {;funtions_magic.
      +                          c: 128:     TXREG = c;
  2093     03DD  0870               	movf	UART_write@c,w
  2094     03DE  0023               	movlb	3	; select bank3
  2095     03DF  009A               	movwf	26	;volatile
  2096     03E0                     l80:	
  2097                           ;funtions_magic.c: 129:     while(TXSTAbits.TRMT == 0);
  2098                           
  2099     03E0  1C9E               	btfss	30,1	;volatile
  2100     03E1  2BE3               	goto	u531
  2101     03E2  2BE4               	goto	u530
  2102     03E3                     u531:
  2103     03E3  2BE0               	goto	l80
  2104     03E4                     u530:
  2105     03E4                     l83:
  2106     03E4  0008               	return
  2107     03E5                     __end_of_UART_write:
  2108                           
  2109                           	psect	text9
  2110     06E6                     __ptext9:	
  2111 ;; *************** function _BinTOBcd *****************
  2112 ;; Defined at:
  2113 ;;		line 11 in file "funtions_magic.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  iADC            4   24[BANK0 ] long 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      PTR int 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0, pclath, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2127 ;;      Params:         0       4       0       0       0       0
  2128 ;;      Locals:         0       8       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0
  2130 ;;      Totals:         0      12       0       0       0       0
  2131 ;;Total ram usage:       12 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 1
  2134 ;; This function calls:
  2135 ;;		___aldiv
  2136 ;;		___almod
  2137 ;;		___lmul
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143     06E6                     _BinTOBcd:	
  2144                           ;psect for function _BinTOBcd
  2145                           
  2146     06E6                     l1197:	
  2147                           ;incstack = 0
  2148                           ; Regs used in _BinTOBcd: [wreg+status,2+status,0+pclath+cstack]
  2149                           
  2150                           
  2151                           ;funtions_magic.c: 11: int* BinTOBcd(long iADC);funtions_magic.c: 12: {;funtions_magic.c
      +                          : 14:     static int r[3];;funtions_magic.c: 15:     r[0] = ((iADC*1000)/1024)%10;
  2152     06E6  3000               	movlw	0
  2153     06E7  0020               	movlb	0	; select bank0
  2154     06E8  00B1               	movwf	___almod@divisor+3
  2155     06E9  3000               	movlw	0
  2156     06EA  00B0               	movwf	___almod@divisor+2
  2157     06EB  3000               	movlw	0
  2158     06EC  00AF               	movwf	___almod@divisor+1
  2159     06ED  300A               	movlw	10
  2160     06EE  00AE               	movwf	___almod@divisor
  2161     06EF  3000               	movlw	0
  2162     06F0  00A3               	movwf	___aldiv@divisor+3
  2163     06F1  3000               	movlw	0
  2164     06F2  00A2               	movwf	___aldiv@divisor+2
  2165     06F3  3004               	movlw	4
  2166     06F4  00A1               	movwf	___aldiv@divisor+1
  2167     06F5  3000               	movlw	0
  2168     06F6  00A0               	movwf	___aldiv@divisor
  2169     06F7  083B               	movf	BinTOBcd@iADC+3,w
  2170     06F8  00F3               	movwf	___lmul@multiplier+3
  2171     06F9  083A               	movf	BinTOBcd@iADC+2,w
  2172     06FA  00F2               	movwf	___lmul@multiplier+2
  2173     06FB  0839               	movf	BinTOBcd@iADC+1,w
  2174     06FC  00F1               	movwf	___lmul@multiplier+1
  2175     06FD  0838               	movf	BinTOBcd@iADC,w
  2176     06FE  00F0               	movwf	___lmul@multiplier
  2177     06FF  3000               	movlw	0
  2178     0700  00F7               	movwf	___lmul@multiplicand+3
  2179     0701  3000               	movlw	0
  2180     0702  00F6               	movwf	___lmul@multiplicand+2
  2181     0703  3003               	movlw	3
  2182     0704  00F5               	movwf	___lmul@multiplicand+1
  2183     0705  30E8               	movlw	232
  2184     0706  00F4               	movwf	___lmul@multiplicand
  2185     0707  3184  245A  3186   	fcall	___lmul
  2186     070A  0873               	movf	?___lmul+3,w
  2187     070B  0020               	movlb	0	; select bank0
  2188     070C  00A7               	movwf	___aldiv@dividend+3
  2189     070D  0872               	movf	?___lmul+2,w
  2190     070E  00A6               	movwf	___aldiv@dividend+2
  2191     070F  0871               	movf	?___lmul+1,w
  2192     0710  00A5               	movwf	___aldiv@dividend+1
  2193     0711  0870               	movf	?___lmul,w
  2194     0712  00A4               	movwf	___aldiv@dividend
  2195     0713  3186  2656  3186   	fcall	___aldiv
  2196     0716  0020               	movlb	0	; select bank0
  2197     0717  0823               	movf	?___aldiv+3,w
  2198     0718  00B5               	movwf	___almod@dividend+3
  2199     0719  0822               	movf	?___aldiv+2,w
  2200     071A  00B4               	movwf	___almod@dividend+2
  2201     071B  0821               	movf	?___aldiv+1,w
  2202     071C  00B3               	movwf	___almod@dividend+1
  2203     071D  0820               	movf	?___aldiv,w
  2204     071E  00B2               	movwf	___almod@dividend
  2205     071F  3185  25DA  3186   	fcall	___almod
  2206     0722  0020               	movlb	0	; select bank0
  2207     0723  082F               	movf	?___almod+1,w
  2208     0724  00D8               	movwf	BinTOBcd@r+1
  2209     0725  082E               	movf	?___almod,w
  2210     0726  00D7               	movwf	BinTOBcd@r
  2211                           
  2212                           ;funtions_magic.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  2213     0727  3000               	movlw	0
  2214     0728  00A3               	movwf	___aldiv@divisor+3
  2215     0729  3000               	movlw	0
  2216     072A  00A2               	movwf	___aldiv@divisor+2
  2217     072B  3004               	movlw	4
  2218     072C  00A1               	movwf	___aldiv@divisor+1
  2219     072D  3000               	movlw	0
  2220     072E  00A0               	movwf	___aldiv@divisor
  2221     072F  083B               	movf	BinTOBcd@iADC+3,w
  2222     0730  00F3               	movwf	___lmul@multiplier+3
  2223     0731  083A               	movf	BinTOBcd@iADC+2,w
  2224     0732  00F2               	movwf	___lmul@multiplier+2
  2225     0733  0839               	movf	BinTOBcd@iADC+1,w
  2226     0734  00F1               	movwf	___lmul@multiplier+1
  2227     0735  0838               	movf	BinTOBcd@iADC,w
  2228     0736  00F0               	movwf	___lmul@multiplier
  2229     0737  3000               	movlw	0
  2230     0738  00F7               	movwf	___lmul@multiplicand+3
  2231     0739  3000               	movlw	0
  2232     073A  00F6               	movwf	___lmul@multiplicand+2
  2233     073B  3003               	movlw	3
  2234     073C  00F5               	movwf	___lmul@multiplicand+1
  2235     073D  30E8               	movlw	232
  2236     073E  00F4               	movwf	___lmul@multiplicand
  2237     073F  3184  245A  3186   	fcall	___lmul
  2238     0742  0873               	movf	?___lmul+3,w
  2239     0743  0020               	movlb	0	; select bank0
  2240     0744  00A7               	movwf	___aldiv@dividend+3
  2241     0745  0872               	movf	?___lmul+2,w
  2242     0746  00A6               	movwf	___aldiv@dividend+2
  2243     0747  0871               	movf	?___lmul+1,w
  2244     0748  00A5               	movwf	___aldiv@dividend+1
  2245     0749  0870               	movf	?___lmul,w
  2246     074A  00A4               	movwf	___aldiv@dividend
  2247     074B  3186  2656  3186   	fcall	___aldiv
  2248     074E  0020               	movlb	0	; select bank0
  2249     074F  0823               	movf	?___aldiv+3,w
  2250     0750  00C3               	movwf	_BinTOBcd$1204+3
  2251     0751  0822               	movf	?___aldiv+2,w
  2252     0752  00C2               	movwf	_BinTOBcd$1204+2
  2253     0753  0821               	movf	?___aldiv+1,w
  2254     0754  00C1               	movwf	_BinTOBcd$1204+1
  2255     0755  0820               	movf	?___aldiv,w
  2256     0756  00C0               	movwf	_BinTOBcd$1204
  2257                           
  2258                           ;funtions_magic.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  2259     0757  3000               	movlw	0
  2260     0758  00B1               	movwf	___almod@divisor+3
  2261     0759  3000               	movlw	0
  2262     075A  00B0               	movwf	___almod@divisor+2
  2263     075B  3000               	movlw	0
  2264     075C  00AF               	movwf	___almod@divisor+1
  2265     075D  300A               	movlw	10
  2266     075E  00AE               	movwf	___almod@divisor
  2267     075F  3000               	movlw	0
  2268     0760  00A3               	movwf	___aldiv@divisor+3
  2269     0761  3000               	movlw	0
  2270     0762  00A2               	movwf	___aldiv@divisor+2
  2271     0763  3000               	movlw	0
  2272     0764  00A1               	movwf	___aldiv@divisor+1
  2273     0765  300A               	movlw	10
  2274     0766  00A0               	movwf	___aldiv@divisor
  2275     0767  0843               	movf	_BinTOBcd$1204+3,w
  2276     0768  00A7               	movwf	___aldiv@dividend+3
  2277     0769  0842               	movf	_BinTOBcd$1204+2,w
  2278     076A  00A6               	movwf	___aldiv@dividend+2
  2279     076B  0841               	movf	_BinTOBcd$1204+1,w
  2280     076C  00A5               	movwf	___aldiv@dividend+1
  2281     076D  0840               	movf	_BinTOBcd$1204,w
  2282     076E  00A4               	movwf	___aldiv@dividend
  2283     076F  3186  2656  3186   	fcall	___aldiv
  2284     0772  0020               	movlb	0	; select bank0
  2285     0773  0823               	movf	?___aldiv+3,w
  2286     0774  00B5               	movwf	___almod@dividend+3
  2287     0775  0822               	movf	?___aldiv+2,w
  2288     0776  00B4               	movwf	___almod@dividend+2
  2289     0777  0821               	movf	?___aldiv+1,w
  2290     0778  00B3               	movwf	___almod@dividend+1
  2291     0779  0820               	movf	?___aldiv,w
  2292     077A  00B2               	movwf	___almod@dividend
  2293     077B  3185  25DA  3186   	fcall	___almod
  2294     077E  0020               	movlb	0	; select bank0
  2295     077F  082F               	movf	?___almod+1,w
  2296     0780  00DA               	movwf	BinTOBcd@r+3
  2297     0781  082E               	movf	?___almod,w
  2298     0782  00D9               	movwf	BinTOBcd@r+2
  2299                           
  2300                           ;funtions_magic.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2301     0783  3000               	movlw	0
  2302     0784  00A3               	movwf	___aldiv@divisor+3
  2303     0785  3000               	movlw	0
  2304     0786  00A2               	movwf	___aldiv@divisor+2
  2305     0787  3004               	movlw	4
  2306     0788  00A1               	movwf	___aldiv@divisor+1
  2307     0789  3000               	movlw	0
  2308     078A  00A0               	movwf	___aldiv@divisor
  2309     078B  083B               	movf	BinTOBcd@iADC+3,w
  2310     078C  00F3               	movwf	___lmul@multiplier+3
  2311     078D  083A               	movf	BinTOBcd@iADC+2,w
  2312     078E  00F2               	movwf	___lmul@multiplier+2
  2313     078F  0839               	movf	BinTOBcd@iADC+1,w
  2314     0790  00F1               	movwf	___lmul@multiplier+1
  2315     0791  0838               	movf	BinTOBcd@iADC,w
  2316     0792  00F0               	movwf	___lmul@multiplier
  2317     0793  3000               	movlw	0
  2318     0794  00F7               	movwf	___lmul@multiplicand+3
  2319     0795  3000               	movlw	0
  2320     0796  00F6               	movwf	___lmul@multiplicand+2
  2321     0797  3003               	movlw	3
  2322     0798  00F5               	movwf	___lmul@multiplicand+1
  2323     0799  30E8               	movlw	232
  2324     079A  00F4               	movwf	___lmul@multiplicand
  2325     079B  3184  245A  3186   	fcall	___lmul
  2326     079E  0873               	movf	?___lmul+3,w
  2327     079F  0020               	movlb	0	; select bank0
  2328     07A0  00A7               	movwf	___aldiv@dividend+3
  2329     07A1  0872               	movf	?___lmul+2,w
  2330     07A2  00A6               	movwf	___aldiv@dividend+2
  2331     07A3  0871               	movf	?___lmul+1,w
  2332     07A4  00A5               	movwf	___aldiv@dividend+1
  2333     07A5  0870               	movf	?___lmul,w
  2334     07A6  00A4               	movwf	___aldiv@dividend
  2335     07A7  3186  2656  3186   	fcall	___aldiv
  2336     07AA  0020               	movlb	0	; select bank0
  2337     07AB  0823               	movf	?___aldiv+3,w
  2338     07AC  00C3               	movwf	_BinTOBcd$1204+3
  2339     07AD  0822               	movf	?___aldiv+2,w
  2340     07AE  00C2               	movwf	_BinTOBcd$1204+2
  2341     07AF  0821               	movf	?___aldiv+1,w
  2342     07B0  00C1               	movwf	_BinTOBcd$1204+1
  2343     07B1  0820               	movf	?___aldiv,w
  2344     07B2  00C0               	movwf	_BinTOBcd$1204
  2345                           
  2346                           ;funtions_magic.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2347     07B3  3000               	movlw	0
  2348     07B4  00A3               	movwf	___aldiv@divisor+3
  2349     07B5  3000               	movlw	0
  2350     07B6  00A2               	movwf	___aldiv@divisor+2
  2351     07B7  3000               	movlw	0
  2352     07B8  00A1               	movwf	___aldiv@divisor+1
  2353     07B9  300A               	movlw	10
  2354     07BA  00A0               	movwf	___aldiv@divisor
  2355     07BB  0843               	movf	_BinTOBcd$1204+3,w
  2356     07BC  00A7               	movwf	___aldiv@dividend+3
  2357     07BD  0842               	movf	_BinTOBcd$1204+2,w
  2358     07BE  00A6               	movwf	___aldiv@dividend+2
  2359     07BF  0841               	movf	_BinTOBcd$1204+1,w
  2360     07C0  00A5               	movwf	___aldiv@dividend+1
  2361     07C1  0840               	movf	_BinTOBcd$1204,w
  2362     07C2  00A4               	movwf	___aldiv@dividend
  2363     07C3  3186  2656  3186   	fcall	___aldiv
  2364     07C6  0020               	movlb	0	; select bank0
  2365     07C7  0823               	movf	?___aldiv+3,w
  2366     07C8  00BF               	movwf	_BinTOBcd$1205+3
  2367     07C9  0822               	movf	?___aldiv+2,w
  2368     07CA  00BE               	movwf	_BinTOBcd$1205+2
  2369     07CB  0821               	movf	?___aldiv+1,w
  2370     07CC  00BD               	movwf	_BinTOBcd$1205+1
  2371     07CD  0820               	movf	?___aldiv,w
  2372     07CE  00BC               	movwf	_BinTOBcd$1205
  2373                           
  2374                           ;funtions_magic.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2375     07CF  3000               	movlw	0
  2376     07D0  00A3               	movwf	___aldiv@divisor+3
  2377     07D1  3000               	movlw	0
  2378     07D2  00A2               	movwf	___aldiv@divisor+2
  2379     07D3  3000               	movlw	0
  2380     07D4  00A1               	movwf	___aldiv@divisor+1
  2381     07D5  300A               	movlw	10
  2382     07D6  00A0               	movwf	___aldiv@divisor
  2383     07D7  083F               	movf	_BinTOBcd$1205+3,w
  2384     07D8  00A7               	movwf	___aldiv@dividend+3
  2385     07D9  083E               	movf	_BinTOBcd$1205+2,w
  2386     07DA  00A6               	movwf	___aldiv@dividend+2
  2387     07DB  083D               	movf	_BinTOBcd$1205+1,w
  2388     07DC  00A5               	movwf	___aldiv@dividend+1
  2389     07DD  083C               	movf	_BinTOBcd$1205,w
  2390     07DE  00A4               	movwf	___aldiv@dividend
  2391     07DF  3186  2656  3186   	fcall	___aldiv
  2392     07E2  0020               	movlb	0	; select bank0
  2393     07E3  0821               	movf	?___aldiv+1,w
  2394     07E4  00DC               	movwf	BinTOBcd@r+5
  2395     07E5  0820               	movf	?___aldiv,w
  2396     07E6  00DB               	movwf	BinTOBcd@r+4
  2397     07E7                     l1199:
  2398                           
  2399                           ;funtions_magic.c: 19:     return r;
  2400     07E7  3057               	movlw	(low (BinTOBcd@r| 0))& (0+255)
  2401     07E8                     l53:
  2402     07E8  0008               	return
  2403     07E9                     __end_of_BinTOBcd:
  2404                           
  2405                           	psect	text10
  2406     045A                     __ptext10:	
  2407 ;; *************** function ___lmul *****************
  2408 ;; Defined at:
  2409 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  multiplier      4    0[COMMON] unsigned long 
  2412 ;;  multiplicand    4    4[COMMON] unsigned long 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  product         4    8[COMMON] unsigned long 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  4    0[COMMON] unsigned long 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2424 ;;      Params:         8       0       0       0       0       0
  2425 ;;      Locals:         4       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0
  2427 ;;      Totals:        12       0       0       0       0       0
  2428 ;;Total ram usage:       12 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_BinTOBcd
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437     045A                     ___lmul:	
  2438                           ;psect for function ___lmul
  2439                           
  2440     045A                     l1015:	
  2441                           ;incstack = 0
  2442                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2443                           
  2444     045A  3000               	movlw	0
  2445     045B  00FB               	movwf	___lmul@product+3
  2446     045C  3000               	movlw	0
  2447     045D  00FA               	movwf	___lmul@product+2
  2448     045E  3000               	movlw	0
  2449     045F  00F9               	movwf	___lmul@product+1
  2450     0460  3000               	movlw	0
  2451     0461  00F8               	movwf	___lmul@product
  2452     0462                     l1017:
  2453     0462  1C70               	btfss	___lmul@multiplier,0
  2454     0463  2C65               	goto	u541
  2455     0464  2C66               	goto	u540
  2456     0465                     u541:
  2457     0465  2C6E               	goto	l1021
  2458     0466                     u540:
  2459     0466                     l1019:
  2460     0466  0874               	movf	___lmul@multiplicand,w
  2461     0467  07F8               	addwf	___lmul@product,f
  2462     0468  0875               	movf	___lmul@multiplicand+1,w
  2463     0469  3DF9               	addwfc	___lmul@product+1,f
  2464     046A  0876               	movf	___lmul@multiplicand+2,w
  2465     046B  3DFA               	addwfc	___lmul@product+2,f
  2466     046C  0877               	movf	___lmul@multiplicand+3,w
  2467     046D  3DFB               	addwfc	___lmul@product+3,f
  2468     046E                     l1021:
  2469     046E  3001               	movlw	1
  2470     046F                     u555:
  2471     046F  35F4               	lslf	___lmul@multiplicand,f
  2472     0470  0DF5               	rlf	___lmul@multiplicand+1,f
  2473     0471  0DF6               	rlf	___lmul@multiplicand+2,f
  2474     0472  0DF7               	rlf	___lmul@multiplicand+3,f
  2475     0473  0B89               	decfsz	9,f
  2476     0474  2C6F               	goto	u555
  2477     0475                     l1023:
  2478     0475  3001               	movlw	1
  2479     0476                     u565:
  2480     0476  36F3               	lsrf	___lmul@multiplier+3,f
  2481     0477  0CF2               	rrf	___lmul@multiplier+2,f
  2482     0478  0CF1               	rrf	___lmul@multiplier+1,f
  2483     0479  0CF0               	rrf	___lmul@multiplier,f
  2484     047A  0B89               	decfsz	9,f
  2485     047B  2C76               	goto	u565
  2486     047C  0873               	movf	___lmul@multiplier+3,w
  2487     047D  0472               	iorwf	___lmul@multiplier+2,w
  2488     047E  0471               	iorwf	___lmul@multiplier+1,w
  2489     047F  0470               	iorwf	___lmul@multiplier,w
  2490     0480  1D03               	skipz
  2491     0481  2C83               	goto	u571
  2492     0482  2C84               	goto	u570
  2493     0483                     u571:
  2494     0483  2C62               	goto	l1017
  2495     0484                     u570:
  2496     0484                     l1025:
  2497     0484  087B               	movf	___lmul@product+3,w
  2498     0485  00F3               	movwf	?___lmul+3
  2499     0486  087A               	movf	___lmul@product+2,w
  2500     0487  00F2               	movwf	?___lmul+2
  2501     0488  0879               	movf	___lmul@product+1,w
  2502     0489  00F1               	movwf	?___lmul+1
  2503     048A  0878               	movf	___lmul@product,w
  2504     048B  00F0               	movwf	?___lmul
  2505     048C                     l281:
  2506     048C  0008               	return
  2507     048D                     __end_of___lmul:
  2508                           
  2509                           	psect	text11
  2510     05DA                     __ptext11:	
  2511 ;; *************** function ___almod *****************
  2512 ;; Defined at:
  2513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\almod.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  divisor         4   14[BANK0 ] long 
  2516 ;;  dividend        4   18[BANK0 ] long 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  sign            1   23[BANK0 ] unsigned char 
  2519 ;;  counter         1   22[BANK0 ] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  4   14[BANK0 ] long 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2529 ;;      Params:         0       8       0       0       0       0
  2530 ;;      Locals:         0       2       0       0       0       0
  2531 ;;      Temps:          1       0       0       0       0       0
  2532 ;;      Totals:         1      10       0       0       0       0
  2533 ;;Total ram usage:       11 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_BinTOBcd
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542     05DA                     ___almod:	
  2543                           ;psect for function ___almod
  2544                           
  2545     05DA                     l1069:	
  2546                           ;incstack = 0
  2547                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2548                           
  2549     05DA  0020               	movlb	0	; select bank0
  2550     05DB  01B7               	clrf	___almod@sign
  2551     05DC                     l1071:
  2552     05DC  1FB5               	btfss	___almod@dividend+3,7
  2553     05DD  2DDF               	goto	u681
  2554     05DE  2DE0               	goto	u680
  2555     05DF                     u681:
  2556     05DF  2DED               	goto	l345
  2557     05E0                     u680:
  2558     05E0                     l1073:
  2559     05E0  09B2               	comf	___almod@dividend,f
  2560     05E1  09B3               	comf	___almod@dividend+1,f
  2561     05E2  09B4               	comf	___almod@dividend+2,f
  2562     05E3  09B5               	comf	___almod@dividend+3,f
  2563     05E4  0AB2               	incf	___almod@dividend,f
  2564     05E5  1903               	skipnz
  2565     05E6  0AB3               	incf	___almod@dividend+1,f
  2566     05E7  1903               	skipnz
  2567     05E8  0AB4               	incf	___almod@dividend+2,f
  2568     05E9  1903               	skipnz
  2569     05EA  0AB5               	incf	___almod@dividend+3,f
  2570     05EB  01B7               	clrf	___almod@sign
  2571     05EC  0AB7               	incf	___almod@sign,f
  2572     05ED                     l345:
  2573     05ED  1FB1               	btfss	___almod@divisor+3,7
  2574     05EE  2DF0               	goto	u691
  2575     05EF  2DF1               	goto	u690
  2576     05F0                     u691:
  2577     05F0  2DFC               	goto	l1077
  2578     05F1                     u690:
  2579     05F1                     l1075:
  2580     05F1  09AE               	comf	___almod@divisor,f
  2581     05F2  09AF               	comf	___almod@divisor+1,f
  2582     05F3  09B0               	comf	___almod@divisor+2,f
  2583     05F4  09B1               	comf	___almod@divisor+3,f
  2584     05F5  0AAE               	incf	___almod@divisor,f
  2585     05F6  1903               	skipnz
  2586     05F7  0AAF               	incf	___almod@divisor+1,f
  2587     05F8  1903               	skipnz
  2588     05F9  0AB0               	incf	___almod@divisor+2,f
  2589     05FA  1903               	skipnz
  2590     05FB  0AB1               	incf	___almod@divisor+3,f
  2591     05FC                     l1077:
  2592     05FC  0831               	movf	___almod@divisor+3,w
  2593     05FD  0430               	iorwf	___almod@divisor+2,w
  2594     05FE  042F               	iorwf	___almod@divisor+1,w
  2595     05FF  042E               	iorwf	___almod@divisor,w
  2596     0600  1903               	skipnz
  2597     0601  2E03               	goto	u701
  2598     0602  2E04               	goto	u700
  2599     0603                     u701:
  2600     0603  2E3D               	goto	l1093
  2601     0604                     u700:
  2602     0604                     l1079:
  2603     0604  01B6               	clrf	___almod@counter
  2604     0605  0AB6               	incf	___almod@counter,f
  2605     0606  2E12               	goto	l1083
  2606     0607                     l1081:
  2607     0607  3001               	movlw	1
  2608     0608                     u715:
  2609     0608  35AE               	lslf	___almod@divisor,f
  2610     0609  0DAF               	rlf	___almod@divisor+1,f
  2611     060A  0DB0               	rlf	___almod@divisor+2,f
  2612     060B  0DB1               	rlf	___almod@divisor+3,f
  2613     060C  0B89               	decfsz	9,f
  2614     060D  2E08               	goto	u715
  2615     060E  3001               	movlw	1
  2616     060F  00FD               	movwf	??___almod
  2617     0610  087D               	movf	??___almod,w
  2618     0611  07B6               	addwf	___almod@counter,f
  2619     0612                     l1083:
  2620     0612  1FB1               	btfss	___almod@divisor+3,7
  2621     0613  2E15               	goto	u721
  2622     0614  2E16               	goto	u720
  2623     0615                     u721:
  2624     0615  2E07               	goto	l1081
  2625     0616                     u720:
  2626     0616                     l1085:
  2627     0616  0831               	movf	___almod@divisor+3,w
  2628     0617  0235               	subwf	___almod@dividend+3,w
  2629     0618  1D03               	skipz
  2630     0619  2E24               	goto	u735
  2631     061A  0830               	movf	___almod@divisor+2,w
  2632     061B  0234               	subwf	___almod@dividend+2,w
  2633     061C  1D03               	skipz
  2634     061D  2E24               	goto	u735
  2635     061E  082F               	movf	___almod@divisor+1,w
  2636     061F  0233               	subwf	___almod@dividend+1,w
  2637     0620  1D03               	skipz
  2638     0621  2E24               	goto	u735
  2639     0622  082E               	movf	___almod@divisor,w
  2640     0623  0232               	subwf	___almod@dividend,w
  2641     0624                     u735:
  2642     0624  1C03               	skipc
  2643     0625  2E27               	goto	u731
  2644     0626  2E28               	goto	u730
  2645     0627                     u731:
  2646     0627  2E30               	goto	l1089
  2647     0628                     u730:
  2648     0628                     l1087:
  2649     0628  082E               	movf	___almod@divisor,w
  2650     0629  02B2               	subwf	___almod@dividend,f
  2651     062A  082F               	movf	___almod@divisor+1,w
  2652     062B  3BB3               	subwfb	___almod@dividend+1,f
  2653     062C  0830               	movf	___almod@divisor+2,w
  2654     062D  3BB4               	subwfb	___almod@dividend+2,f
  2655     062E  0831               	movf	___almod@divisor+3,w
  2656     062F  3BB5               	subwfb	___almod@dividend+3,f
  2657     0630                     l1089:
  2658     0630  3001               	movlw	1
  2659     0631                     u745:
  2660     0631  36B1               	lsrf	___almod@divisor+3,f
  2661     0632  0CB0               	rrf	___almod@divisor+2,f
  2662     0633  0CAF               	rrf	___almod@divisor+1,f
  2663     0634  0CAE               	rrf	___almod@divisor,f
  2664     0635  0B89               	decfsz	9,f
  2665     0636  2E31               	goto	u745
  2666     0637                     l1091:
  2667     0637  3001               	movlw	1
  2668     0638  02B6               	subwf	___almod@counter,f
  2669     0639  1D03               	btfss	3,2
  2670     063A  2E3C               	goto	u751
  2671     063B  2E3D               	goto	u750
  2672     063C                     u751:
  2673     063C  2E16               	goto	l1085
  2674     063D                     u750:
  2675     063D                     l1093:
  2676     063D  0837               	movf	___almod@sign,w
  2677     063E  1903               	btfsc	3,2
  2678     063F  2E41               	goto	u761
  2679     0640  2E42               	goto	u760
  2680     0641                     u761:
  2681     0641  2E4D               	goto	l1097
  2682     0642                     u760:
  2683     0642                     l1095:
  2684     0642  09B2               	comf	___almod@dividend,f
  2685     0643  09B3               	comf	___almod@dividend+1,f
  2686     0644  09B4               	comf	___almod@dividend+2,f
  2687     0645  09B5               	comf	___almod@dividend+3,f
  2688     0646  0AB2               	incf	___almod@dividend,f
  2689     0647  1903               	skipnz
  2690     0648  0AB3               	incf	___almod@dividend+1,f
  2691     0649  1903               	skipnz
  2692     064A  0AB4               	incf	___almod@dividend+2,f
  2693     064B  1903               	skipnz
  2694     064C  0AB5               	incf	___almod@dividend+3,f
  2695     064D                     l1097:
  2696     064D  0835               	movf	___almod@dividend+3,w
  2697     064E  00B1               	movwf	?___almod+3
  2698     064F  0834               	movf	___almod@dividend+2,w
  2699     0650  00B0               	movwf	?___almod+2
  2700     0651  0833               	movf	___almod@dividend+1,w
  2701     0652  00AF               	movwf	?___almod+1
  2702     0653  0832               	movf	___almod@dividend,w
  2703     0654  00AE               	movwf	?___almod
  2704     0655                     l355:
  2705     0655  0008               	return
  2706     0656                     __end_of___almod:
  2707                           
  2708                           	psect	text12
  2709     0656                     __ptext12:	
  2710 ;; *************** function ___aldiv *****************
  2711 ;; Defined at:
  2712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  divisor         4    0[BANK0 ] long 
  2715 ;;  dividend        4    4[BANK0 ] long 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  quotient        4   10[BANK0 ] long 
  2718 ;;  sign            1    9[BANK0 ] unsigned char 
  2719 ;;  counter         1    8[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  4    0[BANK0 ] long 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2729 ;;      Params:         0       8       0       0       0       0
  2730 ;;      Locals:         0       6       0       0       0       0
  2731 ;;      Temps:          1       0       0       0       0       0
  2732 ;;      Totals:         1      14       0       0       0       0
  2733 ;;Total ram usage:       15 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_BinTOBcd
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742     0656                     ___aldiv:	
  2743                           ;psect for function ___aldiv
  2744                           
  2745     0656                     l1029:	
  2746                           ;incstack = 0
  2747                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2748                           
  2749     0656  0020               	movlb	0	; select bank0
  2750     0657  01A9               	clrf	___aldiv@sign
  2751     0658                     l1031:
  2752     0658  1FA3               	btfss	___aldiv@divisor+3,7
  2753     0659  2E5B               	goto	u581
  2754     065A  2E5C               	goto	u580
  2755     065B                     u581:
  2756     065B  2E69               	goto	l332
  2757     065C                     u580:
  2758     065C                     l1033:
  2759     065C  09A0               	comf	___aldiv@divisor,f
  2760     065D  09A1               	comf	___aldiv@divisor+1,f
  2761     065E  09A2               	comf	___aldiv@divisor+2,f
  2762     065F  09A3               	comf	___aldiv@divisor+3,f
  2763     0660  0AA0               	incf	___aldiv@divisor,f
  2764     0661  1903               	skipnz
  2765     0662  0AA1               	incf	___aldiv@divisor+1,f
  2766     0663  1903               	skipnz
  2767     0664  0AA2               	incf	___aldiv@divisor+2,f
  2768     0665  1903               	skipnz
  2769     0666  0AA3               	incf	___aldiv@divisor+3,f
  2770     0667  01A9               	clrf	___aldiv@sign
  2771     0668  0AA9               	incf	___aldiv@sign,f
  2772     0669                     l332:
  2773     0669  1FA7               	btfss	___aldiv@dividend+3,7
  2774     066A  2E6C               	goto	u591
  2775     066B  2E6D               	goto	u590
  2776     066C                     u591:
  2777     066C  2E7C               	goto	l1039
  2778     066D                     u590:
  2779     066D                     l1035:
  2780     066D  09A4               	comf	___aldiv@dividend,f
  2781     066E  09A5               	comf	___aldiv@dividend+1,f
  2782     066F  09A6               	comf	___aldiv@dividend+2,f
  2783     0670  09A7               	comf	___aldiv@dividend+3,f
  2784     0671  0AA4               	incf	___aldiv@dividend,f
  2785     0672  1903               	skipnz
  2786     0673  0AA5               	incf	___aldiv@dividend+1,f
  2787     0674  1903               	skipnz
  2788     0675  0AA6               	incf	___aldiv@dividend+2,f
  2789     0676  1903               	skipnz
  2790     0677  0AA7               	incf	___aldiv@dividend+3,f
  2791     0678                     l1037:
  2792     0678  3001               	movlw	1
  2793     0679  00FC               	movwf	??___aldiv
  2794     067A  087C               	movf	??___aldiv,w
  2795     067B  06A9               	xorwf	___aldiv@sign,f
  2796     067C                     l1039:
  2797     067C  3000               	movlw	0
  2798     067D  00AD               	movwf	___aldiv@quotient+3
  2799     067E  3000               	movlw	0
  2800     067F  00AC               	movwf	___aldiv@quotient+2
  2801     0680  3000               	movlw	0
  2802     0681  00AB               	movwf	___aldiv@quotient+1
  2803     0682  3000               	movlw	0
  2804     0683  00AA               	movwf	___aldiv@quotient
  2805     0684                     l1041:
  2806     0684  0823               	movf	___aldiv@divisor+3,w
  2807     0685  0422               	iorwf	___aldiv@divisor+2,w
  2808     0686  0421               	iorwf	___aldiv@divisor+1,w
  2809     0687  0420               	iorwf	___aldiv@divisor,w
  2810     0688  1903               	skipnz
  2811     0689  2E8B               	goto	u601
  2812     068A  2E8C               	goto	u600
  2813     068B                     u601:
  2814     068B  2ECD               	goto	l1061
  2815     068C                     u600:
  2816     068C                     l1043:
  2817     068C  01A8               	clrf	___aldiv@counter
  2818     068D  0AA8               	incf	___aldiv@counter,f
  2819     068E  2E9A               	goto	l1047
  2820     068F                     l1045:
  2821     068F  3001               	movlw	1
  2822     0690                     u615:
  2823     0690  35A0               	lslf	___aldiv@divisor,f
  2824     0691  0DA1               	rlf	___aldiv@divisor+1,f
  2825     0692  0DA2               	rlf	___aldiv@divisor+2,f
  2826     0693  0DA3               	rlf	___aldiv@divisor+3,f
  2827     0694  0B89               	decfsz	9,f
  2828     0695  2E90               	goto	u615
  2829     0696  3001               	movlw	1
  2830     0697  00FC               	movwf	??___aldiv
  2831     0698  087C               	movf	??___aldiv,w
  2832     0699  07A8               	addwf	___aldiv@counter,f
  2833     069A                     l1047:
  2834     069A  1FA3               	btfss	___aldiv@divisor+3,7
  2835     069B  2E9D               	goto	u621
  2836     069C  2E9E               	goto	u620
  2837     069D                     u621:
  2838     069D  2E8F               	goto	l1045
  2839     069E                     u620:
  2840     069E                     l1049:
  2841     069E  3001               	movlw	1
  2842     069F                     u635:
  2843     069F  35AA               	lslf	___aldiv@quotient,f
  2844     06A0  0DAB               	rlf	___aldiv@quotient+1,f
  2845     06A1  0DAC               	rlf	___aldiv@quotient+2,f
  2846     06A2  0DAD               	rlf	___aldiv@quotient+3,f
  2847     06A3  0B89               	decfsz	9,f
  2848     06A4  2E9F               	goto	u635
  2849     06A5                     l1051:
  2850     06A5  0823               	movf	___aldiv@divisor+3,w
  2851     06A6  0227               	subwf	___aldiv@dividend+3,w
  2852     06A7  1D03               	skipz
  2853     06A8  2EB3               	goto	u645
  2854     06A9  0822               	movf	___aldiv@divisor+2,w
  2855     06AA  0226               	subwf	___aldiv@dividend+2,w
  2856     06AB  1D03               	skipz
  2857     06AC  2EB3               	goto	u645
  2858     06AD  0821               	movf	___aldiv@divisor+1,w
  2859     06AE  0225               	subwf	___aldiv@dividend+1,w
  2860     06AF  1D03               	skipz
  2861     06B0  2EB3               	goto	u645
  2862     06B1  0820               	movf	___aldiv@divisor,w
  2863     06B2  0224               	subwf	___aldiv@dividend,w
  2864     06B3                     u645:
  2865     06B3  1C03               	skipc
  2866     06B4  2EB6               	goto	u641
  2867     06B5  2EB7               	goto	u640
  2868     06B6                     u641:
  2869     06B6  2EC0               	goto	l1057
  2870     06B7                     u640:
  2871     06B7                     l1053:
  2872     06B7  0820               	movf	___aldiv@divisor,w
  2873     06B8  02A4               	subwf	___aldiv@dividend,f
  2874     06B9  0821               	movf	___aldiv@divisor+1,w
  2875     06BA  3BA5               	subwfb	___aldiv@dividend+1,f
  2876     06BB  0822               	movf	___aldiv@divisor+2,w
  2877     06BC  3BA6               	subwfb	___aldiv@dividend+2,f
  2878     06BD  0823               	movf	___aldiv@divisor+3,w
  2879     06BE  3BA7               	subwfb	___aldiv@dividend+3,f
  2880     06BF                     l1055:
  2881     06BF  142A               	bsf	___aldiv@quotient,0
  2882     06C0                     l1057:
  2883     06C0  3001               	movlw	1
  2884     06C1                     u655:
  2885     06C1  36A3               	lsrf	___aldiv@divisor+3,f
  2886     06C2  0CA2               	rrf	___aldiv@divisor+2,f
  2887     06C3  0CA1               	rrf	___aldiv@divisor+1,f
  2888     06C4  0CA0               	rrf	___aldiv@divisor,f
  2889     06C5  0B89               	decfsz	9,f
  2890     06C6  2EC1               	goto	u655
  2891     06C7                     l1059:
  2892     06C7  3001               	movlw	1
  2893     06C8  02A8               	subwf	___aldiv@counter,f
  2894     06C9  1D03               	btfss	3,2
  2895     06CA  2ECC               	goto	u661
  2896     06CB  2ECD               	goto	u660
  2897     06CC                     u661:
  2898     06CC  2E9E               	goto	l1049
  2899     06CD                     u660:
  2900     06CD                     l1061:
  2901     06CD  0829               	movf	___aldiv@sign,w
  2902     06CE  1903               	btfsc	3,2
  2903     06CF  2ED1               	goto	u671
  2904     06D0  2ED2               	goto	u670
  2905     06D1                     u671:
  2906     06D1  2EDD               	goto	l1065
  2907     06D2                     u670:
  2908     06D2                     l1063:
  2909     06D2  09AA               	comf	___aldiv@quotient,f
  2910     06D3  09AB               	comf	___aldiv@quotient+1,f
  2911     06D4  09AC               	comf	___aldiv@quotient+2,f
  2912     06D5  09AD               	comf	___aldiv@quotient+3,f
  2913     06D6  0AAA               	incf	___aldiv@quotient,f
  2914     06D7  1903               	skipnz
  2915     06D8  0AAB               	incf	___aldiv@quotient+1,f
  2916     06D9  1903               	skipnz
  2917     06DA  0AAC               	incf	___aldiv@quotient+2,f
  2918     06DB  1903               	skipnz
  2919     06DC  0AAD               	incf	___aldiv@quotient+3,f
  2920     06DD                     l1065:
  2921     06DD  082D               	movf	___aldiv@quotient+3,w
  2922     06DE  00A3               	movwf	?___aldiv+3
  2923     06DF  082C               	movf	___aldiv@quotient+2,w
  2924     06E0  00A2               	movwf	?___aldiv+2
  2925     06E1  082B               	movf	___aldiv@quotient+1,w
  2926     06E2  00A1               	movwf	?___aldiv+1
  2927     06E3  082A               	movf	___aldiv@quotient,w
  2928     06E4  00A0               	movwf	?___aldiv
  2929     06E5                     l342:
  2930     06E5  0008               	return
  2931     06E6                     __end_of___aldiv:
  2932                           
  2933                           	psect	text13
  2934     03F2                     __ptext13:	
  2935 ;; *************** function _ASCII_Con *****************
  2936 ;; Defined at:
  2937 ;;		line 141 in file "funtions_magic.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  a               2    0[COMMON] int 
  2940 ;;  b               2    2[COMMON] int 
  2941 ;;  c               2    4[COMMON] int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      PTR unsigned char 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2953 ;;      Params:         6       0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0
  2956 ;;      Totals:         6       0       0       0       0       0
  2957 ;;Total ram usage:        6 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966     03F2                     _ASCII_Con:	
  2967                           ;psect for function _ASCII_Con
  2968                           
  2969     03F2                     l1215:	
  2970                           ;incstack = 0
  2971                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  2972                           
  2973                           
  2974                           ;funtions_magic.c: 141: unsigned char* ASCII_Con(int a, int b, int c);funtions_magic.c: 
      +                          142: {;funtions_magic.c: 143:     static char r[7];;funtions_magic.c: 144:     r[0] = a+
      +                          48;
  2975     03F2  0870               	movf	ASCII_Con@a,w
  2976     03F3  3E30               	addlw	48
  2977     03F4  0020               	movlb	0	; select bank0
  2978     03F5  00CA               	movwf	ASCII_Con@r
  2979     03F6                     l1217:
  2980                           
  2981                           ;funtions_magic.c: 145:     r[1] = '.';
  2982     03F6  302E               	movlw	46
  2983     03F7  00CB               	movwf	ASCII_Con@r+1
  2984     03F8                     l1219:
  2985                           
  2986                           ;funtions_magic.c: 146:     r[2] = b+48;
  2987     03F8  0872               	movf	ASCII_Con@b,w
  2988     03F9  3E30               	addlw	48
  2989     03FA  00CC               	movwf	ASCII_Con@r+2
  2990     03FB                     l1221:
  2991                           
  2992                           ;funtions_magic.c: 147:     r[3] = c+48;
  2993     03FB  0874               	movf	ASCII_Con@c,w
  2994     03FC  3E30               	addlw	48
  2995     03FD  00CD               	movwf	ASCII_Con@r+3
  2996     03FE                     l1223:
  2997                           
  2998                           ;funtions_magic.c: 148:     r[4] = ' ';
  2999     03FE  3020               	movlw	32
  3000     03FF  00CE               	movwf	ASCII_Con@r+4
  3001     0400                     l1225:
  3002                           
  3003                           ;funtions_magic.c: 149:     r[5] = 'V';
  3004     0400  3056               	movlw	86
  3005     0401  00CF               	movwf	ASCII_Con@r+5
  3006     0402                     l1227:
  3007                           
  3008                           ;funtions_magic.c: 150:     r[6] = '\0';
  3009     0402  01D0               	clrf	ASCII_Con@r+6
  3010     0403                     l1229:
  3011                           
  3012                           ;funtions_magic.c: 152:     return r;
  3013     0403  304A               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  3014     0404                     l94:
  3015     0404  0008               	return
  3016     0405                     __end_of_ASCII_Con:
  3017     007E                     btemp	set	126	;btemp
  3018     007E                     wtemp0	set	126
  3019                           
  3020                           	psect	idloc
  3021                           
  3022                           ;Config register IDLOC0 @ 0x8000
  3023                           ;	unspecified, using default values
  3024     8000                     	org	32768
  3025     8000  3FFF               	dw	16383
  3026                           
  3027                           ;Config register IDLOC1 @ 0x8001
  3028                           ;	unspecified, using default values
  3029     8001                     	org	32769
  3030     8001  3FFF               	dw	16383
  3031                           
  3032                           ;Config register IDLOC2 @ 0x8002
  3033                           ;	unspecified, using default values
  3034     8002                     	org	32770
  3035     8002  3FFF               	dw	16383
  3036                           
  3037                           ;Config register IDLOC3 @ 0x8003
  3038                           ;	unspecified, using default values
  3039     8003                     	org	32771
  3040     8003  3FFF               	dw	16383
  3041                           
  3042                           	psect	config
  3043                           
  3044                           ;Config register CONFIG1 @ 0x8007
  3045                           ;	Oscillator Selection
  3046                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3047                           ;	Watchdog Timer Enable
  3048                           ;	WDTE = OFF, WDT disabled
  3049                           ;	Power-up Timer Enable
  3050                           ;	PWRTE = OFF, PWRT disabled
  3051                           ;	MCLR Pin Function Select
  3052                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3053                           ;	Flash Program Memory Code Protection
  3054                           ;	CP = OFF, Program memory code protection is disabled
  3055                           ;	Data Memory Code Protection
  3056                           ;	CPD = OFF, Data memory code protection is disabled
  3057                           ;	Brown-out Reset Enable
  3058                           ;	BOREN = ON, Brown-out Reset enabled
  3059                           ;	Clock Out Enable
  3060                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3061                           ;	Internal/External Switchover
  3062                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3063                           ;	Fail-Safe Clock Monitor Enable
  3064                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3065     8007                     	org	32775
  3066     8007  3FE4               	dw	16356
  3067                           
  3068                           ;Config register CONFIG2 @ 0x8008
  3069                           ;	Flash Memory Self-Write Protection
  3070                           ;	WRT = OFF, Write protection off
  3071                           ;	PLL Enable
  3072                           ;	PLLEN = OFF, 4x PLL disabled
  3073                           ;	Stack Overflow/Underflow Reset Enable
  3074                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3075                           ;	Brown-out Reset Voltage Selection
  3076                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3077                           ;	Low-Voltage Programming Enable
  3078                           ;	LVP = ON, Low-voltage programming enabled
  3079     8008                     	org	32776
  3080     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         19
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      61
    BANK1            80      0      20
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    showNumbers@digits	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    seg7@iBCD	PTR const int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__seg7	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    main@A	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    sp__BinTOBcd	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    main@B	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 


Critical Paths under _main in COMMON

    _showNumbers->_showNumber
    _UART_print->_UART_write
    _BinTOBcd->___almod
    ___almod->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_BinTOBcd
    _BinTOBcd->___almod
    ___almod->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3819
                                             36 BANK0      6     6      0
                          _ASCII_Con
                           _BinTOBcd
                         _UART_print
                            _init_IO
                            _readADC
                               _seg7
                        _showNumbers
 ---------------------------------------------------------------------------------
 (1) _showNumbers                                          4     4      0     527
                                              3 COMMON     4     4      0
                         _showNumber
 ---------------------------------------------------------------------------------
 (2) _showNumber                                           3     1      2     382
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _seg7                                                22    22      0     169
                                              0 COMMON     1     1      0
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                             13     9      4      23
                                              0 COMMON    13     9      4
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_print                                           2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BinTOBcd                                            12     8      4    2571
                                             24 BANK0     12     8      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     600
                                             13 COMMON     1     1      0
                                             14 BANK0     10     2      8
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1212
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ASCII_Con
   _BinTOBcd
     ___aldiv
       ___lmul (ARG)
     ___almod
       ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _UART_print
     _UART_write
   _init_IO
     _init_UART
   _readADC
   _seg7
   _showNumbers
     _showNumber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      3D       6       76.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      14       8       25.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 04 12:17:19 2023

                     l19 053D                       l60 04C1                       l53 07E8  
                     l71 0439                       l63 04FC                       l80 03E0  
                     l74 0459                       l83 03E4                       l68 05D9  
                     l77 03F1                       l94 0404                       l89 042E  
                    l117 0539                      l332 0669                      l342 06E5  
                    l345 05ED                      l281 048C                      l355 0655  
                    u410 04C8                      u411 04C5                      u510 04F0  
                    u430 04D0                      u511 04ED                      u431 04CD  
                    u600 068C                      u504 04EA                      u424 04CA  
                    u601 068B                      u530 03E4                      u450 04D8  
                    u531 03E3                      u451 04D5                      u620 069E  
                    u700 0604                      u540 0466                      u524 04F2  
                    u444 04D2                      u621 069D                      u701 0603  
                    u541 0465                      u470 04E0                      u615 0690  
                    u471 04DD                      u640 06B7                      u720 0616  
                    u464 04DA                      u800 05D9                      u641 06B6  
                    u721 0615                      u801 05D8                      u730 0628  
                    u570 0484                      u490 04E8                      u635 069F  
                    u731 0627                      u715 0608                      u571 0483  
                    u555 046F                      u491 04E5                      u660 06CD  
                    u580 065C                      u484 04E2                      u661 06CC  
                    u645 06B3                      u581 065B                      u565 0476  
                    u805 05D5                      u670 06D2                      u590 066D  
                    u750 063D                      u671 06D1                      u655 06C1  
                    u591 066C                      u751 063C                      u735 0624  
                    u760 0642                      u680 05E0                      u761 0641  
                    u745 0631                      u681 05DF                      u817 0593  
                    u690 05F1                      u770 043D                      u691 05F0  
                    u771 043C                      u827 05AA                      u780 0499  
                    u837 05C1                      u790 042E                      u791 042D  
                    wreg 0009                     l1011 03F0                     l1003 04C2  
                   l1021 046E                     l1013 03DD                     l1101 04FD  
                   l1005 04F2                     l1031 0658                     l1023 0475  
                   l1015 045A                     l1007 03E5                     l1111 0509  
                   l1103 0504                     l1041 0684                     l1033 065C  
                   l1025 0484                     l1017 0462                     l1009 03EE  
                   l1121 050F                     l1113 050A                     l1105 0506  
                   l1051 06A5                     l1043 068C                     l1035 066D  
                   l1019 0466                     l1131 0515                     l1123 0510  
                   l1115 050C                     l1107 0507                     l1211 04C0  
                   l1203 048F                     l1221 03FB                     l1053 06B7  
                   l1045 068F                     l1061 06CD                     l1037 0678  
                   l1029 0656                     l1141 051A                     l1133 0516  
                   l1125 0511                     l1117 050D                     l1109 0508  
                   l1205 049D                     l1223 03FE                     l1215 03F2  
                   l1063 06D2                     l1055 06BF                     l1047 069A  
                   l1039 067C                     l1071 05DC                     l1151 0520  
                   l1143 051C                     l1135 0517                     l1127 0512  
                   l1119 050E                     l1207 04A8                     l1225 0400  
                   l1217 03F6                     l1065 06DD                     l1057 06C0  
                   l1049 069E                     l1081 0607                     l1073 05E0  
                   l1233 041A                     l1161 052B                     l1153 0521  
                   l1145 051D                     l1137 0518                     l1129 0514  
                   l1209 04B4                     l1241 0582                     l1227 0402  
                   l1219 03F8                     l1059 06C7                     l1091 0637  
                   l1083 0612                     l1075 05F1                     l1235 041B  
                   l1171 0531                     l1163 052D                     l1155 0522  
                   l1147 051E                     l1139 0519                     l1251 0590  
                   l1229 0403                     l1085 0616                     l1093 063D  
                   l1077 05FC                     l1069 05DA                     l1237 0422  
                   l1181 0536                     l1173 0532                     l1165 052E  
                   l1157 0523                     l1149 051F                     l1261 05B1  
                   l1253 0598                     l1095 0642                     l1087 0628  
                   l1079 0604                     l1239 0426                     l1175 0533  
                   l1167 052F                     l1159 0527                     l1191 043D  
                   l1183 042F                     l1271 05CC                     l1263 05BC  
                   l1255 059A                     l1247 0584                     l1097 064D  
                   l1089 0630                     l1177 0534                     l1169 0530  
                   l1193 0451                     l1185 0431                     l1265 05BE  
                   l1257 05A5                     l1249 058E                     l1273 053A  
                   l1179 0535                     l1187 0437                     l1267 05C6  
                   l1259 05AF                     l1275 0556                     l1197 06E6  
                   l1189 0438                     l1269 05C8                     l1277 055C  
                   l1199 07E7                     l1279 0579                     _main 053A  
                   _seg7 048D                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 0002  
            seg7@numbers 0020          __end_of___aldiv 06E6          __end_of___almod 0656  
                  ?_main 0070                    ?_seg7 0070                    _SPBRG 019B  
                  _TXREG 019A      ___lmul@multiplicand 0074          __end_of_readADC 045A  
        __end_of_init_IO 053A              ?_UART_print 0070              ?_UART_write 0070  
                  main@A 0048                    main@B 0049                    seg7@r 0051  
       __end_of_BinTOBcd 07E9            _BinTOBcd$1204 0040            _BinTOBcd$1205 003C  
                  status 0003                    wtemp0 007E        __end_of_ASCII_Con 0405  
        __initialization 07E9             __end_of_main 0581             __end_of_seg7 04C2  
                 ??_main 007E                   ??_seg7 0070                   _ADRESH 009C  
                 _ADRESL 009B                   ___lmul 045A                ??___aldiv 007C  
              ??___almod 007D                ??_readADC 0074                ??_init_IO 0070  
           ?_showNumbers 0070  __end_of__initialization 07FD             BinTOBcd@iADC 0038  
         __pcstackCOMMON 0070             __pidataBANK1 0405                ?_BinTOBcd 0038  
             __pbssBANK0 004A               __pmaintext 053A                  ?___lmul 0070  
         ___lmul@product 0078               ??_BinTOBcd 007E             ??_UART_print 0071  
           ??_UART_write 0070                  ___aldiv 0656                  ___almod 05DA  
              _ASCII_Con 03F2                BinTOBcd@r 0057               ASCII_Con@a 0070  
             ASCII_Con@b 0072               ASCII_Con@c 0074               ASCII_Con@r 004A  
     __end_of_UART_print 042F       __end_of_UART_write 03E5                  __ptext1 0581  
                __ptext2 04C2                  __ptext3 048D                  __ptext4 042F  
                __ptext5 04FD                  __ptext6 03E5                  __ptext7 0419  
                __ptext8 03DC                  __ptext9 06E6        __end_of_init_UART 03F2  
                _readADC 042F                  _init_IO 04FD         ___aldiv@dividend 0024  
                clrloop0 03D1     end_of_initialization 07FD                  init_ram 03D6  
                initloop 03D7                _RCSTAbits 019D              UART_write@c 0070  
       ___aldiv@quotient 002A               ?_ASCII_Con 0070               _showNumber 04C2  
              _TRISAbits 008C                _TRISBbits 008D                _TXSTAbits 019E  
         __end_of___lmul 048D              _BAUDCONbits 019F      start_initialization 07E9  
            _APFCON1bits 011E                 ??___lmul 0078              ??_ASCII_Con 0076  
            __pdataBANK1 00A0              ?_showNumber 0070                ___latbits 0001  
          __pcstackBANK0 0020                 ?___aldiv 0020                 ?___almod 002E  
       ___almod@dividend 0032                 ?_readADC 0070                 ?_init_IO 0070  
              _init_UART 03E5          ___aldiv@divisor 0020          ___aldiv@counter 0028  
               _LATAbits 010C                 _LATBbits 010D                clear_ram0 03D0  
              seg7@F2503 00A0               _ADCON0bits 009D               _ADCON1bits 009E  
               _BinTOBcd 06E6            ??_showNumbers 0073               ?_init_UART 0070  
      ___lmul@multiplier 0070        showNumbers@digits 0076         UART_print@cadena 0072  
             _ANSELAbits 018C               _ANSELBbits 018D                 __ptext10 045A  
               __ptext11 05DA                 __ptext12 0656                 __ptext13 03F2  
        ___almod@divisor 002E          ___almod@counter 0036      __end_of_showNumbers 05DA  
               main@iADC 0044                 seg7@iBCD 0034             ??_showNumber 0072  
               readADC@r 0079               _FVRCONbits 0117              ??_init_UART 0070  
     __end_of_showNumber 04FD               _OSCCONbits 0099          showNumber@digit 0070  
            _showNumbers 0581             ___aldiv@sign 0029               _UART_print 0419  
             _UART_write 03DC             ___almod@sign 0037             showNumbers@i 0074  
