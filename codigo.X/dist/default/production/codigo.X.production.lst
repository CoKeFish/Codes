

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 03 01:44:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1827 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0095                     	;# 
   101     0096                     	;# 
   102     0097                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009B                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     0111                     	;# 
   114     0112                     	;# 
   115     0113                     	;# 
   116     0114                     	;# 
   117     0115                     	;# 
   118     0116                     	;# 
   119     0117                     	;# 
   120     0118                     	;# 
   121     0119                     	;# 
   122     011A                     	;# 
   123     011B                     	;# 
   124     011D                     	;# 
   125     011E                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0191                     	;# 
   129     0191                     	;# 
   130     0192                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019B                     	;# 
   142     019B                     	;# 
   143     019C                     	;# 
   144     019C                     	;# 
   145     019D                     	;# 
   146     019E                     	;# 
   147     019F                     	;# 
   148     020C                     	;# 
   149     020D                     	;# 
   150     0211                     	;# 
   151     0211                     	;# 
   152     0212                     	;# 
   153     0212                     	;# 
   154     0213                     	;# 
   155     0213                     	;# 
   156     0214                     	;# 
   157     0214                     	;# 
   158     0215                     	;# 
   159     0215                     	;# 
   160     0215                     	;# 
   161     0216                     	;# 
   162     0216                     	;# 
   163     0217                     	;# 
   164     0217                     	;# 
   165     0219                     	;# 
   166     021A                     	;# 
   167     021B                     	;# 
   168     021C                     	;# 
   169     021D                     	;# 
   170     021E                     	;# 
   171     021F                     	;# 
   172     0291                     	;# 
   173     0291                     	;# 
   174     0292                     	;# 
   175     0293                     	;# 
   176     0294                     	;# 
   177     0295                     	;# 
   178     0295                     	;# 
   179     0296                     	;# 
   180     0298                     	;# 
   181     0298                     	;# 
   182     0299                     	;# 
   183     029A                     	;# 
   184     029B                     	;# 
   185     029C                     	;# 
   186     029C                     	;# 
   187     029D                     	;# 
   188     029E                     	;# 
   189     029E                     	;# 
   190     0311                     	;# 
   191     0311                     	;# 
   192     0312                     	;# 
   193     0313                     	;# 
   194     0318                     	;# 
   195     0318                     	;# 
   196     0319                     	;# 
   197     031A                     	;# 
   198     0394                     	;# 
   199     0395                     	;# 
   200     0396                     	;# 
   201     039A                     	;# 
   202     039C                     	;# 
   203     039D                     	;# 
   204     039E                     	;# 
   205     039F                     	;# 
   206     0415                     	;# 
   207     0416                     	;# 
   208     0417                     	;# 
   209     041C                     	;# 
   210     041D                     	;# 
   211     041E                     	;# 
   212     0FE4                     	;# 
   213     0FE5                     	;# 
   214     0FE6                     	;# 
   215     0FE7                     	;# 
   216     0FE8                     	;# 
   217     0FE9                     	;# 
   218     0FEA                     	;# 
   219     0FEB                     	;# 
   220     0FED                     	;# 
   221     0FEE                     	;# 
   222     0FEF                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     0011                     	;# 
   238     0012                     	;# 
   239     0013                     	;# 
   240     0014                     	;# 
   241     0015                     	;# 
   242     0016                     	;# 
   243     0016                     	;# 
   244     0017                     	;# 
   245     0018                     	;# 
   246     0019                     	;# 
   247     001A                     	;# 
   248     001B                     	;# 
   249     001C                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0094                     	;# 
   258     0095                     	;# 
   259     0096                     	;# 
   260     0097                     	;# 
   261     0098                     	;# 
   262     0099                     	;# 
   263     009A                     	;# 
   264     009B                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     010C                     	;# 
   270     010D                     	;# 
   271     0111                     	;# 
   272     0112                     	;# 
   273     0113                     	;# 
   274     0114                     	;# 
   275     0115                     	;# 
   276     0116                     	;# 
   277     0117                     	;# 
   278     0118                     	;# 
   279     0119                     	;# 
   280     011A                     	;# 
   281     011B                     	;# 
   282     011D                     	;# 
   283     011E                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0191                     	;# 
   287     0191                     	;# 
   288     0192                     	;# 
   289     0193                     	;# 
   290     0193                     	;# 
   291     0193                     	;# 
   292     0194                     	;# 
   293     0195                     	;# 
   294     0196                     	;# 
   295     0199                     	;# 
   296     019A                     	;# 
   297     019B                     	;# 
   298     019B                     	;# 
   299     019B                     	;# 
   300     019B                     	;# 
   301     019C                     	;# 
   302     019C                     	;# 
   303     019D                     	;# 
   304     019E                     	;# 
   305     019F                     	;# 
   306     020C                     	;# 
   307     020D                     	;# 
   308     0211                     	;# 
   309     0211                     	;# 
   310     0212                     	;# 
   311     0212                     	;# 
   312     0213                     	;# 
   313     0213                     	;# 
   314     0214                     	;# 
   315     0214                     	;# 
   316     0215                     	;# 
   317     0215                     	;# 
   318     0215                     	;# 
   319     0216                     	;# 
   320     0216                     	;# 
   321     0217                     	;# 
   322     0217                     	;# 
   323     0219                     	;# 
   324     021A                     	;# 
   325     021B                     	;# 
   326     021C                     	;# 
   327     021D                     	;# 
   328     021E                     	;# 
   329     021F                     	;# 
   330     0291                     	;# 
   331     0291                     	;# 
   332     0292                     	;# 
   333     0293                     	;# 
   334     0294                     	;# 
   335     0295                     	;# 
   336     0295                     	;# 
   337     0296                     	;# 
   338     0298                     	;# 
   339     0298                     	;# 
   340     0299                     	;# 
   341     029A                     	;# 
   342     029B                     	;# 
   343     029C                     	;# 
   344     029C                     	;# 
   345     029D                     	;# 
   346     029E                     	;# 
   347     029E                     	;# 
   348     0311                     	;# 
   349     0311                     	;# 
   350     0312                     	;# 
   351     0313                     	;# 
   352     0318                     	;# 
   353     0318                     	;# 
   354     0319                     	;# 
   355     031A                     	;# 
   356     0394                     	;# 
   357     0395                     	;# 
   358     0396                     	;# 
   359     039A                     	;# 
   360     039C                     	;# 
   361     039D                     	;# 
   362     039E                     	;# 
   363     039F                     	;# 
   364     0415                     	;# 
   365     0416                     	;# 
   366     0417                     	;# 
   367     041C                     	;# 
   368     041D                     	;# 
   369     041E                     	;# 
   370     0FE4                     	;# 
   371     0FE5                     	;# 
   372     0FE6                     	;# 
   373     0FE7                     	;# 
   374     0FE8                     	;# 
   375     0FE9                     	;# 
   376     0FEA                     	;# 
   377     0FEB                     	;# 
   378     0FED                     	;# 
   379     0FEE                     	;# 
   380     0FEF                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     0011                     	;# 
   396     0012                     	;# 
   397     0013                     	;# 
   398     0014                     	;# 
   399     0015                     	;# 
   400     0016                     	;# 
   401     0016                     	;# 
   402     0017                     	;# 
   403     0018                     	;# 
   404     0019                     	;# 
   405     001A                     	;# 
   406     001B                     	;# 
   407     001C                     	;# 
   408     001E                     	;# 
   409     001F                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     0091                     	;# 
   413     0092                     	;# 
   414     0093                     	;# 
   415     0094                     	;# 
   416     0095                     	;# 
   417     0096                     	;# 
   418     0097                     	;# 
   419     0098                     	;# 
   420     0099                     	;# 
   421     009A                     	;# 
   422     009B                     	;# 
   423     009B                     	;# 
   424     009C                     	;# 
   425     009D                     	;# 
   426     009E                     	;# 
   427     010C                     	;# 
   428     010D                     	;# 
   429     0111                     	;# 
   430     0112                     	;# 
   431     0113                     	;# 
   432     0114                     	;# 
   433     0115                     	;# 
   434     0116                     	;# 
   435     0117                     	;# 
   436     0118                     	;# 
   437     0119                     	;# 
   438     011A                     	;# 
   439     011B                     	;# 
   440     011D                     	;# 
   441     011E                     	;# 
   442     018C                     	;# 
   443     018D                     	;# 
   444     0191                     	;# 
   445     0191                     	;# 
   446     0192                     	;# 
   447     0193                     	;# 
   448     0193                     	;# 
   449     0193                     	;# 
   450     0194                     	;# 
   451     0195                     	;# 
   452     0196                     	;# 
   453     0199                     	;# 
   454     019A                     	;# 
   455     019B                     	;# 
   456     019B                     	;# 
   457     019B                     	;# 
   458     019B                     	;# 
   459     019C                     	;# 
   460     019C                     	;# 
   461     019D                     	;# 
   462     019E                     	;# 
   463     019F                     	;# 
   464     020C                     	;# 
   465     020D                     	;# 
   466     0211                     	;# 
   467     0211                     	;# 
   468     0212                     	;# 
   469     0212                     	;# 
   470     0213                     	;# 
   471     0213                     	;# 
   472     0214                     	;# 
   473     0214                     	;# 
   474     0215                     	;# 
   475     0215                     	;# 
   476     0215                     	;# 
   477     0216                     	;# 
   478     0216                     	;# 
   479     0217                     	;# 
   480     0217                     	;# 
   481     0219                     	;# 
   482     021A                     	;# 
   483     021B                     	;# 
   484     021C                     	;# 
   485     021D                     	;# 
   486     021E                     	;# 
   487     021F                     	;# 
   488     0291                     	;# 
   489     0291                     	;# 
   490     0292                     	;# 
   491     0293                     	;# 
   492     0294                     	;# 
   493     0295                     	;# 
   494     0295                     	;# 
   495     0296                     	;# 
   496     0298                     	;# 
   497     0298                     	;# 
   498     0299                     	;# 
   499     029A                     	;# 
   500     029B                     	;# 
   501     029C                     	;# 
   502     029C                     	;# 
   503     029D                     	;# 
   504     029E                     	;# 
   505     029E                     	;# 
   506     0311                     	;# 
   507     0311                     	;# 
   508     0312                     	;# 
   509     0313                     	;# 
   510     0318                     	;# 
   511     0318                     	;# 
   512     0319                     	;# 
   513     031A                     	;# 
   514     0394                     	;# 
   515     0395                     	;# 
   516     0396                     	;# 
   517     039A                     	;# 
   518     039C                     	;# 
   519     039D                     	;# 
   520     039E                     	;# 
   521     039F                     	;# 
   522     0415                     	;# 
   523     0416                     	;# 
   524     0417                     	;# 
   525     041C                     	;# 
   526     041D                     	;# 
   527     041E                     	;# 
   528     0FE4                     	;# 
   529     0FE5                     	;# 
   530     0FE6                     	;# 
   531     0FE7                     	;# 
   532     0FE8                     	;# 
   533     0FE9                     	;# 
   534     0FEA                     	;# 
   535     0FEB                     	;# 
   536     0FED                     	;# 
   537     0FEE                     	;# 
   538     0FEF                     	;# 
   539     0000                     	;# 
   540     0001                     	;# 
   541     0002                     	;# 
   542     0003                     	;# 
   543     0004                     	;# 
   544     0005                     	;# 
   545     0006                     	;# 
   546     0007                     	;# 
   547     0008                     	;# 
   548     0009                     	;# 
   549     000A                     	;# 
   550     000B                     	;# 
   551     000C                     	;# 
   552     000D                     	;# 
   553     0011                     	;# 
   554     0012                     	;# 
   555     0013                     	;# 
   556     0014                     	;# 
   557     0015                     	;# 
   558     0016                     	;# 
   559     0016                     	;# 
   560     0017                     	;# 
   561     0018                     	;# 
   562     0019                     	;# 
   563     001A                     	;# 
   564     001B                     	;# 
   565     001C                     	;# 
   566     001E                     	;# 
   567     001F                     	;# 
   568     008C                     	;# 
   569     008D                     	;# 
   570     0091                     	;# 
   571     0092                     	;# 
   572     0093                     	;# 
   573     0094                     	;# 
   574     0095                     	;# 
   575     0096                     	;# 
   576     0097                     	;# 
   577     0098                     	;# 
   578     0099                     	;# 
   579     009A                     	;# 
   580     009B                     	;# 
   581     009B                     	;# 
   582     009C                     	;# 
   583     009D                     	;# 
   584     009E                     	;# 
   585     010C                     	;# 
   586     010D                     	;# 
   587     0111                     	;# 
   588     0112                     	;# 
   589     0113                     	;# 
   590     0114                     	;# 
   591     0115                     	;# 
   592     0116                     	;# 
   593     0117                     	;# 
   594     0118                     	;# 
   595     0119                     	;# 
   596     011A                     	;# 
   597     011B                     	;# 
   598     011D                     	;# 
   599     011E                     	;# 
   600     018C                     	;# 
   601     018D                     	;# 
   602     0191                     	;# 
   603     0191                     	;# 
   604     0192                     	;# 
   605     0193                     	;# 
   606     0193                     	;# 
   607     0193                     	;# 
   608     0194                     	;# 
   609     0195                     	;# 
   610     0196                     	;# 
   611     0199                     	;# 
   612     019A                     	;# 
   613     019B                     	;# 
   614     019B                     	;# 
   615     019B                     	;# 
   616     019B                     	;# 
   617     019C                     	;# 
   618     019C                     	;# 
   619     019D                     	;# 
   620     019E                     	;# 
   621     019F                     	;# 
   622     020C                     	;# 
   623     020D                     	;# 
   624     0211                     	;# 
   625     0211                     	;# 
   626     0212                     	;# 
   627     0212                     	;# 
   628     0213                     	;# 
   629     0213                     	;# 
   630     0214                     	;# 
   631     0214                     	;# 
   632     0215                     	;# 
   633     0215                     	;# 
   634     0215                     	;# 
   635     0216                     	;# 
   636     0216                     	;# 
   637     0217                     	;# 
   638     0217                     	;# 
   639     0219                     	;# 
   640     021A                     	;# 
   641     021B                     	;# 
   642     021C                     	;# 
   643     021D                     	;# 
   644     021E                     	;# 
   645     021F                     	;# 
   646     0291                     	;# 
   647     0291                     	;# 
   648     0292                     	;# 
   649     0293                     	;# 
   650     0294                     	;# 
   651     0295                     	;# 
   652     0295                     	;# 
   653     0296                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029C                     	;# 
   660     029C                     	;# 
   661     029D                     	;# 
   662     029E                     	;# 
   663     029E                     	;# 
   664     0311                     	;# 
   665     0311                     	;# 
   666     0312                     	;# 
   667     0313                     	;# 
   668     0318                     	;# 
   669     0318                     	;# 
   670     0319                     	;# 
   671     031A                     	;# 
   672     0394                     	;# 
   673     0395                     	;# 
   674     0396                     	;# 
   675     039A                     	;# 
   676     039C                     	;# 
   677     039D                     	;# 
   678     039E                     	;# 
   679     039F                     	;# 
   680     0415                     	;# 
   681     0416                     	;# 
   682     0417                     	;# 
   683     041C                     	;# 
   684     041D                     	;# 
   685     041E                     	;# 
   686     0FE4                     	;# 
   687     0FE5                     	;# 
   688     0FE6                     	;# 
   689     0FE7                     	;# 
   690     0FE8                     	;# 
   691     0FE9                     	;# 
   692     0FEA                     	;# 
   693     0FEB                     	;# 
   694     0FED                     	;# 
   695     0FEE                     	;# 
   696     0FEF                     	;# 
   697                           
   698                           	psect	idataBANK1
   699     040F                     __pidataBANK1:
   700                           
   701                           ;initializer for seg7@F2503
   702     040F  347E               	retlw	126
   703     0410  3400               	retlw	0
   704     0411  3430               	retlw	48
   705     0412  3400               	retlw	0
   706     0413  346D               	retlw	109
   707     0414  3400               	retlw	0
   708     0415  3479               	retlw	121
   709     0416  3400               	retlw	0
   710     0417  3433               	retlw	51
   711     0418  3400               	retlw	0
   712     0419  345B               	retlw	91
   713     041A  3400               	retlw	0
   714     041B  345F               	retlw	95
   715     041C  3400               	retlw	0
   716     041D  3470               	retlw	112
   717     041E  3400               	retlw	0
   718     041F  347F               	retlw	127
   719     0420  3400               	retlw	0
   720     0421  347B               	retlw	123
   721     0422  3400               	retlw	0
   722     008D                     _TRISBbits	set	141
   723     008C                     _TRISAbits	set	140
   724     0099                     _OSCCONbits	set	153
   725     009B                     _ADRESL	set	155
   726     009C                     _ADRESH	set	156
   727     009E                     _ADCON1bits	set	158
   728     009D                     _ADCON0bits	set	157
   729     0117                     _FVRCONbits	set	279
   730     011E                     _APFCON1bits	set	286
   731     010D                     _LATBbits	set	269
   732     010C                     _LATAbits	set	268
   733     018D                     _ANSELBbits	set	397
   734     018C                     _ANSELAbits	set	396
   735     019A                     _TXREG	set	410
   736     019D                     _RCSTAbits	set	413
   737     019B                     _SPBRG	set	411
   738     019F                     _BAUDCONbits	set	415
   739     019E                     _TXSTAbits	set	414
   740                           
   741                           	psect	cinit
   742     07E9                     start_initialization:	
   743                           ; #config settings
   744                           
   745     07E9                     __initialization:
   746                           
   747                           ; Initialize objects allocated to BANK1
   748     07E9  300F               	movlw	low __pidataBANK1
   749     07EA  0084               	movwf	4
   750     07EB  3084               	movlw	(high __pidataBANK1)| (0+128)
   751     07EC  0085               	movwf	5
   752     07ED  30A0               	movlw	low __pdataBANK1
   753     07EE  0086               	movwf	6
   754     07EF  3000               	movlw	high __pdataBANK1
   755     07F0  0087               	movwf	7
   756     07F1  3014               	movlw	20
   757     07F2  3183  23E0  3187   	fcall	init_ram
   758                           
   759                           ; Clear objects allocated to BANK0
   760     07F5  304A               	movlw	low __pbssBANK0
   761     07F6  0084               	movwf	4
   762     07F7  3000               	movlw	high __pbssBANK0
   763     07F8  0085               	movwf	5
   764     07F9  3013               	movlw	19
   765     07FA  3183  23DA  3187   	fcall	clear_ram0
   766     07FD                     end_of_initialization:	
   767                           ;End of C runtime variable initialization code
   768                           
   769     07FD                     __end_of__initialization:
   770     07FD  0020               	movlb	0
   771     07FE  3185  2D44         	ljmp	_main	;jump to C main() function
   772                           
   773                           	psect	bssBANK0
   774     004A                     __pbssBANK0:
   775     004A                     ASCII_Con@r:
   776     004A                     	ds	7
   777     0051                     seg7@r:
   778     0051                     	ds	6
   779     0057                     BinTOBcd@r:
   780     0057                     	ds	6
   781                           
   782                           	psect	dataBANK1
   783     00A0                     __pdataBANK1:
   784     00A0                     seg7@F2503:
   785     00A0                     	ds	20
   786                           
   787                           	psect	inittext
   788     03E0                     init_ram:
   789     03E0  00FE               	movwf	btemp
   790     03E1                     initloop:
   791     03E1  0012               	moviw fsr0++
   792     03E2  001E               	movwi fsr1++
   793     03E3  0BFE               	decfsz	btemp,f
   794     03E4  2BE1               	goto	initloop
   795     03E5  3400               	retlw	0
   796                           
   797                           	psect	clrtext
   798     03DA                     clear_ram0:	
   799                           ;	Called with FSR0 containing the base address, and
   800                           ;	WREG with the size to clear
   801                           
   802     03DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   803     03DB                     clrloop0:
   804     03DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   805     03DC  3101               	addfsr 0,1
   806     03DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   807     03DE  2BDB               	goto	clrloop0	;have we reached the end yet?
   808     03DF  3400               	retlw	0	;all done for this memory range, return
   809                           
   810                           	psect	cstackCOMMON
   811     0070                     __pcstackCOMMON:
   812     0070                     ?_init_IO:
   813     0070                     ??_init_IO:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_seg7:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ??_seg7:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_showNumbers:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?_UART_print:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?_ASCII_Con:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_main:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ?_showNumber:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_init_UART:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ??_init_UART:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_UART_write:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ??_UART_write:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_readADC:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?___lmul:	
   853                           ; 4 bytes @ 0x0
   854                           
   855     0070                     UART_write@c:	
   856                           ; 4 bytes @ 0x0
   857                           
   858     0070                     showNumber@digit:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ASCII_Con@a:	
   862                           ; 2 bytes @ 0x0
   863                           
   864     0070                     ___lmul@multiplier:	
   865                           ; 2 bytes @ 0x0
   866                           
   867                           
   868                           ; 4 bytes @ 0x0
   869     0070                     	ds	1
   870     0071                     ??_UART_print:
   871                           
   872                           ; 1 bytes @ 0x1
   873     0071                     	ds	1
   874     0072                     ??_showNumber:
   875     0072                     UART_print@cadena:	
   876                           ; 1 bytes @ 0x2
   877                           
   878     0072                     ASCII_Con@b:	
   879                           ; 1 bytes @ 0x2
   880                           
   881                           
   882                           ; 2 bytes @ 0x2
   883     0072                     	ds	1
   884     0073                     ??_showNumbers:
   885                           
   886                           ; 1 bytes @ 0x3
   887     0073                     	ds	1
   888     0074                     ??_readADC:
   889     0074                     ASCII_Con@c:	
   890                           ; 1 bytes @ 0x4
   891                           
   892     0074                     ___lmul@multiplicand:	
   893                           ; 2 bytes @ 0x4
   894                           
   895                           
   896                           ; 4 bytes @ 0x4
   897     0074                     	ds	1
   898     0075                     showNumbers@digits:
   899                           
   900                           ; 1 bytes @ 0x5
   901     0075                     	ds	1
   902     0076                     ??_ASCII_Con:
   903                           
   904                           ; 1 bytes @ 0x6
   905     0076                     	ds	2
   906     0078                     ??___lmul:
   907     0078                     ___lmul@product:	
   908                           ; 1 bytes @ 0x8
   909                           
   910                           
   911                           ; 4 bytes @ 0x8
   912     0078                     	ds	1
   913     0079                     readADC@r:
   914                           
   915                           ; 4 bytes @ 0x9
   916     0079                     	ds	3
   917     007C                     ??___aldiv:
   918                           
   919                           ; 1 bytes @ 0xC
   920     007C                     	ds	1
   921     007D                     ??___almod:
   922                           
   923                           ; 1 bytes @ 0xD
   924     007D                     	ds	1
   925     007E                     ??_BinTOBcd:
   926     007E                     ??_main:	
   927                           ; 1 bytes @ 0xE
   928                           
   929                           
   930                           	psect	cstackBANK0
   931     0020                     __pcstackBANK0:	
   932                           ; 1 bytes @ 0xE
   933                           
   934     0020                     ?___aldiv:
   935     0020                     ___aldiv@divisor:	
   936                           ; 4 bytes @ 0x0
   937                           
   938     0020                     seg7@numbers:	
   939                           ; 4 bytes @ 0x0
   940                           
   941                           
   942                           ; 20 bytes @ 0x0
   943     0020                     	ds	4
   944     0024                     ___aldiv@dividend:
   945                           
   946                           ; 4 bytes @ 0x4
   947     0024                     	ds	4
   948     0028                     ___aldiv@counter:
   949                           
   950                           ; 1 bytes @ 0x8
   951     0028                     	ds	1
   952     0029                     ___aldiv@sign:
   953                           
   954                           ; 1 bytes @ 0x9
   955     0029                     	ds	1
   956     002A                     ___aldiv@quotient:
   957                           
   958                           ; 4 bytes @ 0xA
   959     002A                     	ds	4
   960     002E                     ?___almod:
   961     002E                     ___almod@divisor:	
   962                           ; 4 bytes @ 0xE
   963                           
   964                           
   965                           ; 4 bytes @ 0xE
   966     002E                     	ds	4
   967     0032                     ___almod@dividend:
   968                           
   969                           ; 4 bytes @ 0x12
   970     0032                     	ds	2
   971     0034                     seg7@iBCD:
   972                           
   973                           ; 1 bytes @ 0x14
   974     0034                     	ds	2
   975     0036                     ___almod@counter:
   976                           
   977                           ; 1 bytes @ 0x16
   978     0036                     	ds	1
   979     0037                     ___almod@sign:
   980                           
   981                           ; 1 bytes @ 0x17
   982     0037                     	ds	1
   983     0038                     ?_BinTOBcd:
   984     0038                     BinTOBcd@iADC:	
   985                           ; 1 bytes @ 0x18
   986                           
   987                           
   988                           ; 4 bytes @ 0x18
   989     0038                     	ds	4
   990     003C                     _BinTOBcd$1204:
   991                           
   992                           ; 4 bytes @ 0x1C
   993     003C                     	ds	4
   994     0040                     _BinTOBcd$1203:
   995                           
   996                           ; 4 bytes @ 0x20
   997     0040                     	ds	4
   998     0044                     main@iADC:
   999                           
  1000                           ; 4 bytes @ 0x24
  1001     0044                     	ds	4
  1002     0048                     main@A:
  1003                           
  1004                           ; 1 bytes @ 0x28
  1005     0048                     	ds	1
  1006     0049                     main@B:
  1007                           
  1008                           ; 1 bytes @ 0x29
  1009     0049                     	ds	1
  1010                           
  1011                           	psect	maintext
  1012     0544                     __pmaintext:	
  1013 ;;
  1014 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1015 ;;
  1016 ;; *************** function _main *****************
  1017 ;; Defined at:
  1018 ;;		line 15 in file "newmain.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  iADC            4   36[BANK0 ] long 
  1023 ;;  B               1   41[BANK0 ] PTR int 
  1024 ;;		 -> BinTOBcd@r(6), 
  1025 ;;  A               1   40[BANK0 ] PTR int 
  1026 ;;		 -> seg7@r(6), 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : B1F/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1036 ;;      Params:         0       0       0       0       0       0
  1037 ;;      Locals:         0       6       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0
  1039 ;;      Totals:         0       6       0       0       0       0
  1040 ;;Total ram usage:        6 bytes
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_ASCII_Con
  1044 ;;		_BinTOBcd
  1045 ;;		_UART_print
  1046 ;;		_init_IO
  1047 ;;		_readADC
  1048 ;;		_seg7
  1049 ;;		_showNumbers
  1050 ;; This function is called by:
  1051 ;;		Startup code after reset
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055     0544                     _main:	
  1056                           ;psect for function _main
  1057                           
  1058     0544                     l1251:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;newmain.c: 16:     init_IO();
  1064     0544  3185  2507  3185   	fcall	_init_IO
  1065     0547                     l19:	
  1066                           ;newmain.c: 18:     while(1)
  1067                           
  1068                           
  1069                           ;newmain.c: 19:     {;newmain.c: 20:         long iADC = readADC();
  1070     0547  3184  2439  3185   	fcall	_readADC
  1071     054A  0873               	movf	?_readADC+3,w
  1072     054B  0020               	movlb	0	; select bank0
  1073     054C  00C7               	movwf	main@iADC+3
  1074     054D  0872               	movf	?_readADC+2,w
  1075     054E  00C6               	movwf	main@iADC+2
  1076     054F  0871               	movf	?_readADC+1,w
  1077     0550  00C5               	movwf	main@iADC+1
  1078     0551  0870               	movf	?_readADC,w
  1079     0552  00C4               	movwf	main@iADC
  1080                           
  1081                           ;newmain.c: 21:         int *B = BinTOBcd(iADC);
  1082     0553  0847               	movf	main@iADC+3,w
  1083     0554  00BB               	movwf	BinTOBcd@iADC+3
  1084     0555  0846               	movf	main@iADC+2,w
  1085     0556  00BA               	movwf	BinTOBcd@iADC+2
  1086     0557  0845               	movf	main@iADC+1,w
  1087     0558  00B9               	movwf	BinTOBcd@iADC+1
  1088     0559  0844               	movf	main@iADC,w
  1089     055A  00B8               	movwf	BinTOBcd@iADC
  1090     055B  3186  26E6  3185   	fcall	_BinTOBcd
  1091     055E  0020               	movlb	0	; select bank0
  1092     055F  00C9               	movwf	main@B
  1093     0560                     l1253:
  1094                           
  1095                           ;newmain.c: 23:         int* A = seg7(B);
  1096     0560  0849               	movf	main@B,w
  1097     0561  3184  2497  3185   	fcall	_seg7
  1098     0564  0020               	movlb	0	; select bank0
  1099     0565  00C8               	movwf	main@A
  1100     0566                     l1255:
  1101                           
  1102                           ;newmain.c: 24:         showNumbers(A);
  1103     0566  0848               	movf	main@A,w
  1104     0567  3185  258B  3185   	fcall	_showNumbers
  1105     056A                     l1257:
  1106                           
  1107                           ;newmain.c: 25:         UART_print(ASCII_Con(B[2], B[1], B[0]));
  1108     056A  0020               	movlb	0	; select bank0
  1109     056B  0849               	movf	main@B,w
  1110     056C  3E04               	addlw	4
  1111     056D  0086               	movwf	6
  1112     056E  0187               	clrf	7
  1113     056F  3F40               	moviw [0]fsr1
  1114     0570  00F0               	movwf	ASCII_Con@a
  1115     0571  3F41               	moviw [1]fsr1
  1116     0572  00F1               	movwf	ASCII_Con@a+1
  1117     0573  0849               	movf	main@B,w
  1118     0574  3E02               	addlw	2
  1119     0575  0086               	movwf	6
  1120     0576  0187               	clrf	7
  1121     0577  3F40               	moviw [0]fsr1
  1122     0578  00F2               	movwf	ASCII_Con@b
  1123     0579  3F41               	moviw [1]fsr1
  1124     057A  00F3               	movwf	ASCII_Con@b+1
  1125     057B  0849               	movf	main@B,w
  1126     057C  0086               	movwf	6
  1127     057D  0187               	clrf	7
  1128     057E  3F40               	moviw [0]fsr1
  1129     057F  00F4               	movwf	ASCII_Con@c
  1130     0580  3F41               	moviw [1]fsr1
  1131     0581  00F5               	movwf	ASCII_Con@c+1
  1132     0582  3183  23FC  3185   	fcall	_ASCII_Con
  1133     0585  3184  2423  3185   	fcall	_UART_print
  1134     0588  2D47               	goto	l19
  1135     0589  3180  2802         	ljmp	start
  1136     058B                     __end_of_main:
  1137                           
  1138                           	psect	text1
  1139     058B                     __ptext1:	
  1140 ;; *************** function _showNumbers *****************
  1141 ;; Defined at:
  1142 ;;		line 67 in file "funtions_magic.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  digits          1    wreg     PTR int 
  1145 ;;		 -> seg7@r(6), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  digits          1    5[COMMON] PTR int 
  1148 ;;		 -> seg7@r(6), 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1158 ;;      Params:         0       0       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0       0
  1160 ;;      Temps:          2       0       0       0       0       0
  1161 ;;      Totals:         3       0       0       0       0       0
  1162 ;;Total ram usage:        3 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 1
  1165 ;; This function calls:
  1166 ;;		_showNumber
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172     058B                     _showNumbers:	
  1173                           ;psect for function _showNumbers
  1174                           
  1175                           
  1176                           ;incstack = 0
  1177                           ; Regs used in _showNumbers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1178                           ;showNumbers@digits stored from wreg
  1179     058B  00F5               	movwf	showNumbers@digits
  1180     058C                     l1203:
  1181                           
  1182                           ;funtions_magic.c: 67: void showNumbers(int *digits);funtions_magic.c: 68: {;funtions_ma
      +                          gic.c: 69:     showNumber(digits[0]);
  1183     058C  0875               	movf	showNumbers@digits,w
  1184     058D  0086               	movwf	6
  1185     058E  0187               	clrf	7
  1186     058F  3F40               	moviw [0]fsr1
  1187     0590  00F0               	movwf	showNumber@digit
  1188     0591  3F41               	moviw [1]fsr1
  1189     0592  00F1               	movwf	showNumber@digit+1
  1190     0593  3184  24CC  3185   	fcall	_showNumber
  1191     0596                     l1205:
  1192                           
  1193                           ;funtions_magic.c: 70:     LATAbits.LATA3 = 0;
  1194     0596  0022               	movlb	2	; select bank2
  1195     0597  118C               	bcf	12,3	;volatile
  1196     0598                     l1207:
  1197                           
  1198                           ;funtions_magic.c: 71:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1199     0598  3003               	movlw	3
  1200     0599  00F4               	movwf	??_showNumbers+1
  1201     059A  308A               	movlw	138
  1202     059B  00F3               	movwf	??_showNumbers
  1203     059C  3056               	movlw	86
  1204     059D                     u797:
  1205     059D  0B89               	decfsz	9,f
  1206     059E  2D9D               	goto	u797
  1207     059F  0BF3               	decfsz	??_showNumbers,f
  1208     05A0  2D9D               	goto	u797
  1209     05A1  0BF4               	decfsz	??_showNumbers+1,f
  1210     05A2  2D9D               	goto	u797
  1211     05A3                     l1209:
  1212                           
  1213                           ;funtions_magic.c: 72:     LATAbits.LATA3 = 1;
  1214     05A3  0022               	movlb	2	; select bank2
  1215     05A4  158C               	bsf	12,3	;volatile
  1216     05A5                     l1211:
  1217                           
  1218                           ;funtions_magic.c: 74:     showNumber(digits[1]);
  1219     05A5  0875               	movf	showNumbers@digits,w
  1220     05A6  3E02               	addlw	2
  1221     05A7  0086               	movwf	6
  1222     05A8  0187               	clrf	7
  1223     05A9  3F40               	moviw [0]fsr1
  1224     05AA  00F0               	movwf	showNumber@digit
  1225     05AB  3F41               	moviw [1]fsr1
  1226     05AC  00F1               	movwf	showNumber@digit+1
  1227     05AD  3184  24CC  3185   	fcall	_showNumber
  1228     05B0                     l1213:
  1229                           
  1230                           ;funtions_magic.c: 75:     LATAbits.LATA2 = 0;
  1231     05B0  0022               	movlb	2	; select bank2
  1232     05B1  110C               	bcf	12,2	;volatile
  1233                           
  1234                           ;funtions_magic.c: 76:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1235     05B2  3003               	movlw	3
  1236     05B3  00F4               	movwf	??_showNumbers+1
  1237     05B4  308A               	movlw	138
  1238     05B5  00F3               	movwf	??_showNumbers
  1239     05B6  3056               	movlw	86
  1240     05B7                     u807:
  1241     05B7  0B89               	decfsz	9,f
  1242     05B8  2DB7               	goto	u807
  1243     05B9  0BF3               	decfsz	??_showNumbers,f
  1244     05BA  2DB7               	goto	u807
  1245     05BB  0BF4               	decfsz	??_showNumbers+1,f
  1246     05BC  2DB7               	goto	u807
  1247     05BD                     l1215:
  1248                           
  1249                           ;funtions_magic.c: 77:     LATAbits.LATA2 = 1;
  1250     05BD  0022               	movlb	2	; select bank2
  1251     05BE  150C               	bsf	12,2	;volatile
  1252     05BF                     l1217:
  1253                           
  1254                           ;funtions_magic.c: 79:     showNumber(digits[2]);
  1255     05BF  0875               	movf	showNumbers@digits,w
  1256     05C0  3E04               	addlw	4
  1257     05C1  0086               	movwf	6
  1258     05C2  0187               	clrf	7
  1259     05C3  3F40               	moviw [0]fsr1
  1260     05C4  00F0               	movwf	showNumber@digit
  1261     05C5  3F41               	moviw [1]fsr1
  1262     05C6  00F1               	movwf	showNumber@digit+1
  1263     05C7  3184  24CC  3185   	fcall	_showNumber
  1264     05CA                     l1219:
  1265                           
  1266                           ;funtions_magic.c: 80:     LATAbits.LATA1 = 0;
  1267     05CA  0022               	movlb	2	; select bank2
  1268     05CB  108C               	bcf	12,1	;volatile
  1269     05CC                     l1221:
  1270                           
  1271                           ;funtions_magic.c: 81:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1272     05CC  3003               	movlw	3
  1273     05CD  00F4               	movwf	??_showNumbers+1
  1274     05CE  308A               	movlw	138
  1275     05CF  00F3               	movwf	??_showNumbers
  1276     05D0  3056               	movlw	86
  1277     05D1                     u817:
  1278     05D1  0B89               	decfsz	9,f
  1279     05D2  2DD1               	goto	u817
  1280     05D3  0BF3               	decfsz	??_showNumbers,f
  1281     05D4  2DD1               	goto	u817
  1282     05D5  0BF4               	decfsz	??_showNumbers+1,f
  1283     05D6  2DD1               	goto	u817
  1284     05D7                     l1223:
  1285                           
  1286                           ;funtions_magic.c: 82:     LATAbits.LATA1 = 1;
  1287     05D7  0022               	movlb	2	; select bank2
  1288     05D8  148C               	bsf	12,1	;volatile
  1289     05D9                     l66:
  1290     05D9  0008               	return
  1291     05DA                     __end_of_showNumbers:
  1292                           
  1293                           	psect	text2
  1294     04CC                     __ptext2:	
  1295 ;; *************** function _showNumber *****************
  1296 ;; Defined at:
  1297 ;;		line 53 in file "funtions_magic.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  digit           2    0[COMMON] int 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1311 ;;      Params:         2       0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0       0
  1313 ;;      Temps:          1       0       0       0       0       0
  1314 ;;      Totals:         3       0       0       0       0       0
  1315 ;;Total ram usage:        3 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_showNumbers
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324     04CC                     _showNumber:	
  1325                           ;psect for function _showNumber
  1326                           
  1327     04CC                     l991:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _showNumber: [wreg+status,2+status,0]
  1330                           
  1331                           
  1332                           ;funtions_magic.c: 53: void showNumber(int digit);funtions_magic.c: 54: {;funtions_magic
      +                          .c: 55:     LATAbits.LATA4 = !!(digit & (1<<6));
  1333     04CC  1B70               	btfsc	showNumber@digit,6
  1334     04CD  2CCF               	goto	u401
  1335     04CE  2CD2               	goto	u400
  1336     04CF                     u401:
  1337     04CF  0022               	movlb	2	; select bank2
  1338     04D0  160C               	bsf	12,4	;volatile
  1339     04D1  2CD4               	goto	u414
  1340     04D2                     u400:
  1341     04D2  0022               	movlb	2	; select bank2
  1342     04D3  120C               	bcf	12,4	;volatile
  1343     04D4                     u414:
  1344                           
  1345                           ;funtions_magic.c: 56:     LATAbits.LATA6 = !!(digit & (1<<5));
  1346     04D4  1AF0               	btfsc	showNumber@digit,5
  1347     04D5  2CD7               	goto	u421
  1348     04D6  2CDA               	goto	u420
  1349     04D7                     u421:
  1350     04D7  0022               	movlb	2	; select bank2
  1351     04D8  170C               	bsf	12,6	;volatile
  1352     04D9  2CDC               	goto	u434
  1353     04DA                     u420:
  1354     04DA  0022               	movlb	2	; select bank2
  1355     04DB  130C               	bcf	12,6	;volatile
  1356     04DC                     u434:
  1357                           
  1358                           ;funtions_magic.c: 57:     LATAbits.LATA7 = !!(digit & (1<<4));
  1359     04DC  1A70               	btfsc	showNumber@digit,4
  1360     04DD  2CDF               	goto	u441
  1361     04DE  2CE2               	goto	u440
  1362     04DF                     u441:
  1363     04DF  0022               	movlb	2	; select bank2
  1364     04E0  178C               	bsf	12,7	;volatile
  1365     04E1  2CE4               	goto	u454
  1366     04E2                     u440:
  1367     04E2  0022               	movlb	2	; select bank2
  1368     04E3  138C               	bcf	12,7	;volatile
  1369     04E4                     u454:
  1370                           
  1371                           ;funtions_magic.c: 58:     LATBbits.LATB0 = !!(digit & (1<<3));
  1372     04E4  19F0               	btfsc	showNumber@digit,3
  1373     04E5  2CE7               	goto	u461
  1374     04E6  2CEA               	goto	u460
  1375     04E7                     u461:
  1376     04E7  0022               	movlb	2	; select bank2
  1377     04E8  140D               	bsf	13,0	;volatile
  1378     04E9  2CEC               	goto	u474
  1379     04EA                     u460:
  1380     04EA  0022               	movlb	2	; select bank2
  1381     04EB  100D               	bcf	13,0	;volatile
  1382     04EC                     u474:
  1383                           
  1384                           ;funtions_magic.c: 59:     LATBbits.LATB3 = !!(digit & (1<<2));
  1385     04EC  1970               	btfsc	showNumber@digit,2
  1386     04ED  2CEF               	goto	u481
  1387     04EE  2CF2               	goto	u480
  1388     04EF                     u481:
  1389     04EF  0022               	movlb	2	; select bank2
  1390     04F0  158D               	bsf	13,3	;volatile
  1391     04F1  2CF4               	goto	u494
  1392     04F2                     u480:
  1393     04F2  0022               	movlb	2	; select bank2
  1394     04F3  118D               	bcf	13,3	;volatile
  1395     04F4                     u494:
  1396                           
  1397                           ;funtions_magic.c: 60:     LATBbits.LATB4 = !!(digit & (1<<1));
  1398     04F4  18F0               	btfsc	showNumber@digit,1
  1399     04F5  2CF7               	goto	u501
  1400     04F6  2CFA               	goto	u500
  1401     04F7                     u501:
  1402     04F7  0022               	movlb	2	; select bank2
  1403     04F8  160D               	bsf	13,4	;volatile
  1404     04F9  2CFC               	goto	u514
  1405     04FA                     u500:
  1406     04FA  0022               	movlb	2	; select bank2
  1407     04FB  120D               	bcf	13,4	;volatile
  1408     04FC                     u514:
  1409     04FC                     l993:
  1410                           
  1411                           ;funtions_magic.c: 61:     LATBbits.LATB5 = digit & 1;
  1412     04FC  0870               	movf	showNumber@digit,w
  1413     04FD  3901               	andlw	1
  1414     04FE  00F2               	movwf	??_showNumber
  1415     04FF  0EF2               	swapf	??_showNumber,f
  1416     0500  0DF2               	rlf	??_showNumber,f
  1417     0501  080D               	movf	13,w	;volatile
  1418     0502  0672               	xorwf	??_showNumber,w
  1419     0503  39DF               	andlw	-33
  1420     0504  0672               	xorwf	??_showNumber,w
  1421     0505  008D               	movwf	13	;volatile
  1422     0506                     l63:
  1423     0506  0008               	return
  1424     0507                     __end_of_showNumber:
  1425                           
  1426                           	psect	text3
  1427     0497                     __ptext3:	
  1428 ;; *************** function _seg7 *****************
  1429 ;; Defined at:
  1430 ;;		line 25 in file "funtions_magic.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  iBCD            1    wreg     PTR const int 
  1433 ;;		 -> BinTOBcd@r(6), 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  iBCD            1   20[BANK0 ] PTR const int 
  1436 ;;		 -> BinTOBcd@r(6), 
  1437 ;;  numbers        20    0[BANK0 ] int [10]
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      PTR int 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1447 ;;      Params:         0       0       0       0       0       0
  1448 ;;      Locals:         0      21       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0       0
  1450 ;;      Totals:         1      21       0       0       0       0
  1451 ;;Total ram usage:       22 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460     0497                     _seg7:	
  1461                           ;psect for function _seg7
  1462                           
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _seg7: [wreg-fsr1h+status,2+status,0]
  1466                           ;seg7@iBCD stored from wreg
  1467     0497  0020               	movlb	0	; select bank0
  1468     0498  00B4               	movwf	seg7@iBCD
  1469     0499                     l1191:
  1470                           
  1471                           ;funtions_magic.c: 25: int* seg7(const int * iBCD);funtions_magic.c: 26: {;funtions_magi
      +                          c.c: 28:     int numbers[10] = {
  1472     0499  30A0               	movlw	low seg7@F2503
  1473     049A  0086               	movwf	6
  1474     049B  3000               	movlw	high seg7@F2503
  1475     049C  0087               	movwf	7
  1476     049D  3020               	movlw	low seg7@numbers
  1477     049E  0084               	movwf	4
  1478     049F  3000               	movlw	high seg7@numbers
  1479     04A0  0085               	movwf	5
  1480     04A1  3014               	movlw	20
  1481     04A2  00F0               	movwf	??_seg7
  1482     04A3                     u770:
  1483     04A3  0016               	moviw fsr1++
  1484     04A4  001A               	movwi fsr0++
  1485     04A5  0BF0               	decfsz	??_seg7,f
  1486     04A6  2CA3               	goto	u770
  1487     04A7                     l1193:
  1488                           
  1489                           ;funtions_magic.c: 42:     static int r[3];;funtions_magic.c: 43:     r[0] = numbers[iBC
      +                          D[0]];
  1490     04A7  0834               	movf	seg7@iBCD,w
  1491     04A8  0086               	movwf	6
  1492     04A9  0187               	clrf	7
  1493     04AA  3501               	lslf	1,w
  1494     04AB  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  1495     04AC  0086               	movwf	6
  1496     04AD  0187               	clrf	7
  1497     04AE  3F40               	moviw [0]fsr1
  1498     04AF  00D1               	movwf	seg7@r
  1499     04B0  3F41               	moviw [1]fsr1
  1500     04B1  00D2               	movwf	seg7@r+1
  1501     04B2                     l1195:
  1502                           
  1503                           ;funtions_magic.c: 44:     r[1] = numbers[iBCD[1]];
  1504     04B2  0834               	movf	seg7@iBCD,w
  1505     04B3  3E02               	addlw	2
  1506     04B4  0086               	movwf	6
  1507     04B5  0187               	clrf	7
  1508     04B6  3501               	lslf	1,w
  1509     04B7  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  1510     04B8  0086               	movwf	6
  1511     04B9  0187               	clrf	7
  1512     04BA  3F40               	moviw [0]fsr1
  1513     04BB  00D3               	movwf	seg7@r+2
  1514     04BC  3F41               	moviw [1]fsr1
  1515     04BD  00D4               	movwf	seg7@r+3
  1516     04BE                     l1197:
  1517                           
  1518                           ;funtions_magic.c: 45:     r[2] = numbers[iBCD[2]];
  1519     04BE  0834               	movf	seg7@iBCD,w
  1520     04BF  3E04               	addlw	4
  1521     04C0  0086               	movwf	6
  1522     04C1  0187               	clrf	7
  1523     04C2  3501               	lslf	1,w
  1524     04C3  3E20               	addlw	(low (seg7@numbers| 0))& (0+255)
  1525     04C4  0086               	movwf	6
  1526     04C5  0187               	clrf	7
  1527     04C6  3F40               	moviw [0]fsr1
  1528     04C7  00D5               	movwf	seg7@r+4
  1529     04C8  3F41               	moviw [1]fsr1
  1530     04C9  00D6               	movwf	seg7@r+5
  1531     04CA                     l1199:
  1532                           
  1533                           ;funtions_magic.c: 47:     return r;
  1534     04CA  3051               	movlw	(low (seg7@r| 0))& (0+255)
  1535     04CB                     l60:
  1536     04CB  0008               	return
  1537     04CC                     __end_of_seg7:
  1538                           
  1539                           	psect	text4
  1540     0439                     __ptext4:	
  1541 ;; *************** function _readADC *****************
  1542 ;; Defined at:
  1543 ;;		line 87 in file "funtions_magic.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  r               4    9[COMMON] long 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  4    0[COMMON] long 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1557 ;;      Params:         4       0       0       0       0       0
  1558 ;;      Locals:         4       0       0       0       0       0
  1559 ;;      Temps:          5       0       0       0       0       0
  1560 ;;      Totals:        13       0       0       0       0       0
  1561 ;;Total ram usage:       13 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     0439                     _readADC:	
  1571                           ;psect for function _readADC
  1572                           
  1573     0439                     l1171:	
  1574                           ;incstack = 0
  1575                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1576                           
  1577                           
  1578                           ;funtions_magic.c: 89:     ADCON0bits.ADON = 1;
  1579     0439  0021               	movlb	1	; select bank1
  1580     043A  141D               	bsf	29,0	;volatile
  1581     043B                     l1173:
  1582                           
  1583                           ;funtions_magic.c: 91:     ADCON1bits.ADCS = 0b001;
  1584     043B  081E               	movf	30,w	;volatile
  1585     043C  398F               	andlw	-113
  1586     043D  3810               	iorlw	16
  1587     043E  009E               	movwf	30	;volatile
  1588                           
  1589                           ;funtions_magic.c: 93:     ADCON0bits.CHS = 0b00000;
  1590     043F  3083               	movlw	-125
  1591     0440  059D               	andwf	29,f	;volatile
  1592     0441                     l1175:
  1593                           
  1594                           ;funtions_magic.c: 95:     ADCON1bits.ADFM = 1;
  1595     0441  179E               	bsf	30,7	;volatile
  1596     0442                     l1177:
  1597                           
  1598                           ;funtions_magic.c: 97:     ADCON0bits.GO_nDONE = 1;
  1599     0442  149D               	bsf	29,1	;volatile
  1600     0443                     l69:	
  1601                           ;funtions_magic.c: 99:     while(ADCON0bits.GO_nDONE);
  1602                           
  1603     0443  189D               	btfsc	29,1	;volatile
  1604     0444  2C46               	goto	u761
  1605     0445  2C47               	goto	u760
  1606     0446                     u761:
  1607     0446  2C43               	goto	l69
  1608     0447                     u760:
  1609     0447                     l1179:
  1610                           
  1611                           ;funtions_magic.c: 101:     long r = (ADRESH<<8) + ADRESL;
  1612     0447  081B               	movf	27,w	;volatile
  1613     0448  00F4               	movwf	??_readADC
  1614     0449  01F5               	clrf	??_readADC+1
  1615     044A  081C               	movf	28,w	;volatile
  1616     044B  00F6               	movwf	??_readADC+2
  1617     044C  01F7               	clrf	??_readADC+3
  1618     044D  0876               	movf	??_readADC+2,w
  1619     044E  00F7               	movwf	??_readADC+3
  1620     044F  01F6               	clrf	??_readADC+2
  1621     0450  0874               	movf	??_readADC,w
  1622     0451  0776               	addwf	??_readADC+2,w
  1623     0452  00F9               	movwf	readADC@r
  1624     0453  0875               	movf	??_readADC+1,w
  1625     0454  3D77               	addwfc	??_readADC+3,w
  1626     0455  00FA               	movwf	readADC@r+1
  1627     0456  01FB               	clrf	readADC@r+2
  1628     0457  1BFA               	btfsc	readADC@r+1,7
  1629     0458  03FB               	decf	readADC@r+2,f
  1630     0459  087B               	movf	readADC@r+2,w
  1631     045A  00FC               	movwf	readADC@r+3
  1632     045B                     l1181:
  1633                           
  1634                           ;funtions_magic.c: 102:     return r;
  1635     045B  087C               	movf	readADC@r+3,w
  1636     045C  00F3               	movwf	?_readADC+3
  1637     045D  087B               	movf	readADC@r+2,w
  1638     045E  00F2               	movwf	?_readADC+2
  1639     045F  087A               	movf	readADC@r+1,w
  1640     0460  00F1               	movwf	?_readADC+1
  1641     0461  0879               	movf	readADC@r,w
  1642     0462  00F0               	movwf	?_readADC
  1643     0463                     l72:
  1644     0463  0008               	return
  1645     0464                     __end_of_readADC:
  1646                           
  1647                           	psect	text5
  1648     0507                     __ptext5:	
  1649 ;; *************** function _init_IO *****************
  1650 ;; Defined at:
  1651 ;;		line 4 in file "init_IO.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1665 ;;      Params:         0       0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0
  1668 ;;      Totals:         0       0       0       0       0       0
  1669 ;;Total ram usage:        0 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 1
  1672 ;; This function calls:
  1673 ;;		_init_UART
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679     0507                     _init_IO:	
  1680                           ;psect for function _init_IO
  1681                           
  1682     0507                     l1089:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _init_IO: [wreg+status,2+status,0+pclath+cstack]
  1685                           
  1686                           
  1687                           ;init_IO.c: 7:     OSCCONbits.SCS = 0;
  1688     0507  30FC               	movlw	-4
  1689     0508  0021               	movlb	1	; select bank1
  1690     0509  0599               	andwf	25,f	;volatile
  1691                           
  1692                           ;init_IO.c: 8:     OSCCONbits.IRCF = 0b1101;
  1693     050A  0819               	movf	25,w	;volatile
  1694     050B  3987               	andlw	-121
  1695     050C  3868               	iorlw	104
  1696     050D  0099               	movwf	25	;volatile
  1697     050E                     l1091:
  1698                           
  1699                           ;init_IO.c: 14:     ANSELAbits.ANSA0 = 1;
  1700     050E  0023               	movlb	3	; select bank3
  1701     050F  140C               	bsf	12,0	;volatile
  1702     0510                     l1093:
  1703                           
  1704                           ;init_IO.c: 15:     ANSELAbits.ANSA1 = 0;
  1705     0510  108C               	bcf	12,1	;volatile
  1706     0511                     l1095:
  1707                           
  1708                           ;init_IO.c: 16:     ANSELAbits.ANSA2 = 0;
  1709     0511  110C               	bcf	12,2	;volatile
  1710     0512                     l1097:
  1711                           
  1712                           ;init_IO.c: 17:     ANSELAbits.ANSA3 = 0;
  1713     0512  118C               	bcf	12,3	;volatile
  1714     0513                     l1099:
  1715                           
  1716                           ;init_IO.c: 18:     ANSELAbits.ANSA4 = 0;
  1717     0513  120C               	bcf	12,4	;volatile
  1718     0514                     l1101:
  1719                           
  1720                           ;init_IO.c: 21:     TRISAbits.TRISA0 = 1;
  1721     0514  0021               	movlb	1	; select bank1
  1722     0515  140C               	bsf	12,0	;volatile
  1723     0516                     l1103:
  1724                           
  1725                           ;init_IO.c: 22:     TRISAbits.TRISA1 = 0;
  1726     0516  108C               	bcf	12,1	;volatile
  1727     0517                     l1105:
  1728                           
  1729                           ;init_IO.c: 23:     TRISAbits.TRISA2 = 0;
  1730     0517  110C               	bcf	12,2	;volatile
  1731     0518                     l1107:
  1732                           
  1733                           ;init_IO.c: 24:     TRISAbits.TRISA3 = 0;
  1734     0518  118C               	bcf	12,3	;volatile
  1735     0519                     l1109:
  1736                           
  1737                           ;init_IO.c: 25:     TRISAbits.TRISA4 = 0;
  1738     0519  120C               	bcf	12,4	;volatile
  1739     051A                     l1111:
  1740                           
  1741                           ;init_IO.c: 26:     TRISAbits.TRISA6 = 0;
  1742     051A  130C               	bcf	12,6	;volatile
  1743     051B                     l1113:
  1744                           
  1745                           ;init_IO.c: 27:     TRISAbits.TRISA7 = 0;
  1746     051B  138C               	bcf	12,7	;volatile
  1747     051C                     l1115:
  1748                           
  1749                           ;init_IO.c: 31:     ANSELBbits.ANSB1 = 0;
  1750     051C  0023               	movlb	3	; select bank3
  1751     051D  108D               	bcf	13,1	;volatile
  1752     051E                     l1117:
  1753                           
  1754                           ;init_IO.c: 32:     ANSELBbits.ANSB2 = 0;
  1755     051E  110D               	bcf	13,2	;volatile
  1756     051F                     l1119:
  1757                           
  1758                           ;init_IO.c: 33:     ANSELBbits.ANSB3 = 0;
  1759     051F  118D               	bcf	13,3	;volatile
  1760     0520                     l1121:
  1761                           
  1762                           ;init_IO.c: 34:     ANSELBbits.ANSB4 = 0;
  1763     0520  120D               	bcf	13,4	;volatile
  1764     0521                     l1123:
  1765                           
  1766                           ;init_IO.c: 35:     ANSELBbits.ANSB5 = 0;
  1767     0521  128D               	bcf	13,5	;volatile
  1768     0522                     l1125:
  1769                           
  1770                           ;init_IO.c: 36:     ANSELBbits.ANSB6 = 0;
  1771     0522  130D               	bcf	13,6	;volatile
  1772     0523                     l1127:
  1773                           
  1774                           ;init_IO.c: 37:     ANSELBbits.ANSB7 = 0;
  1775     0523  138D               	bcf	13,7	;volatile
  1776     0524                     l1129:
  1777                           
  1778                           ;init_IO.c: 40:     TRISBbits.TRISB0 = 0;
  1779     0524  0021               	movlb	1	; select bank1
  1780     0525  100D               	bcf	13,0	;volatile
  1781     0526                     l1131:
  1782                           
  1783                           ;init_IO.c: 41:     TRISBbits.TRISB1 = 1;
  1784     0526  148D               	bsf	13,1	;volatile
  1785     0527                     l1133:
  1786                           
  1787                           ;init_IO.c: 42:     TRISBbits.TRISB2 = 0;
  1788     0527  110D               	bcf	13,2	;volatile
  1789     0528                     l1135:
  1790                           
  1791                           ;init_IO.c: 43:     TRISBbits.TRISB3 = 0;
  1792     0528  118D               	bcf	13,3	;volatile
  1793     0529                     l1137:
  1794                           
  1795                           ;init_IO.c: 44:     TRISBbits.TRISB4 = 0;
  1796     0529  120D               	bcf	13,4	;volatile
  1797     052A                     l1139:
  1798                           
  1799                           ;init_IO.c: 45:     TRISBbits.TRISB5 = 0;
  1800     052A  128D               	bcf	13,5	;volatile
  1801     052B                     l1141:
  1802                           
  1803                           ;init_IO.c: 46:     TRISBbits.TRISB6 = 0;
  1804     052B  130D               	bcf	13,6	;volatile
  1805     052C                     l1143:
  1806                           
  1807                           ;init_IO.c: 47:     TRISBbits.TRISB7 = 0;
  1808     052C  138D               	bcf	13,7	;volatile
  1809     052D                     l1145:
  1810                           
  1811                           ;init_IO.c: 50:     FVRCONbits.FVREN = 1;
  1812     052D  0022               	movlb	2	; select bank2
  1813     052E  1797               	bsf	23,7	;volatile
  1814                           
  1815                           ;init_IO.c: 51:     FVRCONbits.ADFVR = 0b11;
  1816     052F  3003               	movlw	3
  1817     0530  0497               	iorwf	23,f	;volatile
  1818     0531                     l1147:
  1819                           
  1820                           ;init_IO.c: 52:     ADCON1bits.ADNREF = 0;
  1821     0531  0021               	movlb	1	; select bank1
  1822     0532  111E               	bcf	30,2	;volatile
  1823                           
  1824                           ;init_IO.c: 53:     ADCON1bits.ADPREF = 0b11;
  1825     0533  3003               	movlw	3
  1826     0534  049E               	iorwf	30,f	;volatile
  1827     0535                     l1149:
  1828                           
  1829                           ;init_IO.c: 57:     LATAbits.LATA1 = 1;
  1830     0535  0022               	movlb	2	; select bank2
  1831     0536  148C               	bsf	12,1	;volatile
  1832     0537                     l1151:
  1833                           
  1834                           ;init_IO.c: 58:     LATAbits.LATA2 = 1;
  1835     0537  150C               	bsf	12,2	;volatile
  1836     0538                     l1153:
  1837                           
  1838                           ;init_IO.c: 59:     LATAbits.LATA3 = 1;
  1839     0538  158C               	bsf	12,3	;volatile
  1840     0539                     l1155:
  1841                           
  1842                           ;init_IO.c: 60:     LATAbits.LATA4 = 0;
  1843     0539  120C               	bcf	12,4	;volatile
  1844     053A                     l1157:
  1845                           
  1846                           ;init_IO.c: 61:     LATAbits.LATA6 = 0;
  1847     053A  130C               	bcf	12,6	;volatile
  1848     053B                     l1159:
  1849                           
  1850                           ;init_IO.c: 62:     LATAbits.LATA7 = 0;
  1851     053B  138C               	bcf	12,7	;volatile
  1852     053C                     l1161:
  1853                           
  1854                           ;init_IO.c: 63:     LATBbits.LATB0 = 0;
  1855     053C  100D               	bcf	13,0	;volatile
  1856     053D                     l1163:
  1857                           
  1858                           ;init_IO.c: 64:     LATBbits.LATB3 = 0;
  1859     053D  118D               	bcf	13,3	;volatile
  1860     053E                     l1165:
  1861                           
  1862                           ;init_IO.c: 65:     LATBbits.LATB4 = 0;
  1863     053E  120D               	bcf	13,4	;volatile
  1864     053F                     l1167:
  1865                           
  1866                           ;init_IO.c: 66:     LATBbits.LATB5 = 0;
  1867     053F  128D               	bcf	13,5	;volatile
  1868     0540                     l1169:
  1869                           
  1870                           ;init_IO.c: 68:     init_UART();
  1871     0540  3183  23EF  3185   	fcall	_init_UART
  1872     0543                     l115:
  1873     0543  0008               	return
  1874     0544                     __end_of_init_IO:
  1875                           
  1876                           	psect	text6
  1877     03EF                     __ptext6:	
  1878 ;; *************** function _init_UART *****************
  1879 ;; Defined at:
  1880 ;;		line 107 in file "funtions_magic.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1894 ;;      Params:         0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_init_IO
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     03EF                     _init_UART:	
  1908                           ;psect for function _init_UART
  1909                           
  1910     03EF                     l995:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _init_UART: [wreg]
  1913                           
  1914                           
  1915                           ;funtions_magic.c: 109:     APFCON1bits.TXCKSEL = 0;
  1916     03EF  0022               	movlb	2	; select bank2
  1917     03F0  101E               	bcf	30,0	;volatile
  1918                           
  1919                           ;funtions_magic.c: 110:     TXSTAbits.TRMT = 1;
  1920     03F1  0023               	movlb	3	; select bank3
  1921     03F2  149E               	bsf	30,1	;volatile
  1922                           
  1923                           ;funtions_magic.c: 111:     TXSTAbits.TXEN = 1;
  1924     03F3  169E               	bsf	30,5	;volatile
  1925                           
  1926                           ;funtions_magic.c: 112:     BAUDCONbits.RCIDL = 1;
  1927     03F4  171F               	bsf	31,6	;volatile
  1928                           
  1929                           ;funtions_magic.c: 115:     TXSTAbits.SYNC = 0;
  1930     03F5  121E               	bcf	30,4	;volatile
  1931                           
  1932                           ;funtions_magic.c: 116:     TXSTAbits.TX9 = 0;
  1933     03F6  131E               	bcf	30,6	;volatile
  1934                           
  1935                           ;funtions_magic.c: 117:     TXSTAbits.BRGH = 1;
  1936     03F7  151E               	bsf	30,2	;volatile
  1937     03F8                     l997:
  1938                           
  1939                           ;funtions_magic.c: 118:     SPBRG = 25;
  1940     03F8  3019               	movlw	25
  1941     03F9  009B               	movwf	27	;volatile
  1942     03FA                     l999:
  1943                           
  1944                           ;funtions_magic.c: 119:     RCSTAbits.SPEN = 1;
  1945     03FA  179D               	bsf	29,7	;volatile
  1946     03FB                     l75:
  1947     03FB  0008               	return
  1948     03FC                     __end_of_init_UART:
  1949                           
  1950                           	psect	text7
  1951     0423                     __ptext7:	
  1952 ;; *************** function _UART_print *****************
  1953 ;; Defined at:
  1954 ;;		line 129 in file "funtions_magic.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  cadena          1    wreg     PTR unsigned char 
  1957 ;;		 -> ASCII_Con@r(7), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  cadena          1    2[COMMON] PTR unsigned char 
  1960 ;;		 -> ASCII_Con@r(7), 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1970 ;;      Params:         0       0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0       0
  1972 ;;      Temps:          1       0       0       0       0       0
  1973 ;;      Totals:         2       0       0       0       0       0
  1974 ;;Total ram usage:        2 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 1
  1977 ;; This function calls:
  1978 ;;		_UART_write
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984     0423                     _UART_print:	
  1985                           ;psect for function _UART_print
  1986                           
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _UART_print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1990                           ;UART_print@cadena stored from wreg
  1991     0423  00F2               	movwf	UART_print@cadena
  1992     0424                     l1243:
  1993                           
  1994                           ;funtions_magic.c: 129: void UART_print(unsigned char* cadena);funtions_magic.c: 130: {;
      +                          funtions_magic.c: 131:     while(*cadena != 0)
  1995     0424  2C30               	goto	l1249
  1996     0425                     l1245:
  1997                           
  1998                           ;funtions_magic.c: 132:     {;funtions_magic.c: 133:         UART_write(*cadena);
  1999     0425  0872               	movf	UART_print@cadena,w
  2000     0426  0086               	movwf	6
  2001     0427  0187               	clrf	7
  2002     0428  0801               	movf	1,w
  2003     0429  3183  23E6  3184   	fcall	_UART_write
  2004     042C                     l1247:
  2005                           
  2006                           ;funtions_magic.c: 134:         cadena++;
  2007     042C  3001               	movlw	1
  2008     042D  00F1               	movwf	??_UART_print
  2009     042E  0871               	movf	??_UART_print,w
  2010     042F  07F2               	addwf	UART_print@cadena,f
  2011     0430                     l1249:
  2012                           
  2013                           ;funtions_magic.c: 131:     while(*cadena != 0)
  2014     0430  0872               	movf	UART_print@cadena,w
  2015     0431  0086               	movwf	6
  2016     0432  0187               	clrf	7
  2017     0433  0801               	movf	1,w
  2018     0434  1D03               	btfss	3,2
  2019     0435  2C37               	goto	u781
  2020     0436  2C38               	goto	u780
  2021     0437                     u781:
  2022     0437  2C25               	goto	l1245
  2023     0438                     u780:
  2024     0438                     l87:
  2025     0438  0008               	return
  2026     0439                     __end_of_UART_print:
  2027                           
  2028                           	psect	text8
  2029     03E6                     __ptext8:	
  2030 ;; *************** function _UART_write *****************
  2031 ;; Defined at:
  2032 ;;		line 123 in file "funtions_magic.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  c               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  c               1    0[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2046 ;;      Params:         0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0
  2049 ;;      Totals:         1       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_UART_print
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059     03E6                     _UART_write:	
  2060                           ;psect for function _UART_write
  2061                           
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _UART_write: [wreg]
  2065                           ;UART_write@c stored from wreg
  2066     03E6  00F0               	movwf	UART_write@c
  2067     03E7                     l1001:
  2068                           
  2069                           ;funtions_magic.c: 123: void UART_write(char c);funtions_magic.c: 124: {;funtions_magic.
      +                          c: 125:     TXREG = c;
  2070     03E7  0870               	movf	UART_write@c,w
  2071     03E8  0023               	movlb	3	; select bank3
  2072     03E9  009A               	movwf	26	;volatile
  2073     03EA                     l78:	
  2074                           ;funtions_magic.c: 126:     while(TXSTAbits.TRMT == 0);
  2075                           
  2076     03EA  1C9E               	btfss	30,1	;volatile
  2077     03EB  2BED               	goto	u521
  2078     03EC  2BEE               	goto	u520
  2079     03ED                     u521:
  2080     03ED  2BEA               	goto	l78
  2081     03EE                     u520:
  2082     03EE                     l81:
  2083     03EE  0008               	return
  2084     03EF                     __end_of_UART_write:
  2085                           
  2086                           	psect	text9
  2087     06E6                     __ptext9:	
  2088 ;; *************** function _BinTOBcd *****************
  2089 ;; Defined at:
  2090 ;;		line 11 in file "funtions_magic.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  iADC            4   24[BANK0 ] long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      PTR int 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, pclath, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2104 ;;      Params:         0       4       0       0       0       0
  2105 ;;      Locals:         0       8       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0
  2107 ;;      Totals:         0      12       0       0       0       0
  2108 ;;Total ram usage:       12 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		___aldiv
  2113 ;;		___almod
  2114 ;;		___lmul
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120     06E6                     _BinTOBcd:	
  2121                           ;psect for function _BinTOBcd
  2122                           
  2123     06E6                     l1185:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _BinTOBcd: [wreg+status,2+status,0+pclath+cstack]
  2126                           
  2127                           
  2128                           ;funtions_magic.c: 11: int* BinTOBcd(long iADC);funtions_magic.c: 12: {;funtions_magic.c
      +                          : 14:     static int r[3];;funtions_magic.c: 15:     r[0] = ((iADC*1000)/1024)%10;
  2129     06E6  3000               	movlw	0
  2130     06E7  0020               	movlb	0	; select bank0
  2131     06E8  00B1               	movwf	___almod@divisor+3
  2132     06E9  3000               	movlw	0
  2133     06EA  00B0               	movwf	___almod@divisor+2
  2134     06EB  3000               	movlw	0
  2135     06EC  00AF               	movwf	___almod@divisor+1
  2136     06ED  300A               	movlw	10
  2137     06EE  00AE               	movwf	___almod@divisor
  2138     06EF  3000               	movlw	0
  2139     06F0  00A3               	movwf	___aldiv@divisor+3
  2140     06F1  3000               	movlw	0
  2141     06F2  00A2               	movwf	___aldiv@divisor+2
  2142     06F3  3004               	movlw	4
  2143     06F4  00A1               	movwf	___aldiv@divisor+1
  2144     06F5  3000               	movlw	0
  2145     06F6  00A0               	movwf	___aldiv@divisor
  2146     06F7  083B               	movf	BinTOBcd@iADC+3,w
  2147     06F8  00F3               	movwf	___lmul@multiplier+3
  2148     06F9  083A               	movf	BinTOBcd@iADC+2,w
  2149     06FA  00F2               	movwf	___lmul@multiplier+2
  2150     06FB  0839               	movf	BinTOBcd@iADC+1,w
  2151     06FC  00F1               	movwf	___lmul@multiplier+1
  2152     06FD  0838               	movf	BinTOBcd@iADC,w
  2153     06FE  00F0               	movwf	___lmul@multiplier
  2154     06FF  3000               	movlw	0
  2155     0700  00F7               	movwf	___lmul@multiplicand+3
  2156     0701  3000               	movlw	0
  2157     0702  00F6               	movwf	___lmul@multiplicand+2
  2158     0703  3003               	movlw	3
  2159     0704  00F5               	movwf	___lmul@multiplicand+1
  2160     0705  30E8               	movlw	232
  2161     0706  00F4               	movwf	___lmul@multiplicand
  2162     0707  3184  2464  3186   	fcall	___lmul
  2163     070A  0873               	movf	?___lmul+3,w
  2164     070B  0020               	movlb	0	; select bank0
  2165     070C  00A7               	movwf	___aldiv@dividend+3
  2166     070D  0872               	movf	?___lmul+2,w
  2167     070E  00A6               	movwf	___aldiv@dividend+2
  2168     070F  0871               	movf	?___lmul+1,w
  2169     0710  00A5               	movwf	___aldiv@dividend+1
  2170     0711  0870               	movf	?___lmul,w
  2171     0712  00A4               	movwf	___aldiv@dividend
  2172     0713  3186  2656  3186   	fcall	___aldiv
  2173     0716  0020               	movlb	0	; select bank0
  2174     0717  0823               	movf	?___aldiv+3,w
  2175     0718  00B5               	movwf	___almod@dividend+3
  2176     0719  0822               	movf	?___aldiv+2,w
  2177     071A  00B4               	movwf	___almod@dividend+2
  2178     071B  0821               	movf	?___aldiv+1,w
  2179     071C  00B3               	movwf	___almod@dividend+1
  2180     071D  0820               	movf	?___aldiv,w
  2181     071E  00B2               	movwf	___almod@dividend
  2182     071F  3185  25DA  3186   	fcall	___almod
  2183     0722  0020               	movlb	0	; select bank0
  2184     0723  082F               	movf	?___almod+1,w
  2185     0724  00D8               	movwf	BinTOBcd@r+1
  2186     0725  082E               	movf	?___almod,w
  2187     0726  00D7               	movwf	BinTOBcd@r
  2188                           
  2189                           ;funtions_magic.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  2190     0727  3000               	movlw	0
  2191     0728  00A3               	movwf	___aldiv@divisor+3
  2192     0729  3000               	movlw	0
  2193     072A  00A2               	movwf	___aldiv@divisor+2
  2194     072B  3004               	movlw	4
  2195     072C  00A1               	movwf	___aldiv@divisor+1
  2196     072D  3000               	movlw	0
  2197     072E  00A0               	movwf	___aldiv@divisor
  2198     072F  083B               	movf	BinTOBcd@iADC+3,w
  2199     0730  00F3               	movwf	___lmul@multiplier+3
  2200     0731  083A               	movf	BinTOBcd@iADC+2,w
  2201     0732  00F2               	movwf	___lmul@multiplier+2
  2202     0733  0839               	movf	BinTOBcd@iADC+1,w
  2203     0734  00F1               	movwf	___lmul@multiplier+1
  2204     0735  0838               	movf	BinTOBcd@iADC,w
  2205     0736  00F0               	movwf	___lmul@multiplier
  2206     0737  3000               	movlw	0
  2207     0738  00F7               	movwf	___lmul@multiplicand+3
  2208     0739  3000               	movlw	0
  2209     073A  00F6               	movwf	___lmul@multiplicand+2
  2210     073B  3003               	movlw	3
  2211     073C  00F5               	movwf	___lmul@multiplicand+1
  2212     073D  30E8               	movlw	232
  2213     073E  00F4               	movwf	___lmul@multiplicand
  2214     073F  3184  2464  3186   	fcall	___lmul
  2215     0742  0873               	movf	?___lmul+3,w
  2216     0743  0020               	movlb	0	; select bank0
  2217     0744  00A7               	movwf	___aldiv@dividend+3
  2218     0745  0872               	movf	?___lmul+2,w
  2219     0746  00A6               	movwf	___aldiv@dividend+2
  2220     0747  0871               	movf	?___lmul+1,w
  2221     0748  00A5               	movwf	___aldiv@dividend+1
  2222     0749  0870               	movf	?___lmul,w
  2223     074A  00A4               	movwf	___aldiv@dividend
  2224     074B  3186  2656  3186   	fcall	___aldiv
  2225     074E  0020               	movlb	0	; select bank0
  2226     074F  0823               	movf	?___aldiv+3,w
  2227     0750  00C3               	movwf	_BinTOBcd$1203+3
  2228     0751  0822               	movf	?___aldiv+2,w
  2229     0752  00C2               	movwf	_BinTOBcd$1203+2
  2230     0753  0821               	movf	?___aldiv+1,w
  2231     0754  00C1               	movwf	_BinTOBcd$1203+1
  2232     0755  0820               	movf	?___aldiv,w
  2233     0756  00C0               	movwf	_BinTOBcd$1203
  2234                           
  2235                           ;funtions_magic.c: 16:     r[1] = (((iADC*1000)/1024)/10)%10;
  2236     0757  3000               	movlw	0
  2237     0758  00B1               	movwf	___almod@divisor+3
  2238     0759  3000               	movlw	0
  2239     075A  00B0               	movwf	___almod@divisor+2
  2240     075B  3000               	movlw	0
  2241     075C  00AF               	movwf	___almod@divisor+1
  2242     075D  300A               	movlw	10
  2243     075E  00AE               	movwf	___almod@divisor
  2244     075F  3000               	movlw	0
  2245     0760  00A3               	movwf	___aldiv@divisor+3
  2246     0761  3000               	movlw	0
  2247     0762  00A2               	movwf	___aldiv@divisor+2
  2248     0763  3000               	movlw	0
  2249     0764  00A1               	movwf	___aldiv@divisor+1
  2250     0765  300A               	movlw	10
  2251     0766  00A0               	movwf	___aldiv@divisor
  2252     0767  0843               	movf	_BinTOBcd$1203+3,w
  2253     0768  00A7               	movwf	___aldiv@dividend+3
  2254     0769  0842               	movf	_BinTOBcd$1203+2,w
  2255     076A  00A6               	movwf	___aldiv@dividend+2
  2256     076B  0841               	movf	_BinTOBcd$1203+1,w
  2257     076C  00A5               	movwf	___aldiv@dividend+1
  2258     076D  0840               	movf	_BinTOBcd$1203,w
  2259     076E  00A4               	movwf	___aldiv@dividend
  2260     076F  3186  2656  3186   	fcall	___aldiv
  2261     0772  0020               	movlb	0	; select bank0
  2262     0773  0823               	movf	?___aldiv+3,w
  2263     0774  00B5               	movwf	___almod@dividend+3
  2264     0775  0822               	movf	?___aldiv+2,w
  2265     0776  00B4               	movwf	___almod@dividend+2
  2266     0777  0821               	movf	?___aldiv+1,w
  2267     0778  00B3               	movwf	___almod@dividend+1
  2268     0779  0820               	movf	?___aldiv,w
  2269     077A  00B2               	movwf	___almod@dividend
  2270     077B  3185  25DA  3186   	fcall	___almod
  2271     077E  0020               	movlb	0	; select bank0
  2272     077F  082F               	movf	?___almod+1,w
  2273     0780  00DA               	movwf	BinTOBcd@r+3
  2274     0781  082E               	movf	?___almod,w
  2275     0782  00D9               	movwf	BinTOBcd@r+2
  2276                           
  2277                           ;funtions_magic.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2278     0783  3000               	movlw	0
  2279     0784  00A3               	movwf	___aldiv@divisor+3
  2280     0785  3000               	movlw	0
  2281     0786  00A2               	movwf	___aldiv@divisor+2
  2282     0787  3004               	movlw	4
  2283     0788  00A1               	movwf	___aldiv@divisor+1
  2284     0789  3000               	movlw	0
  2285     078A  00A0               	movwf	___aldiv@divisor
  2286     078B  083B               	movf	BinTOBcd@iADC+3,w
  2287     078C  00F3               	movwf	___lmul@multiplier+3
  2288     078D  083A               	movf	BinTOBcd@iADC+2,w
  2289     078E  00F2               	movwf	___lmul@multiplier+2
  2290     078F  0839               	movf	BinTOBcd@iADC+1,w
  2291     0790  00F1               	movwf	___lmul@multiplier+1
  2292     0791  0838               	movf	BinTOBcd@iADC,w
  2293     0792  00F0               	movwf	___lmul@multiplier
  2294     0793  3000               	movlw	0
  2295     0794  00F7               	movwf	___lmul@multiplicand+3
  2296     0795  3000               	movlw	0
  2297     0796  00F6               	movwf	___lmul@multiplicand+2
  2298     0797  3003               	movlw	3
  2299     0798  00F5               	movwf	___lmul@multiplicand+1
  2300     0799  30E8               	movlw	232
  2301     079A  00F4               	movwf	___lmul@multiplicand
  2302     079B  3184  2464  3186   	fcall	___lmul
  2303     079E  0873               	movf	?___lmul+3,w
  2304     079F  0020               	movlb	0	; select bank0
  2305     07A0  00A7               	movwf	___aldiv@dividend+3
  2306     07A1  0872               	movf	?___lmul+2,w
  2307     07A2  00A6               	movwf	___aldiv@dividend+2
  2308     07A3  0871               	movf	?___lmul+1,w
  2309     07A4  00A5               	movwf	___aldiv@dividend+1
  2310     07A5  0870               	movf	?___lmul,w
  2311     07A6  00A4               	movwf	___aldiv@dividend
  2312     07A7  3186  2656  3186   	fcall	___aldiv
  2313     07AA  0020               	movlb	0	; select bank0
  2314     07AB  0823               	movf	?___aldiv+3,w
  2315     07AC  00C3               	movwf	_BinTOBcd$1203+3
  2316     07AD  0822               	movf	?___aldiv+2,w
  2317     07AE  00C2               	movwf	_BinTOBcd$1203+2
  2318     07AF  0821               	movf	?___aldiv+1,w
  2319     07B0  00C1               	movwf	_BinTOBcd$1203+1
  2320     07B1  0820               	movf	?___aldiv,w
  2321     07B2  00C0               	movwf	_BinTOBcd$1203
  2322                           
  2323                           ;funtions_magic.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2324     07B3  3000               	movlw	0
  2325     07B4  00A3               	movwf	___aldiv@divisor+3
  2326     07B5  3000               	movlw	0
  2327     07B6  00A2               	movwf	___aldiv@divisor+2
  2328     07B7  3000               	movlw	0
  2329     07B8  00A1               	movwf	___aldiv@divisor+1
  2330     07B9  300A               	movlw	10
  2331     07BA  00A0               	movwf	___aldiv@divisor
  2332     07BB  0843               	movf	_BinTOBcd$1203+3,w
  2333     07BC  00A7               	movwf	___aldiv@dividend+3
  2334     07BD  0842               	movf	_BinTOBcd$1203+2,w
  2335     07BE  00A6               	movwf	___aldiv@dividend+2
  2336     07BF  0841               	movf	_BinTOBcd$1203+1,w
  2337     07C0  00A5               	movwf	___aldiv@dividend+1
  2338     07C1  0840               	movf	_BinTOBcd$1203,w
  2339     07C2  00A4               	movwf	___aldiv@dividend
  2340     07C3  3186  2656  3186   	fcall	___aldiv
  2341     07C6  0020               	movlb	0	; select bank0
  2342     07C7  0823               	movf	?___aldiv+3,w
  2343     07C8  00BF               	movwf	_BinTOBcd$1204+3
  2344     07C9  0822               	movf	?___aldiv+2,w
  2345     07CA  00BE               	movwf	_BinTOBcd$1204+2
  2346     07CB  0821               	movf	?___aldiv+1,w
  2347     07CC  00BD               	movwf	_BinTOBcd$1204+1
  2348     07CD  0820               	movf	?___aldiv,w
  2349     07CE  00BC               	movwf	_BinTOBcd$1204
  2350                           
  2351                           ;funtions_magic.c: 17:     r[2] = (((iADC*1000)/1024)/10)/10;
  2352     07CF  3000               	movlw	0
  2353     07D0  00A3               	movwf	___aldiv@divisor+3
  2354     07D1  3000               	movlw	0
  2355     07D2  00A2               	movwf	___aldiv@divisor+2
  2356     07D3  3000               	movlw	0
  2357     07D4  00A1               	movwf	___aldiv@divisor+1
  2358     07D5  300A               	movlw	10
  2359     07D6  00A0               	movwf	___aldiv@divisor
  2360     07D7  083F               	movf	_BinTOBcd$1204+3,w
  2361     07D8  00A7               	movwf	___aldiv@dividend+3
  2362     07D9  083E               	movf	_BinTOBcd$1204+2,w
  2363     07DA  00A6               	movwf	___aldiv@dividend+2
  2364     07DB  083D               	movf	_BinTOBcd$1204+1,w
  2365     07DC  00A5               	movwf	___aldiv@dividend+1
  2366     07DD  083C               	movf	_BinTOBcd$1204,w
  2367     07DE  00A4               	movwf	___aldiv@dividend
  2368     07DF  3186  2656  3186   	fcall	___aldiv
  2369     07E2  0020               	movlb	0	; select bank0
  2370     07E3  0821               	movf	?___aldiv+1,w
  2371     07E4  00DC               	movwf	BinTOBcd@r+5
  2372     07E5  0820               	movf	?___aldiv,w
  2373     07E6  00DB               	movwf	BinTOBcd@r+4
  2374     07E7                     l1187:
  2375                           
  2376                           ;funtions_magic.c: 19:     return r;
  2377     07E7  3057               	movlw	(low (BinTOBcd@r| 0))& (0+255)
  2378     07E8                     l53:
  2379     07E8  0008               	return
  2380     07E9                     __end_of_BinTOBcd:
  2381                           
  2382                           	psect	text10
  2383     0464                     __ptext10:	
  2384 ;; *************** function ___lmul *****************
  2385 ;; Defined at:
  2386 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  multiplier      4    0[COMMON] unsigned long 
  2389 ;;  multiplicand    4    4[COMMON] unsigned long 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  product         4    8[COMMON] unsigned long 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  4    0[COMMON] unsigned long 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2401 ;;      Params:         8       0       0       0       0       0
  2402 ;;      Locals:         4       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0
  2404 ;;      Totals:        12       0       0       0       0       0
  2405 ;;Total ram usage:       12 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_BinTOBcd
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414     0464                     ___lmul:	
  2415                           ;psect for function ___lmul
  2416                           
  2417     0464                     l1003:	
  2418                           ;incstack = 0
  2419                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2420                           
  2421     0464  3000               	movlw	0
  2422     0465  00FB               	movwf	___lmul@product+3
  2423     0466  3000               	movlw	0
  2424     0467  00FA               	movwf	___lmul@product+2
  2425     0468  3000               	movlw	0
  2426     0469  00F9               	movwf	___lmul@product+1
  2427     046A  3000               	movlw	0
  2428     046B  00F8               	movwf	___lmul@product
  2429     046C                     l1005:
  2430     046C  1C70               	btfss	___lmul@multiplier,0
  2431     046D  2C6F               	goto	u531
  2432     046E  2C70               	goto	u530
  2433     046F                     u531:
  2434     046F  2C78               	goto	l1009
  2435     0470                     u530:
  2436     0470                     l1007:
  2437     0470  0874               	movf	___lmul@multiplicand,w
  2438     0471  07F8               	addwf	___lmul@product,f
  2439     0472  0875               	movf	___lmul@multiplicand+1,w
  2440     0473  3DF9               	addwfc	___lmul@product+1,f
  2441     0474  0876               	movf	___lmul@multiplicand+2,w
  2442     0475  3DFA               	addwfc	___lmul@product+2,f
  2443     0476  0877               	movf	___lmul@multiplicand+3,w
  2444     0477  3DFB               	addwfc	___lmul@product+3,f
  2445     0478                     l1009:
  2446     0478  3001               	movlw	1
  2447     0479                     u545:
  2448     0479  35F4               	lslf	___lmul@multiplicand,f
  2449     047A  0DF5               	rlf	___lmul@multiplicand+1,f
  2450     047B  0DF6               	rlf	___lmul@multiplicand+2,f
  2451     047C  0DF7               	rlf	___lmul@multiplicand+3,f
  2452     047D  0B89               	decfsz	9,f
  2453     047E  2C79               	goto	u545
  2454     047F                     l1011:
  2455     047F  3001               	movlw	1
  2456     0480                     u555:
  2457     0480  36F3               	lsrf	___lmul@multiplier+3,f
  2458     0481  0CF2               	rrf	___lmul@multiplier+2,f
  2459     0482  0CF1               	rrf	___lmul@multiplier+1,f
  2460     0483  0CF0               	rrf	___lmul@multiplier,f
  2461     0484  0B89               	decfsz	9,f
  2462     0485  2C80               	goto	u555
  2463     0486  0873               	movf	___lmul@multiplier+3,w
  2464     0487  0472               	iorwf	___lmul@multiplier+2,w
  2465     0488  0471               	iorwf	___lmul@multiplier+1,w
  2466     0489  0470               	iorwf	___lmul@multiplier,w
  2467     048A  1D03               	skipz
  2468     048B  2C8D               	goto	u561
  2469     048C  2C8E               	goto	u560
  2470     048D                     u561:
  2471     048D  2C6C               	goto	l1005
  2472     048E                     u560:
  2473     048E                     l1013:
  2474     048E  087B               	movf	___lmul@product+3,w
  2475     048F  00F3               	movwf	?___lmul+3
  2476     0490  087A               	movf	___lmul@product+2,w
  2477     0491  00F2               	movwf	?___lmul+2
  2478     0492  0879               	movf	___lmul@product+1,w
  2479     0493  00F1               	movwf	?___lmul+1
  2480     0494  0878               	movf	___lmul@product,w
  2481     0495  00F0               	movwf	?___lmul
  2482     0496                     l279:
  2483     0496  0008               	return
  2484     0497                     __end_of___lmul:
  2485                           
  2486                           	psect	text11
  2487     05DA                     __ptext11:	
  2488 ;; *************** function ___almod *****************
  2489 ;; Defined at:
  2490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\almod.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  divisor         4   14[BANK0 ] long 
  2493 ;;  dividend        4   18[BANK0 ] long 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  sign            1   23[BANK0 ] unsigned char 
  2496 ;;  counter         1   22[BANK0 ] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  4   14[BANK0 ] long 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2506 ;;      Params:         0       8       0       0       0       0
  2507 ;;      Locals:         0       2       0       0       0       0
  2508 ;;      Temps:          1       0       0       0       0       0
  2509 ;;      Totals:         1      10       0       0       0       0
  2510 ;;Total ram usage:       11 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_BinTOBcd
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519     05DA                     ___almod:	
  2520                           ;psect for function ___almod
  2521                           
  2522     05DA                     l1057:	
  2523                           ;incstack = 0
  2524                           ; Regs used in ___almod: [wreg+status,2+status,0]
  2525                           
  2526     05DA  0020               	movlb	0	; select bank0
  2527     05DB  01B7               	clrf	___almod@sign
  2528     05DC                     l1059:
  2529     05DC  1FB5               	btfss	___almod@dividend+3,7
  2530     05DD  2DDF               	goto	u671
  2531     05DE  2DE0               	goto	u670
  2532     05DF                     u671:
  2533     05DF  2DED               	goto	l343
  2534     05E0                     u670:
  2535     05E0                     l1061:
  2536     05E0  09B2               	comf	___almod@dividend,f
  2537     05E1  09B3               	comf	___almod@dividend+1,f
  2538     05E2  09B4               	comf	___almod@dividend+2,f
  2539     05E3  09B5               	comf	___almod@dividend+3,f
  2540     05E4  0AB2               	incf	___almod@dividend,f
  2541     05E5  1903               	skipnz
  2542     05E6  0AB3               	incf	___almod@dividend+1,f
  2543     05E7  1903               	skipnz
  2544     05E8  0AB4               	incf	___almod@dividend+2,f
  2545     05E9  1903               	skipnz
  2546     05EA  0AB5               	incf	___almod@dividend+3,f
  2547     05EB  01B7               	clrf	___almod@sign
  2548     05EC  0AB7               	incf	___almod@sign,f
  2549     05ED                     l343:
  2550     05ED  1FB1               	btfss	___almod@divisor+3,7
  2551     05EE  2DF0               	goto	u681
  2552     05EF  2DF1               	goto	u680
  2553     05F0                     u681:
  2554     05F0  2DFC               	goto	l1065
  2555     05F1                     u680:
  2556     05F1                     l1063:
  2557     05F1  09AE               	comf	___almod@divisor,f
  2558     05F2  09AF               	comf	___almod@divisor+1,f
  2559     05F3  09B0               	comf	___almod@divisor+2,f
  2560     05F4  09B1               	comf	___almod@divisor+3,f
  2561     05F5  0AAE               	incf	___almod@divisor,f
  2562     05F6  1903               	skipnz
  2563     05F7  0AAF               	incf	___almod@divisor+1,f
  2564     05F8  1903               	skipnz
  2565     05F9  0AB0               	incf	___almod@divisor+2,f
  2566     05FA  1903               	skipnz
  2567     05FB  0AB1               	incf	___almod@divisor+3,f
  2568     05FC                     l1065:
  2569     05FC  0831               	movf	___almod@divisor+3,w
  2570     05FD  0430               	iorwf	___almod@divisor+2,w
  2571     05FE  042F               	iorwf	___almod@divisor+1,w
  2572     05FF  042E               	iorwf	___almod@divisor,w
  2573     0600  1903               	skipnz
  2574     0601  2E03               	goto	u691
  2575     0602  2E04               	goto	u690
  2576     0603                     u691:
  2577     0603  2E3D               	goto	l1081
  2578     0604                     u690:
  2579     0604                     l1067:
  2580     0604  01B6               	clrf	___almod@counter
  2581     0605  0AB6               	incf	___almod@counter,f
  2582     0606  2E12               	goto	l1071
  2583     0607                     l1069:
  2584     0607  3001               	movlw	1
  2585     0608                     u705:
  2586     0608  35AE               	lslf	___almod@divisor,f
  2587     0609  0DAF               	rlf	___almod@divisor+1,f
  2588     060A  0DB0               	rlf	___almod@divisor+2,f
  2589     060B  0DB1               	rlf	___almod@divisor+3,f
  2590     060C  0B89               	decfsz	9,f
  2591     060D  2E08               	goto	u705
  2592     060E  3001               	movlw	1
  2593     060F  00FD               	movwf	??___almod
  2594     0610  087D               	movf	??___almod,w
  2595     0611  07B6               	addwf	___almod@counter,f
  2596     0612                     l1071:
  2597     0612  1FB1               	btfss	___almod@divisor+3,7
  2598     0613  2E15               	goto	u711
  2599     0614  2E16               	goto	u710
  2600     0615                     u711:
  2601     0615  2E07               	goto	l1069
  2602     0616                     u710:
  2603     0616                     l1073:
  2604     0616  0831               	movf	___almod@divisor+3,w
  2605     0617  0235               	subwf	___almod@dividend+3,w
  2606     0618  1D03               	skipz
  2607     0619  2E24               	goto	u725
  2608     061A  0830               	movf	___almod@divisor+2,w
  2609     061B  0234               	subwf	___almod@dividend+2,w
  2610     061C  1D03               	skipz
  2611     061D  2E24               	goto	u725
  2612     061E  082F               	movf	___almod@divisor+1,w
  2613     061F  0233               	subwf	___almod@dividend+1,w
  2614     0620  1D03               	skipz
  2615     0621  2E24               	goto	u725
  2616     0622  082E               	movf	___almod@divisor,w
  2617     0623  0232               	subwf	___almod@dividend,w
  2618     0624                     u725:
  2619     0624  1C03               	skipc
  2620     0625  2E27               	goto	u721
  2621     0626  2E28               	goto	u720
  2622     0627                     u721:
  2623     0627  2E30               	goto	l1077
  2624     0628                     u720:
  2625     0628                     l1075:
  2626     0628  082E               	movf	___almod@divisor,w
  2627     0629  02B2               	subwf	___almod@dividend,f
  2628     062A  082F               	movf	___almod@divisor+1,w
  2629     062B  3BB3               	subwfb	___almod@dividend+1,f
  2630     062C  0830               	movf	___almod@divisor+2,w
  2631     062D  3BB4               	subwfb	___almod@dividend+2,f
  2632     062E  0831               	movf	___almod@divisor+3,w
  2633     062F  3BB5               	subwfb	___almod@dividend+3,f
  2634     0630                     l1077:
  2635     0630  3001               	movlw	1
  2636     0631                     u735:
  2637     0631  36B1               	lsrf	___almod@divisor+3,f
  2638     0632  0CB0               	rrf	___almod@divisor+2,f
  2639     0633  0CAF               	rrf	___almod@divisor+1,f
  2640     0634  0CAE               	rrf	___almod@divisor,f
  2641     0635  0B89               	decfsz	9,f
  2642     0636  2E31               	goto	u735
  2643     0637                     l1079:
  2644     0637  3001               	movlw	1
  2645     0638  02B6               	subwf	___almod@counter,f
  2646     0639  1D03               	btfss	3,2
  2647     063A  2E3C               	goto	u741
  2648     063B  2E3D               	goto	u740
  2649     063C                     u741:
  2650     063C  2E16               	goto	l1073
  2651     063D                     u740:
  2652     063D                     l1081:
  2653     063D  0837               	movf	___almod@sign,w
  2654     063E  1903               	btfsc	3,2
  2655     063F  2E41               	goto	u751
  2656     0640  2E42               	goto	u750
  2657     0641                     u751:
  2658     0641  2E4D               	goto	l1085
  2659     0642                     u750:
  2660     0642                     l1083:
  2661     0642  09B2               	comf	___almod@dividend,f
  2662     0643  09B3               	comf	___almod@dividend+1,f
  2663     0644  09B4               	comf	___almod@dividend+2,f
  2664     0645  09B5               	comf	___almod@dividend+3,f
  2665     0646  0AB2               	incf	___almod@dividend,f
  2666     0647  1903               	skipnz
  2667     0648  0AB3               	incf	___almod@dividend+1,f
  2668     0649  1903               	skipnz
  2669     064A  0AB4               	incf	___almod@dividend+2,f
  2670     064B  1903               	skipnz
  2671     064C  0AB5               	incf	___almod@dividend+3,f
  2672     064D                     l1085:
  2673     064D  0835               	movf	___almod@dividend+3,w
  2674     064E  00B1               	movwf	?___almod+3
  2675     064F  0834               	movf	___almod@dividend+2,w
  2676     0650  00B0               	movwf	?___almod+2
  2677     0651  0833               	movf	___almod@dividend+1,w
  2678     0652  00AF               	movwf	?___almod+1
  2679     0653  0832               	movf	___almod@dividend,w
  2680     0654  00AE               	movwf	?___almod
  2681     0655                     l353:
  2682     0655  0008               	return
  2683     0656                     __end_of___almod:
  2684                           
  2685                           	psect	text12
  2686     0656                     __ptext12:	
  2687 ;; *************** function ___aldiv *****************
  2688 ;; Defined at:
  2689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  divisor         4    0[BANK0 ] long 
  2692 ;;  dividend        4    4[BANK0 ] long 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  quotient        4   10[BANK0 ] long 
  2695 ;;  sign            1    9[BANK0 ] unsigned char 
  2696 ;;  counter         1    8[BANK0 ] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  4    0[BANK0 ] long 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2706 ;;      Params:         0       8       0       0       0       0
  2707 ;;      Locals:         0       6       0       0       0       0
  2708 ;;      Temps:          1       0       0       0       0       0
  2709 ;;      Totals:         1      14       0       0       0       0
  2710 ;;Total ram usage:       15 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_BinTOBcd
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719     0656                     ___aldiv:	
  2720                           ;psect for function ___aldiv
  2721                           
  2722     0656                     l1017:	
  2723                           ;incstack = 0
  2724                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2725                           
  2726     0656  0020               	movlb	0	; select bank0
  2727     0657  01A9               	clrf	___aldiv@sign
  2728     0658                     l1019:
  2729     0658  1FA3               	btfss	___aldiv@divisor+3,7
  2730     0659  2E5B               	goto	u571
  2731     065A  2E5C               	goto	u570
  2732     065B                     u571:
  2733     065B  2E69               	goto	l330
  2734     065C                     u570:
  2735     065C                     l1021:
  2736     065C  09A0               	comf	___aldiv@divisor,f
  2737     065D  09A1               	comf	___aldiv@divisor+1,f
  2738     065E  09A2               	comf	___aldiv@divisor+2,f
  2739     065F  09A3               	comf	___aldiv@divisor+3,f
  2740     0660  0AA0               	incf	___aldiv@divisor,f
  2741     0661  1903               	skipnz
  2742     0662  0AA1               	incf	___aldiv@divisor+1,f
  2743     0663  1903               	skipnz
  2744     0664  0AA2               	incf	___aldiv@divisor+2,f
  2745     0665  1903               	skipnz
  2746     0666  0AA3               	incf	___aldiv@divisor+3,f
  2747     0667  01A9               	clrf	___aldiv@sign
  2748     0668  0AA9               	incf	___aldiv@sign,f
  2749     0669                     l330:
  2750     0669  1FA7               	btfss	___aldiv@dividend+3,7
  2751     066A  2E6C               	goto	u581
  2752     066B  2E6D               	goto	u580
  2753     066C                     u581:
  2754     066C  2E7C               	goto	l1027
  2755     066D                     u580:
  2756     066D                     l1023:
  2757     066D  09A4               	comf	___aldiv@dividend,f
  2758     066E  09A5               	comf	___aldiv@dividend+1,f
  2759     066F  09A6               	comf	___aldiv@dividend+2,f
  2760     0670  09A7               	comf	___aldiv@dividend+3,f
  2761     0671  0AA4               	incf	___aldiv@dividend,f
  2762     0672  1903               	skipnz
  2763     0673  0AA5               	incf	___aldiv@dividend+1,f
  2764     0674  1903               	skipnz
  2765     0675  0AA6               	incf	___aldiv@dividend+2,f
  2766     0676  1903               	skipnz
  2767     0677  0AA7               	incf	___aldiv@dividend+3,f
  2768     0678                     l1025:
  2769     0678  3001               	movlw	1
  2770     0679  00FC               	movwf	??___aldiv
  2771     067A  087C               	movf	??___aldiv,w
  2772     067B  06A9               	xorwf	___aldiv@sign,f
  2773     067C                     l1027:
  2774     067C  3000               	movlw	0
  2775     067D  00AD               	movwf	___aldiv@quotient+3
  2776     067E  3000               	movlw	0
  2777     067F  00AC               	movwf	___aldiv@quotient+2
  2778     0680  3000               	movlw	0
  2779     0681  00AB               	movwf	___aldiv@quotient+1
  2780     0682  3000               	movlw	0
  2781     0683  00AA               	movwf	___aldiv@quotient
  2782     0684                     l1029:
  2783     0684  0823               	movf	___aldiv@divisor+3,w
  2784     0685  0422               	iorwf	___aldiv@divisor+2,w
  2785     0686  0421               	iorwf	___aldiv@divisor+1,w
  2786     0687  0420               	iorwf	___aldiv@divisor,w
  2787     0688  1903               	skipnz
  2788     0689  2E8B               	goto	u591
  2789     068A  2E8C               	goto	u590
  2790     068B                     u591:
  2791     068B  2ECD               	goto	l1049
  2792     068C                     u590:
  2793     068C                     l1031:
  2794     068C  01A8               	clrf	___aldiv@counter
  2795     068D  0AA8               	incf	___aldiv@counter,f
  2796     068E  2E9A               	goto	l1035
  2797     068F                     l1033:
  2798     068F  3001               	movlw	1
  2799     0690                     u605:
  2800     0690  35A0               	lslf	___aldiv@divisor,f
  2801     0691  0DA1               	rlf	___aldiv@divisor+1,f
  2802     0692  0DA2               	rlf	___aldiv@divisor+2,f
  2803     0693  0DA3               	rlf	___aldiv@divisor+3,f
  2804     0694  0B89               	decfsz	9,f
  2805     0695  2E90               	goto	u605
  2806     0696  3001               	movlw	1
  2807     0697  00FC               	movwf	??___aldiv
  2808     0698  087C               	movf	??___aldiv,w
  2809     0699  07A8               	addwf	___aldiv@counter,f
  2810     069A                     l1035:
  2811     069A  1FA3               	btfss	___aldiv@divisor+3,7
  2812     069B  2E9D               	goto	u611
  2813     069C  2E9E               	goto	u610
  2814     069D                     u611:
  2815     069D  2E8F               	goto	l1033
  2816     069E                     u610:
  2817     069E                     l1037:
  2818     069E  3001               	movlw	1
  2819     069F                     u625:
  2820     069F  35AA               	lslf	___aldiv@quotient,f
  2821     06A0  0DAB               	rlf	___aldiv@quotient+1,f
  2822     06A1  0DAC               	rlf	___aldiv@quotient+2,f
  2823     06A2  0DAD               	rlf	___aldiv@quotient+3,f
  2824     06A3  0B89               	decfsz	9,f
  2825     06A4  2E9F               	goto	u625
  2826     06A5                     l1039:
  2827     06A5  0823               	movf	___aldiv@divisor+3,w
  2828     06A6  0227               	subwf	___aldiv@dividend+3,w
  2829     06A7  1D03               	skipz
  2830     06A8  2EB3               	goto	u635
  2831     06A9  0822               	movf	___aldiv@divisor+2,w
  2832     06AA  0226               	subwf	___aldiv@dividend+2,w
  2833     06AB  1D03               	skipz
  2834     06AC  2EB3               	goto	u635
  2835     06AD  0821               	movf	___aldiv@divisor+1,w
  2836     06AE  0225               	subwf	___aldiv@dividend+1,w
  2837     06AF  1D03               	skipz
  2838     06B0  2EB3               	goto	u635
  2839     06B1  0820               	movf	___aldiv@divisor,w
  2840     06B2  0224               	subwf	___aldiv@dividend,w
  2841     06B3                     u635:
  2842     06B3  1C03               	skipc
  2843     06B4  2EB6               	goto	u631
  2844     06B5  2EB7               	goto	u630
  2845     06B6                     u631:
  2846     06B6  2EC0               	goto	l1045
  2847     06B7                     u630:
  2848     06B7                     l1041:
  2849     06B7  0820               	movf	___aldiv@divisor,w
  2850     06B8  02A4               	subwf	___aldiv@dividend,f
  2851     06B9  0821               	movf	___aldiv@divisor+1,w
  2852     06BA  3BA5               	subwfb	___aldiv@dividend+1,f
  2853     06BB  0822               	movf	___aldiv@divisor+2,w
  2854     06BC  3BA6               	subwfb	___aldiv@dividend+2,f
  2855     06BD  0823               	movf	___aldiv@divisor+3,w
  2856     06BE  3BA7               	subwfb	___aldiv@dividend+3,f
  2857     06BF                     l1043:
  2858     06BF  142A               	bsf	___aldiv@quotient,0
  2859     06C0                     l1045:
  2860     06C0  3001               	movlw	1
  2861     06C1                     u645:
  2862     06C1  36A3               	lsrf	___aldiv@divisor+3,f
  2863     06C2  0CA2               	rrf	___aldiv@divisor+2,f
  2864     06C3  0CA1               	rrf	___aldiv@divisor+1,f
  2865     06C4  0CA0               	rrf	___aldiv@divisor,f
  2866     06C5  0B89               	decfsz	9,f
  2867     06C6  2EC1               	goto	u645
  2868     06C7                     l1047:
  2869     06C7  3001               	movlw	1
  2870     06C8  02A8               	subwf	___aldiv@counter,f
  2871     06C9  1D03               	btfss	3,2
  2872     06CA  2ECC               	goto	u651
  2873     06CB  2ECD               	goto	u650
  2874     06CC                     u651:
  2875     06CC  2E9E               	goto	l1037
  2876     06CD                     u650:
  2877     06CD                     l1049:
  2878     06CD  0829               	movf	___aldiv@sign,w
  2879     06CE  1903               	btfsc	3,2
  2880     06CF  2ED1               	goto	u661
  2881     06D0  2ED2               	goto	u660
  2882     06D1                     u661:
  2883     06D1  2EDD               	goto	l1053
  2884     06D2                     u660:
  2885     06D2                     l1051:
  2886     06D2  09AA               	comf	___aldiv@quotient,f
  2887     06D3  09AB               	comf	___aldiv@quotient+1,f
  2888     06D4  09AC               	comf	___aldiv@quotient+2,f
  2889     06D5  09AD               	comf	___aldiv@quotient+3,f
  2890     06D6  0AAA               	incf	___aldiv@quotient,f
  2891     06D7  1903               	skipnz
  2892     06D8  0AAB               	incf	___aldiv@quotient+1,f
  2893     06D9  1903               	skipnz
  2894     06DA  0AAC               	incf	___aldiv@quotient+2,f
  2895     06DB  1903               	skipnz
  2896     06DC  0AAD               	incf	___aldiv@quotient+3,f
  2897     06DD                     l1053:
  2898     06DD  082D               	movf	___aldiv@quotient+3,w
  2899     06DE  00A3               	movwf	?___aldiv+3
  2900     06DF  082C               	movf	___aldiv@quotient+2,w
  2901     06E0  00A2               	movwf	?___aldiv+2
  2902     06E1  082B               	movf	___aldiv@quotient+1,w
  2903     06E2  00A1               	movwf	?___aldiv+1
  2904     06E3  082A               	movf	___aldiv@quotient,w
  2905     06E4  00A0               	movwf	?___aldiv
  2906     06E5                     l340:
  2907     06E5  0008               	return
  2908     06E6                     __end_of___aldiv:
  2909                           
  2910                           	psect	text13
  2911     03FC                     __ptext13:	
  2912 ;; *************** function _ASCII_Con *****************
  2913 ;; Defined at:
  2914 ;;		line 138 in file "funtions_magic.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  a               2    0[COMMON] int 
  2917 ;;  b               2    2[COMMON] int 
  2918 ;;  c               2    4[COMMON] int 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      PTR unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2930 ;;      Params:         6       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0
  2933 ;;      Totals:         6       0       0       0       0       0
  2934 ;;Total ram usage:        6 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943     03FC                     _ASCII_Con:	
  2944                           ;psect for function _ASCII_Con
  2945                           
  2946     03FC                     l1225:	
  2947                           ;incstack = 0
  2948                           ; Regs used in _ASCII_Con: [wreg+status,2+status,0]
  2949                           
  2950                           
  2951                           ;funtions_magic.c: 138: unsigned char* ASCII_Con(int a, int b, int c);funtions_magic.c: 
      +                          139: {;funtions_magic.c: 140:     static char r[7];;funtions_magic.c: 141:     r[0] = a+
      +                          48;
  2952     03FC  0870               	movf	ASCII_Con@a,w
  2953     03FD  3E30               	addlw	48
  2954     03FE  0020               	movlb	0	; select bank0
  2955     03FF  00CA               	movwf	ASCII_Con@r
  2956     0400                     l1227:
  2957                           
  2958                           ;funtions_magic.c: 142:     r[1] = '.';
  2959     0400  302E               	movlw	46
  2960     0401  00CB               	movwf	ASCII_Con@r+1
  2961     0402                     l1229:
  2962                           
  2963                           ;funtions_magic.c: 143:     r[2] = b+48;
  2964     0402  0872               	movf	ASCII_Con@b,w
  2965     0403  3E30               	addlw	48
  2966     0404  00CC               	movwf	ASCII_Con@r+2
  2967     0405                     l1231:
  2968                           
  2969                           ;funtions_magic.c: 144:     r[3] = c+48;
  2970     0405  0874               	movf	ASCII_Con@c,w
  2971     0406  3E30               	addlw	48
  2972     0407  00CD               	movwf	ASCII_Con@r+3
  2973     0408                     l1233:
  2974                           
  2975                           ;funtions_magic.c: 145:     r[4] = ' ';
  2976     0408  3020               	movlw	32
  2977     0409  00CE               	movwf	ASCII_Con@r+4
  2978     040A                     l1235:
  2979                           
  2980                           ;funtions_magic.c: 146:     r[5] = 'V';
  2981     040A  3056               	movlw	86
  2982     040B  00CF               	movwf	ASCII_Con@r+5
  2983     040C                     l1237:
  2984                           
  2985                           ;funtions_magic.c: 147:     r[6] = '\0';
  2986     040C  01D0               	clrf	ASCII_Con@r+6
  2987     040D                     l1239:
  2988                           
  2989                           ;funtions_magic.c: 149:     return r;
  2990     040D  304A               	movlw	(low (ASCII_Con@r| 0))& (0+255)
  2991     040E                     l92:
  2992     040E  0008               	return
  2993     040F                     __end_of_ASCII_Con:
  2994     007E                     btemp	set	126	;btemp
  2995     007E                     wtemp0	set	126
  2996                           
  2997                           	psect	idloc
  2998                           
  2999                           ;Config register IDLOC0 @ 0x8000
  3000                           ;	unspecified, using default values
  3001     8000                     	org	32768
  3002     8000  3FFF               	dw	16383
  3003                           
  3004                           ;Config register IDLOC1 @ 0x8001
  3005                           ;	unspecified, using default values
  3006     8001                     	org	32769
  3007     8001  3FFF               	dw	16383
  3008                           
  3009                           ;Config register IDLOC2 @ 0x8002
  3010                           ;	unspecified, using default values
  3011     8002                     	org	32770
  3012     8002  3FFF               	dw	16383
  3013                           
  3014                           ;Config register IDLOC3 @ 0x8003
  3015                           ;	unspecified, using default values
  3016     8003                     	org	32771
  3017     8003  3FFF               	dw	16383
  3018                           
  3019                           	psect	config
  3020                           
  3021                           ;Config register CONFIG1 @ 0x8007
  3022                           ;	Oscillator Selection
  3023                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3024                           ;	Watchdog Timer Enable
  3025                           ;	WDTE = OFF, WDT disabled
  3026                           ;	Power-up Timer Enable
  3027                           ;	PWRTE = OFF, PWRT disabled
  3028                           ;	MCLR Pin Function Select
  3029                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3030                           ;	Flash Program Memory Code Protection
  3031                           ;	CP = OFF, Program memory code protection is disabled
  3032                           ;	Data Memory Code Protection
  3033                           ;	CPD = OFF, Data memory code protection is disabled
  3034                           ;	Brown-out Reset Enable
  3035                           ;	BOREN = ON, Brown-out Reset enabled
  3036                           ;	Clock Out Enable
  3037                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3038                           ;	Internal/External Switchover
  3039                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3040                           ;	Fail-Safe Clock Monitor Enable
  3041                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3042     8007                     	org	32775
  3043     8007  3FE4               	dw	16356
  3044                           
  3045                           ;Config register CONFIG2 @ 0x8008
  3046                           ;	Flash Memory Self-Write Protection
  3047                           ;	WRT = OFF, Write protection off
  3048                           ;	PLL Enable
  3049                           ;	PLLEN = OFF, 4x PLL disabled
  3050                           ;	Stack Overflow/Underflow Reset Enable
  3051                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3052                           ;	Brown-out Reset Voltage Selection
  3053                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3054                           ;	Low-Voltage Programming Enable
  3055                           ;	LVP = ON, Low-voltage programming enabled
  3056     8008                     	org	32776
  3057     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         19
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      61
    BANK1            80      0      20
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    UART_print@cadena	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    showNumbers@digits	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    seg7@iBCD	PTR const int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    sp__ASCII_Con	PTR unsigned char  size(1) Largest target is 7
		 -> ASCII_Con@r(BANK0[7]), 

    sp__seg7	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    main@A	PTR int  size(1) Largest target is 6
		 -> seg7@r(BANK0[6]), 

    sp__BinTOBcd	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 

    main@B	PTR int  size(1) Largest target is 6
		 -> BinTOBcd@r(BANK0[6]), 


Critical Paths under _main in COMMON

    _showNumbers->_showNumber
    _UART_print->_UART_write
    _BinTOBcd->___almod
    ___almod->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_BinTOBcd
    _BinTOBcd->___almod
    ___almod->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3773
                                             36 BANK0      6     6      0
                          _ASCII_Con
                           _BinTOBcd
                         _UART_print
                            _init_IO
                            _readADC
                               _seg7
                        _showNumbers
 ---------------------------------------------------------------------------------
 (1) _showNumbers                                          3     3      0     481
                                              3 COMMON     3     3      0
                         _showNumber
 ---------------------------------------------------------------------------------
 (2) _showNumber                                           3     1      2     382
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _seg7                                                22    22      0     169
                                              0 COMMON     1     1      0
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                             13     9      4      23
                                              0 COMMON    13     9      4
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_print                                           2     2      0     100
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BinTOBcd                                            12     8      4    2571
                                             24 BANK0     12     8      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     548
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     600
                                             13 COMMON     1     1      0
                                             14 BANK0     10     2      8
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1212
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ASCII_Con                                            6     0      6     294
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ASCII_Con
   _BinTOBcd
     ___aldiv
       ___lmul (ARG)
     ___almod
       ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul
   _UART_print
     _UART_write
   _init_IO
     _init_UART
   _readADC
   _seg7
   _showNumbers
     _showNumber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      3D       6       76.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      14       8       25.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 03 01:44:36 2023

                     l19 0547                       l60 04CB                       l53 07E8  
                     l63 0506                       l72 0463                       l81 03EE  
                     l66 05D9                       l75 03FB                       l92 040E  
                     l69 0443                       l78 03EA                       l87 0438  
                    l115 0543                      l330 0669                      l340 06E5  
                    l343 05ED                      l353 0655                      l279 0496  
                    l991 04CC                      l993 04FC                      l995 03EF  
                    l997 03F8                      l999 03FA                      u400 04D2  
                    u401 04CF                      u500 04FA                      u420 04DA  
                    u501 04F7                      u421 04D7                      u414 04D4  
                    u520 03EE                      u440 04E2                      u521 03ED  
                    u441 04DF                      u610 069E                      u530 0470  
                    u514 04FC                      u434 04DC                      u611 069D  
                    u531 046F                      u460 04EA                      u605 0690  
                    u461 04E7                      u630 06B7                      u710 0616  
                    u454 04E4                      u631 06B6                      u711 0615  
                    u720 0628                      u560 048E                      u480 04F2  
                    u625 069F                      u721 0627                      u705 0608  
                    u561 048D                      u545 0479                      u481 04EF  
                    u650 06CD                      u570 065C                      u474 04EC  
                    u651 06CC                      u635 06B3                      u571 065B  
                    u555 0480                      u660 06D2                      u580 066D  
                    u740 063D                      u661 06D1                      u645 06C1  
                    u581 066C                      u741 063C                      u725 0624  
                    u590 068C                      u750 0642                      u670 05E0  
                    u494 04F4                      u591 068B                      u751 0641  
                    u735 0631                      u671 05DF                      u807 05B7  
                    u680 05F1                      u760 0447                      u681 05F0  
                    u761 0446                      u817 05D1                      u690 0604  
                    u770 04A3                      u691 0603                      u780 0438  
                    u781 0437                      u797 059D                      wreg 0009  
                   l1001 03E7                     l1011 047F                     l1003 0464  
                   l1021 065C                     l1013 048E                     l1005 046C  
                   l1101 0514                     l1031 068C                     l1023 066D  
                   l1007 0470                     l1111 051A                     l1103 0516  
                   l1041 06B7                     l1033 068F                     l1025 0678  
                   l1017 0656                     l1009 0478                     l1121 0520  
                   l1113 051B                     l1105 0517                     l1051 06D2  
                   l1043 06BF                     l1035 069A                     l1027 067C  
                   l1019 0658                     l1131 0526                     l1123 0521  
                   l1115 051C                     l1107 0518                     l1211 05A5  
                   l1203 058C                     l1053 06DD                     l1045 06C0  
                   l1037 069E                     l1029 0684                     l1061 05E0  
                   l1141 052B                     l1133 0527                     l1125 0522  
                   l1117 051E                     l1109 0519                     l1221 05CC  
                   l1213 05B0                     l1205 0596                     l1231 0405  
                   l1047 06C7                     l1039 06A5                     l1071 0612  
                   l1063 05F1                     l1151 0537                     l1143 052C  
                   l1135 0528                     l1127 0523                     l1119 051F  
                   l1223 05D7                     l1215 05BD                     l1207 0598  
                   l1233 0408                     l1225 03FC                     l1049 06CD  
                   l1073 0616                     l1081 063D                     l1065 05FC  
                   l1057 05DA                     l1161 053C                     l1153 0538  
                   l1145 052D                     l1137 0529                     l1129 0524  
                   l1217 05BF                     l1209 05A3                     l1235 040A  
                   l1227 0400                     l1083 0642                     l1075 0628  
                   l1067 0604                     l1059 05DC                     l1243 0424  
                   l1163 053D                     l1155 0539                     l1147 0531  
                   l1139 052A                     l1091 050E                     l1171 0439  
                   l1219 05CA                     l1251 0544                     l1237 040C  
                   l1229 0402                     l1085 064D                     l1077 0630  
                   l1069 0607                     l1245 0425                     l1165 053E  
                   l1157 053A                     l1149 0535                     l1093 0510  
                   l1181 045B                     l1173 043B                     l1253 0560  
                   l1239 040D                     l1079 0637                     l1247 042C  
                   l1167 053F                     l1159 053B                     l1095 0511  
                   l1175 0441                     l1191 0499                     l1255 0566  
                   l1185 06E6                     l1249 0430                     l1169 0540  
                   l1097 0512                     l1089 0507                     l1177 0442  
                   l1193 04A7                     l1257 056A                     l1187 07E7  
                   l1099 0513                     l1179 0447                     l1195 04B2  
                   l1197 04BE                     l1199 04CA                     _main 0544  
                   _seg7 0497                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 0002  
            seg7@numbers 0020          __end_of___aldiv 06E6          __end_of___almod 0656  
                  ?_main 0070                    ?_seg7 0070                    _SPBRG 019B  
                  _TXREG 019A      ___lmul@multiplicand 0074          __end_of_readADC 0464  
        __end_of_init_IO 0544              ?_UART_print 0070              ?_UART_write 0070  
                  main@A 0048                    main@B 0049                    seg7@r 0051  
       __end_of_BinTOBcd 07E9            _BinTOBcd$1203 0040            _BinTOBcd$1204 003C  
                  status 0003                    wtemp0 007E        __end_of_ASCII_Con 040F  
        __initialization 07E9             __end_of_main 058B             __end_of_seg7 04CC  
                 ??_main 007E                   ??_seg7 0070                   _ADRESH 009C  
                 _ADRESL 009B                   ___lmul 0464                ??___aldiv 007C  
              ??___almod 007D                ??_readADC 0074                ??_init_IO 0070  
           ?_showNumbers 0070  __end_of__initialization 07FD             BinTOBcd@iADC 0038  
         __pcstackCOMMON 0070             __pidataBANK1 040F                ?_BinTOBcd 0038  
             __pbssBANK0 004A               __pmaintext 0544                  ?___lmul 0070  
         ___lmul@product 0078               ??_BinTOBcd 007E             ??_UART_print 0071  
           ??_UART_write 0070                  ___aldiv 0656                  ___almod 05DA  
              _ASCII_Con 03FC                BinTOBcd@r 0057               ASCII_Con@a 0070  
             ASCII_Con@b 0072               ASCII_Con@c 0074               ASCII_Con@r 004A  
     __end_of_UART_print 0439       __end_of_UART_write 03EF                  __ptext1 058B  
                __ptext2 04CC                  __ptext3 0497                  __ptext4 0439  
                __ptext5 0507                  __ptext6 03EF                  __ptext7 0423  
                __ptext8 03E6                  __ptext9 06E6        __end_of_init_UART 03FC  
                _readADC 0439                  _init_IO 0507         ___aldiv@dividend 0024  
                clrloop0 03DB     end_of_initialization 07FD                  init_ram 03E0  
                initloop 03E1                _RCSTAbits 019D              UART_write@c 0070  
       ___aldiv@quotient 002A               ?_ASCII_Con 0070               _showNumber 04CC  
              _TRISAbits 008C                _TRISBbits 008D                _TXSTAbits 019E  
         __end_of___lmul 0497              _BAUDCONbits 019F      start_initialization 07E9  
            _APFCON1bits 011E                 ??___lmul 0078              ??_ASCII_Con 0076  
            __pdataBANK1 00A0              ?_showNumber 0070                ___latbits 0001  
          __pcstackBANK0 0020                 ?___aldiv 0020                 ?___almod 002E  
       ___almod@dividend 0032                 ?_readADC 0070                 ?_init_IO 0070  
              _init_UART 03EF          ___aldiv@divisor 0020          ___aldiv@counter 0028  
               _LATAbits 010C                 _LATBbits 010D                clear_ram0 03DA  
              seg7@F2503 00A0               _ADCON0bits 009D               _ADCON1bits 009E  
               _BinTOBcd 06E6            ??_showNumbers 0073               ?_init_UART 0070  
      ___lmul@multiplier 0070        showNumbers@digits 0075         UART_print@cadena 0072  
             _ANSELAbits 018C               _ANSELBbits 018D                 __ptext10 0464  
               __ptext11 05DA                 __ptext12 0656                 __ptext13 03FC  
        ___almod@divisor 002E          ___almod@counter 0036      __end_of_showNumbers 05DA  
               main@iADC 0044                 seg7@iBCD 0034             ??_showNumber 0072  
               readADC@r 0079               _FVRCONbits 0117              ??_init_UART 0070  
     __end_of_showNumber 0507               _OSCCONbits 0099          showNumber@digit 0070  
            _showNumbers 058B             ___aldiv@sign 0029               _UART_print 0423  
             _UART_write 03E6             ___almod@sign 0037  
